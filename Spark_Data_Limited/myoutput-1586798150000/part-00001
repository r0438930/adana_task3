{"title_page": "Android application package", "text_new": "{{Infobox file format\n| name = '''APK'''\n| icon = \n| _noextcode = on\n| extension = {{code|.apk}}, {{code|.xapk}}\n| mime = {{code|application/vnd.android.package-archive}}\n| type code = \n| uniform type = \n| owner = \n| genre = [[Package format]]\n| container for = [[Mobile app]]s\n| contained by = \n| extended from = [[JAR (file format)|JAR]]\n| extended to = \n| standard = \n| url = \n}}\n'''[[Android (operating system)|Android]] Package''' ('''APK''')<ref>{{Cite web|url=https://developer.android.com/guide/components/fundamentals|title=Application Fundamentals {{!}} Android Developers|website=Android Developers|language=en|access-date=2018-12-03}}</ref> is the [[package format|package]] [[file format]] used by the [[Android (operating system)|Android]] operating system for distribution and installation of [[mobile app]]s, [[mobile games]] and [[middleware]].\n\nAPK is analogous to other [[Package (package management system)|software packages]] such as [[APPX]] in [[Microsoft Windows]] or a [[Deb (file format)|Debian package]] in [[Debian]]-based operating systems. To make an APK file, a program for Android is first compiled using [[Android Studio]]<ref>{{Cite web|url=https://developer.android.com/studio/intro|title=Application Studio {{!}} Android Studio|website=Android Developers|language=en}}</ref>, and then all of its parts are packaged into one container file. An APK file contains all of a program's code (such as [[.dex]] files), resources, assets, certificates, and [[manifest file]]. As is the case with many file formats, APK files can have any name needed, but it may be required that the file name ends in the [[Filename extension|file extension]] \".apk\" for being recognized as such.<ref>{{cite web |url=http://sites.google.com/site/io/inside-the-android-application-framework |title=Inside the Android Application Framework |year=2008 |work=Google Sites |format=video}}</ref><ref>{{cite web|url=http://openhandsetmagazine.com/2008/01/tips-how-to-install-apk-files-on-android-emulator/|title=Tips: How to install apk files on Android Emulator|author=Hatem Ben Yacoub|date=20 April 2018|work=Open Ha Magazine|archiveurl=https://www.webcitation.org/67xWVVys3|archivedate=2012-05-26|url-status=dead}}</ref><ref>{{cite web|url=http://en.ophonesdn.com/article/show/354 |archive-url=https://web.archive.org/web/20110208193918/http://en.ophonesdn.com/article/show/354 |url-status=dead |archive-date=8 February 2011 |title=The Structure of Android Package (APK) Files |date=17 November 2010 |work=OPhone SDN |publisher=OPhone Software Developer Network }}</ref><ref>{{cite web|url=http://forum.sdx-developers.com/index.php?topic=3472.0 |archive-url=https://archive.is/20120717114627/http://forum.sdx-developers.com/index.php?topic=3472.0 |url-status=dead |archive-date=17 July 2012 |title=Learn to Fish: General Structure of an APK |author=chibucks |date=28 May 2010 |work=SDX-Developers Forum |publisher=Simple Machines Forum }}</ref>\n\nThe Android system allows users to manually install APK files only after they turn on an \"Unknown Sources\" setting that allows installation from sources other than trusted ones like [[Google Play]]. One may do so for many reasons, such as to install apps not found on the store, or to install an older version.<ref>{{cite web |title=Unknown Sources: Everything you need to know! |url=https://www.androidcentral.com/unknown-sources |website=Android Central |date=27 July 2018}}</ref> Although one can downgrade an app this way by uninstalling the new version first, doing it via [[Android Debug Bridge]] is better as it allows for keeping data.<ref>{{cite web |title=How to Downgrade an App on Android - No Root Needed |url=https://www.xda-developers.com/downgrade-an-app-android-no-root/ |website=xda-developers |date=25 August 2017}}</ref>\n\n== Package contents ==\n<!-- Deleted image removed: [[File:Front and back of the Nexus 6P.jpg|thumb|Android phones, like the [[Nexus 6P]], allow installation of applications directly via APK files or indirectly via [[Google Play]]]] -->\nAn APK file is an [[archive file|archive]] that usually contains the following files and directories:\n* <code>META-INF</code> directory:\n**<code>MANIFEST.MF</code>: the [[Manifest file]]\n** The certificate of the application.\n** <code>CERT.SF</code>: The list of resources and a [[SHA-1]] [[Cryptographic hash function|digest]] of the corresponding lines in the MANIFEST.MF file; for example:<source lang=text>Signature-Version: 1.0\nCreated-By: 1.0 (Android)\nSHA1-Digest-Manifest: wxqnEAI0UA5nO5QJ8CGMwjkGGWE=\n...\nName: res/layout/exchange_component_back_bottom.xml\nSHA1-Digest: eACjMjESj7Zkf0cBFTZ0nqWrt7w=\nName: res/drawable-hdpi/icon.png\nSHA1-Digest: DGEqylP8W0n0iV/ZzBx3MW0WGCA=</source>\n* <code>lib</code>: the directory containing the compiled code that is platform dependent; the directory is split into more directories within it:\n** <code>armeabi</code>: compiled code for all [[ARM architecture|ARM]] based processors only\n** <code>armeabi-v7a</code>: compiled code for all ARMv7 and above based processors only\n** <code>arm64-v8a</code>: compiled code for all ARMv8 arm64 and above based processors only<ref>{{Cite web|url=https://developer.android.com/ndk/guides/abis.html|title=ABI Management {{!}} Android Developers|website=developer.android.com|access-date={{date|2018-06-16}}}}</ref>\n** <code>x86</code>: compiled code for [[x86]] processors only\n** <code>x86_64</code>: compiled code for [[x86 64]] processors only\n** <code>mips</code>: compiled code for [[MIPS architecture|MIPS]] processors only\n* <code>res</code>: the directory containing resources not compiled into resources.arsc (see below).\n* <code>assets</code>: a directory containing applications assets, which can be retrieved by <code>AssetManager</code>.\n* <code>AndroidManifest.xml</code>: An additional Android manifest file, describing the name, version, access rights, referenced library files for the application. This file may be in Android [[binary XML]] that can be converted into human-readable plaintext XML with tools such as [https://code.google.com/p/android4me/downloads/list AXMLPrinter2], [https://ibotpeaches.github.io/Apktool/ apktool], or [https://code.google.com/p/androguard/wiki/Usage#Androaxml Androguard].\n[https://apkers.in/ Apkers].\n* <code>classes.dex</code>: The classes compiled in the [[DEX (file format)|dex file format]] understandable by the [[Dalvik (software)|Dalvik virtual machine]] and by the [[Android Runtime]].\n* <code>resources.arsc</code>: a file containing precompiled resources, such as binary XML for example.\n\n== See also ==\n* [[Android Runtime]]\n* [[Android software development]]\n* [[Dalvik (software)]]\n* .[[deb (file format)]]\n* [[.ipa (file extension)]]\n\n== References ==\n{{Reflist}}\n\n{{Android|state=collapsed}}\n{{Archive formats}}\n\n[[Category:Android (operating system)|Application package]]\n[[Category:Archive formats]]\n", "text_old": "{{Infobox file format\n| name = '''APK'''\n| icon = \n| _noextcode = on\n| extension = {{code|.apk}}, {{code|.xapk}}\n| mime = {{code|application/vnd.android.package-archive}}\n| type code = \n| uniform type = \n| owner = \n| genre = [[Package format]]\n| container for = [[Mobile app]]s\n| contained by = \n| extended from = [[JAR (file format)|JAR]]\n| extended to = \n| standard = \n| url = \n}}\n'''[[Android (operating system)|Android]] Package''' ('''APK''')<ref>{{Cite web|url=https://developer.android.com/guide/components/fundamentals|title=Application Fundamentals {{!}} Android Developers|website=Android Developers|language=en|access-date=2018-12-03}}</ref> is the [[package format|package]] [[file format]] used by the [[Android (operating system)|Android]] operating system for distribution and installation of [[mobile app]]s, [[mobile games]] and [[middleware]].\n\nAPK is analogous to other [[Package (package management system)|software packages]] such as [[APPX]] in [[Microsoft Windows]] or a [[Deb (file format)|Debian package]] in [[Debian]]-based operating systems. To make an APK file, a program for Android is first compiled using [[Android Studio]]<ref>{{Cite web|url=https://developer.android.com/studio/intro|title=Application Studio {{!}} Android Studio|website=Android Developers|language=en}}</ref>, and then all of its parts are packaged into one container file. An APK file contains all of a program's code (such as [[.dex]] files), resources, assets, certificates, and [[manifest file]]. As is the case with many file formats, APK files can have any name needed, but it may be required that the file name ends in the [[Filename extension|file extension]] \".apk\" for being recognized as such.<ref>{{cite web |url=http://sites.google.com/site/io/inside-the-android-application-framework |title=Inside the Android Application Framework |year=2008 |work=Google Sites |format=video}}</ref><ref>{{cite web|url=http://openhandsetmagazine.com/2008/01/tips-how-to-install-apk-files-on-android-emulator/|title=Tips: How to install apk files on Android Emulator|author=Hatem Ben Yacoub|date=20 April 2018|work=Open Ha Magazine|archiveurl=https://www.webcitation.org/67xWVVys3|archivedate=2012-05-26|url-status=dead}}</ref><ref>{{cite web|url=http://en.ophonesdn.com/article/show/354 |archive-url=https://web.archive.org/web/20110208193918/http://en.ophonesdn.com/article/show/354 |url-status=dead |archive-date=8 February 2011 |title=The Structure of Android Package (APK) Files |date=17 November 2010 |work=OPhone SDN |publisher=OPhone Software Developer Network }}</ref><ref>{{cite web|url=http://forum.sdx-developers.com/index.php?topic=3472.0 |archive-url=https://archive.is/20120717114627/http://forum.sdx-developers.com/index.php?topic=3472.0 |url-status=dead |archive-date=17 July 2012 |title=Learn to Fish: General Structure of an APK |author=chibucks |date=28 May 2010 |work=SDX-Developers Forum |publisher=Simple Machines Forum }}</ref>\n\nThe Android system allows users to manually install APK files only after they turn on an \"Unknown Sources\" setting that allows installation from sources other than trusted ones like [[Google Play]]. One may do so for many reasons, such as to install apps not found on the store, or to install an older version.<ref>{{cite web |title=Unknown Sources: Everything you need to know! |url=https://www.androidcentral.com/unknown-sources |website=Android Central |date=27 July 2018}}</ref> Although one can downgrade an app this way by uninstalling the new version first, doing it via [[Android Debug Bridge]] is better as it allows for keeping data.<ref>{{cite web |title=How to Downgrade an App on Android - No Root Needed |url=https://www.xda-developers.com/downgrade-an-app-android-no-root/ |website=xda-developers |date=25 August 2017}}</ref>\n\n== Package contents ==\n<!-- Deleted image removed: [[File:Front and back of the Nexus 6P.jpg|thumb|Android phones, like the [[Nexus 6P]], allow installation of applications directly via APK files or indirectly via [[Google Play]]]] -->\nAn APK file is an [[archive file|archive]] that usually contains the following files and directories:\n* <code>META-INF</code> directory:\n**<code>MANIFEST.MF</code>: the [[Manifest file]]\n** The certificate of the application.\n** <code>CERT.SF</code>: The list of resources and a [[SHA-1]] [[Cryptographic hash function|digest]] of the corresponding lines in the MANIFEST.MF file; for example:<source lang=text>Signature-Version: 1.0\nCreated-By: 1.0 (Android)\nSHA1-Digest-Manifest: wxqnEAI0UA5nO5QJ8CGMwjkGGWE=\n...\nName: res/layout/exchange_component_back_bottom.xml\nSHA1-Digest: eACjMjESj7Zkf0cBFTZ0nqWrt7w=\nName: res/drawable-hdpi/icon.png\nSHA1-Digest: DGEqylP8W0n0iV/ZzBx3MW0WGCA=</source>\n* <code>lib</code>: the directory containing the compiled code that is platform dependent; the directory is split into more directories within it:\n** <code>armeabi</code>: compiled code for all [[ARM architecture|ARM]] based processors only\n** <code>armeabi-v7a</code>: compiled code for all ARMv7 and above based processors only\n** <code>arm64-v8a</code>: compiled code for all ARMv8 arm64 and above based processors only<ref>{{Cite web|url=https://developer.android.com/ndk/guides/abis.html|title=ABI Management {{!}} Android Developers|website=developer.android.com|access-date={{date|2018-06-16}}}}</ref>\n** <code>x86</code>: compiled code for [[x86]] processors only\n** <code>x86_64</code>: compiled code for [[x86 64]] processors only\n** <code>mips</code>: compiled code for [[MIPS architecture|MIPS]] processors only\n* <code>res</code>: the directory containing resources not compiled into resources.arsc (see below).\n* <code>assets</code>: a directory containing applications assets, which can be retrieved by <code>AssetManager</code>.\n* <code>AndroidManifest.xml</code>: An additional Android manifest file, describing the name, version, access rights, referenced library files for the application. This file may be in Android [[binary XML]] that can be converted into human-readable plaintext XML with tools such as [https://code.google.com/p/android4me/downloads/list AXMLPrinter2], [https://ibotpeaches.github.io/Apktool/ apktool], or [https://code.google.com/p/androguard/wiki/Usage#Androaxml Androguard].\n* <code>classes.dex</code>: The classes compiled in the [[DEX (file format)|dex file format]] understandable by the [[Dalvik (software)|Dalvik virtual machine]] and by the [[Android Runtime]].\n* <code>resources.arsc</code>: a file containing precompiled resources, such as binary XML for example.\n\n== See also ==\n* [[Android Runtime]]\n* [[Android software development]]\n* [[Dalvik (software)]]\n* .[[deb (file format)]]\n* [[.ipa (file extension)]]\n\n== References ==\n{{Reflist}}\n\n{{Android|state=collapsed}}\n{{Archive formats}}\n\n[[Category:Android (operating system)|Application package]]\n[[Category:Archive formats]]\n", "name_user": "Webhunterr", "label": "safe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Android_application_package"}
