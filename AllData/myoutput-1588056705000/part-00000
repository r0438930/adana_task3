{"title_page": "Argumentation framework", "text_new": "{{See also|Argumentation theory}}\n\nIn [[artificial intelligence]] and related fields, an '''argumentation framework''', '''argumentation system''' or '''argumentation  graph''', is a way to deal with contentious information and draw conclusions from it.\n\nIn an abstract argumentation framework,<ref>See Dung (1995)</ref> entry-level information is a set of abstract arguments that, for instance, represent data or a proposition. Conflicts between arguments are represented by a [[binary relation]] on the set of arguments. In concrete terms, you represent an argumentation framework with a [[directed graph]] such that the nodes are the arguments, and the arrows represent the attack relation.\nThere exist some extensions of the Dung's framework, like the logic-based argumentation frameworks<ref>See Besnard and Hunter (2001)</ref> or the value-based argumentation frameworks.<ref>see Bench-Capon (2002)</ref>\n\n== Abstract argumentation frameworks ==\n\n=== Formal framework ===\nAbstract argumentation frameworks, also called argumentation frameworks ''\u00e0 la Dung'', are defined formally as a pair:\n* A set of abstract elements called ''arguments'', denoted <math>A</math>\n* A binary relation on <math>A</math>, called ''attack relation'', denoted <math>R</math>\n\n[[Image:Argumentation Framework.svg|thumb|left|upright=1|The graph built from the system <math>S</math>.]]\nFor instance, the argumentation system <math>S = \\langle A, R \\rangle</math> with <math>A = \\{ a, b, c, d\\}</math> and <math>R = \\{(a,b), (b,c), (d,c) \\}</math> contains four arguments (<math>a, b, c</math> and <math>d</math>) and three attacks (<math>a</math> attacks <math>b</math>, <math>b</math> attacks <math>c</math> and <math>d</math> attacks <math>c</math>).\n\nDung defines some notions :\n* an argument <math>a \\in A</math> is acceptable with respect to <math>E \\subseteq A</math> if and only if <math>E</math> defends <math>a</math>, that is <math>\\forall b \\in A</math> such that <math>(b,a) \\in R, \\exists c \\in E</math> such that <math>(c,b) \\in R</math>,\n* a set of arguments <math>E</math> is conflict-free if there is no attack between its arguments, formally : <math>\\forall a, b \\in E, (a,b) \\not\\in R</math>,\n* a set of arguments <math>E</math> is admissible if and only if it is conflict-free and all its arguments are acceptable with respect to <math>E</math>.\n\n=== Different semantics of acceptance ===\n\n==== Extensions ====\nTo decide if an argument can be accepted or not, or if several arguments can be accepted together, Dung defines several semantics of acceptance that allows, given an argumentation system, sets of arguments (called ''extensions'') to be computed. For instance, given <math>S = \\langle A, R\\rangle</math>,\n* <math>E</math> is a complete extension of <math>S</math> only if it is an admissible set and every acceptable argument with respect to <math>E</math> belongs to <math>E</math>,\n* <math>E</math> is a preferred extension of <math>S</math> only if it is a maximal element (with respect to the set-theoretical inclusion) among the admissible sets with respect to <math>S</math>,\n* <math>E</math> is a stable extension of <math>S</math> only if it is a conflict-free set that attacks every argument that does not belong in <math>E</math> (formally, <math>\\forall a \\in A \\backslash E, \\exists b \\in E</math> such that <math>(b,a) \\in R</math>,\n* <math>E</math> is the (unique) grounded extension of <math>S</math> only if it is the smallest element (with respect to set inclusion) among the complete extensions of <math>S</math>.\nThere exists some inclusions between the sets of extensions built with these semantics :\n* Every stable extension is preferred,\n* Every preferred extension is complete,\n* The grounded extension is complete,\n* If the system is well-founded (there exists no infinite sequence <math>a_0,a_1,\\dots,a_n,\\dots</math> such that <math>\\forall i>0, (a_{i+1},a_{i}) \\in R</math>), all these semantics coincide\u2014only one extension is grounded, stable, preferred, and complete.\n\nSome other semantics have been defined.<ref>For instance,\n* ''Ideal'' : see Dung, Mancarella and Toni (2006)\n* ''Eager'' : see Caminada (2007)</ref>\n\nOne introduce the notation <math>Ext_\\sigma(S)</math> to note the set of <math>\\sigma</math>-extensions of the system <math>S</math>.\n<!--SME: what does that last sentence mean to say?-->\n\nIn the case of the system <math>S</math> in the figure above, <math>Ext_\\sigma(S) = \\{\\{a,d\\}\\}</math> for every Dung's semantic\u2014the system is well-founded. That explains why the semantics coincide, and the accepted arguments are: <math>a</math> and <math>d</math>.\n\n==== Labellings ====\nLabellings are a more expressive way than extensions to express the acceptance of the arguments. Concretely, a labelling is a mapping that associates every argument with a label ''in'' (the argument is accepted), ''out'' (the argument is rejected), or ''undec'' (the argument is undefined\u2014not accepted or refused).\nOne can also note a labelling as a set of pairs <math>(\\mathit{argument}, \\mathit{label})</math>.\n\nSuch a mapping does not make sense without additional constraint. The notion of reinstatement labelling guarantees the sense of the mapping. <math>L</math> is a reinstatement labelling on the system <math>S = \\langle A, R \\rangle</math> if and only if :\n* <math>\\forall a \\in A, L(a) = \\mathit{in}</math> if and only if <math>\\forall b \\in A</math> such that <math>(b,a) \\in R, L(b) = \\mathit{out}</math>\n* <math>\\forall a \\in A, L(a) = \\mathit{out}</math> if and only if <math>\\exists b \\in A</math> such that <math>(b,a) \\in R</math> and <math>L(b) = \\mathit{in}</math>\n* <math>\\forall a \\in A, L(a) = \\mathit{undec}</math> if and only if <math>L(a) \\neq \\mathit{in}</math> and <math>L(a) \\neq \\mathit{out}</math>\n\nOne can convert every extension into a reinstatement labelling: the arguments of the extension are ''in'', those attacked by an argument of the extension are ''out'', and the others are ''undec''. Conversely, one can build an extension from a reinstatement labelling just by keeping the arguments ''in''. Indeed, Caminada<ref>see Caminada (2006)</ref> proved that the reinstatement labellings and the complete extensions can be mapped in a [[Bijection|bijective]] way. Moreover, the other Datung's semantics can be associated to some particular sets of reinstatement labellings.\n\nReinstatement labellings distinguish arguments not accepted because they are attacked by accepted arguments from undefined arguments\u2014that is, those that are not defended cannot defend themselves. An argument is ''undec'' if it is attacked by at least another ''undec''. If it is attacked only  by arguments ''out'', it must be ''in'', and if it is attacked some argument ''in'', then it is ''out''.\n\nThe unique reinstatement labelling that corresponds to the system <math>S</math> above is <math>L = \\{(a,\\mathit{in}),(b,\\mathit{out}),(c,\\mathit{out}),(d,\\mathit{in})\\}</math>.\n\n=== Inference from an argumentation system ===\nIn the general case when several extensions are computed for a given semantic <math>\\sigma</math>, the agent that reasons from the system can use several mechanisms to infer information:<ref>see Touretzky et al.</ref>\n* ''Credulous inference'': the agent accepts an argument if it belongs to at least one of the <math>\\sigma</math>-extensions\u2014in which case, the agent risks accepting some arguments that are not acceptable together (<math>a</math> attacks <math>b</math>, and <math>a</math> and <math>b</math> each belongs to an extension)\n* ''Skeptical inference'': the agent accepts an argument only if it belongs to every <math>\\sigma</math>-extension. In this case, the agent risks deducing too little information (if the intersection of the extensions is empty or has a very small cardinal).\n\nFor these two methods to infer information, one can identify the set of accepted arguments, respectively <math>Cr_\\sigma(S)</math> the set of the arguments credulously accepted under the semantic <math>\\sigma</math>, and <math>Sc_\\sigma(S)</math> the set of arguments accepted skeptically under the semantic <math>\\sigma</math> (the <math>\\sigma</math> can be missed if there is no possible ambiguity about the semantic).\n\nOf course, when there is only one extension (for instance, when the system is well-founded), this problem is very simple: the agent accepts arguments of the unique extension and rejects others.\n\nThe same reasoning can be done with labellings that correspond to the chosen semantic : an argument can be accepted if it is ''in'' for each labelling and refused if it is ''out'' for each labelling, the others being in an undecided state (the status of the arguments can remind the epistemic states of a belief in the AGM framework for dynamic of beliefs<ref>see G\u00e4rdenfors (1988)</ref>).\n\n=== Equivalence between argumentation frameworks ===\nThere exists several criteria of equivalence between argumentation frameworks. Most of those criteria concern the sets of extensions or the set of accepted arguments.\nFormally, given a semantic <math>\\sigma</math> :\n* <math>\\mathit{EQ_1}</math> : two argumentation frameworks are equivalent if they have the same set of <math>\\sigma</math>-extensions, that is <math>S_1 \\equiv_1 S_2 \\Leftrightarrow Ext_\\sigma(S_1) = Ext_\\sigma(S_2)</math> ;\n* <math>\\mathit{EQ_2}</math> : two argumentation frameworks are equivalent if they accept skeptically the same arguments, that is <math>S_1 \\equiv_2 S_2 \\Leftrightarrow Sc_\\sigma(S_1) = Sc_\\sigma(S_2)</math> ;\n* <math>\\mathit{EQ_2}</math> : two argumentation frameworks are equivalent if they accept credulously the same arguments, that is <math>S_1 \\equiv_3 S_2 \\Leftrightarrow Cr_\\sigma(S_1) = Cr_\\sigma(S_2)</math>.\n\nThe strong equivalence<ref>see Oikarinen and Woltran (2001)</ref> says that two systems <math>S_1</math> and <math>S_2</math> are equivalent if and only if for all other system <math>S_3</math>, the union of <math>S_1</math> with <math>S_3</math> is equivalent (for a given criterion) with the union of <math>S_2</math> and <math>S_3</math>.<ref>the union of two systems represents here the system built from the union of the sets of arguments and the union of the attack relations</ref>\n\n== Other kinds ==\nThe abstract framework of Dung has been instantiated to several particular cases.\n\n=== Logic-based argumentation frameworks ===\nIn the case of logic-based argumentation frameworks, an argument is not an abstract entity, but a pair, where the first part is a minimal consistent set of formulae enough to prove the formula for the second part of the argument.\nFormally, an argument is a pair <math>(\\Phi,\\alpha)</math> such that\n* <math>\\Phi \\nvdash \\bot</math> \n* <math>\\Phi \\vdash \\alpha</math> \n* <math>\\Phi</math> is a minimal set of <math>\\Delta</math> satisfying <math>\\alpha</math> where <math>\\Delta</math> is a set of formulae used by the agent to reason.\n\nOne calls <math>\\alpha</math> a consequence of <math>\\Phi</math>, and <math>\\Phi</math> a support of <math>\\alpha</math>.\n\nIn this case, the attack relation is not given in an explicit way, as a subset of the Cartesian product <math>A \\times A</math>, but as a property that indicates if an argument attacks another. For instance,\n* Relation ''defeater'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta \\vdash \\neg (\\phi_1 \\wedge \\dots \\wedge \\phi_n)</math> for <math>\\{\\phi_1,\\dots,\\phi_n\\} \\subseteq \\Phi</math> \n* Relation ''undercut'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta =\\neg (\\phi_1 \\wedge \\dots \\wedge \\phi_n)</math> for <math>\\{\\phi_1,\\dots,\\phi_n\\} \\subseteq \\Phi</math>\n* Relation ''rebuttal'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta \\Leftrightarrow \\neg \\alpha</math> is a tautology\n\nGiven a particular attack relation, one can build a graph and reason in a similar way to the abstract argumentation frameworks (use of semantics to build extension, skeptical or credulous inference), the difference is that the information inferred from a logic based argumentation framework is a set of formulae (the consequences of the accepted arguments).\n\n=== Value-based argumentation frameworks ===\nThe value-based argumentation frameworks come from the idea that during an exchange of arguments, some can be ''stronger'' than others with respect to a certain value they advance, and so the success of an attack between arguments depends of the difference of these values.\n\nFormally, a value-based argumentation framework is a tuple <math>VAF = \\langle A, R, V, \\textit{val}, \\textit{valprefs} \\rangle </math> with <math>A</math> and <math>R</math> similar to the standard framework (a set of arguments and a binary relation on this set), <math>V</math> is a non empty set of values, <math>\\textit{val}</math> is a mapping that associates each element from <math>A</math> to an element from <math>V</math>, and <math>\\textit{valprefs}</math> is a preference relation (transitive, irreflexive and asymmetric) on <math>V \\times V</math>.\n\nIn this framework, an argument <math>a</math> defeats another argument <math>b</math> if and only if\n* <math>a</math> attacks <math>b</math> in the \"standard\" meaning: <math>(a,b) \\in R</math> ;\n* and <math>(\\textit{val}(b),val(a)) \\not\\in \\textit{valprefs}</math>, that is the value advanced by <math>b</math> is not preferred to the one advanced by <math>a</math>.\nOne remarks that an attack succeeds if both arguments are associated to the same value, or if there is no preference between their respective values.\n\n=== Assumption-based argumentation frameworks ===\nIn assumption-based argumentation (ABA) frameworks, arguments are defined as a set of rules and attacks are defined in terms of assumptions and contraries.\n\nFormally, an assumption-based argumentation framework is a tuple <math>\\langle \\mathcal{L}, \\mathcal{R}, \\mathcal{A}, \\overline{\\textvisiblespace} \\rangle</math>,<ref name=\":0\">{{Cite book|title=Argumentation in Artificial Intelligence|last=Dung|first=Phan Minh|last2=Kowalski|first2=Robert A.|last3=Toni|first3=Francesca|date=2009-01-01|publisher=Springer US|isbn=9780387981963|editor-last=Simari|editor-first=Guillermo|pages=199\u2013218|language=en|doi=10.1007/978-0-387-98197-0_10|editor-last2=Rahwan|editor-first2=Iyad|citeseerx = 10.1.1.188.2433}}</ref><ref>{{Cite journal|last=Bondarenko|first=A.|last2=Dung|first2=P. M.|last3=Kowalski|first3=R. A.|last4=Toni|first4=F.|date=1997-06-01|title=An abstract, argumentation-theoretic approach to default reasoning|journal=Artificial Intelligence|volume=93|issue=1|pages=63\u2013101|doi=10.1016/S0004-3702(97)00015-5}}</ref><ref>{{Cite journal|last=Toni|first=Francesca|date=2014-01-02|title=A tutorial on assumption-based argumentation|journal=Argument & Computation|volume=5|issue=1|pages=89\u2013117|doi=10.1080/19462166.2013.869878|issn=1946-2166|doi-access=free}}</ref> where\n*  <math>\\langle \\mathcal{L}, \\mathcal{R} \\rangle</math>  is a deductive system, where <math>\\mathcal{L}</math> is the language and <math>\\mathcal{R}</math> is the set of inference rules in the form of <math>s_0\\leftarrow s_1, \\dotsc, s_m</math>, for <math>m > 0</math> and <math>s_0, s_1, \\dotsc, s_m \\in \\mathcal{L}</math>;\n*  <math>\\mathcal{A}</math>, where <math>\\mathcal{A}\\subseteq\\mathcal{L}</math> is a non-empty set, named the ''assumptions'';\n*  <math>\\overline{\\textvisiblespace}</math> is a total mapping from <math>\\mathcal{A}</math> to <math>\\mathcal{L}</math>, where <math>\\overline{a}</math> is defined as the contrary of <math>a</math>.\nAs a consequence of defining an ABA, an argument can be represented in a [[Tree (data structure)|tree-form]].<ref name=\":0\" /> Formally, given a deductive system <math>\\langle \\mathcal{L}, \\mathcal{R} \\rangle</math> and set of assumptions <math>\\mathcal{A}\\subseteq\\mathcal{L}</math>, an argument<ref name=\":0\" /> for claim <math display=\"inline\">c\\in{\\mathcal{L}}</math> supported by <math>S\\subseteq\\mathcal{A}</math>, is a tree with nodes labelled by sentences in <math>\\mathcal{L}</math> or by symbol <math>\\tau</math>, such that:\n* The root is labelled by <math>c</math>\n* For each node <math>N</math>,\n** If <math>N</math> is a [[leaf node]], then <math>N</math> is labelled by either an assumption or by <math>\\tau</math>\n** If <math>N</math> is not a leaf node, then there is an inference rule <math>l_N\\leftarrow s_1, ... , s_m</math>, <math>(m \\geq 0)</math>, where <math>l_N</math>is the label of <math>N</math> and\n*** If <math>m = 0</math>, then the rule shall be <math>l_N\\leftarrow \\tau</math> (i.e. child of <math>N</math> is <math>\\tau</math>)\n*** Otherwise, <math>N</math> has <math>m</math> children, labelled by <math>s_1, ... , s_m</math>\n* <math>S</math> is the set of all assumptions labeling the leave nodes\nAn argument<ref name=\":0\" /> with claim <math>c</math> supported by a set of assumption <math>S</math> can also be denoted as <math>S\\vdash c </math>\n\n== See also ==\n{{Div col|colwidth=20em}}\n* [[Argument map]]\n* [[Argumentation theory]]\n* [[Defeater]]\n* [[Diagrammatic reasoning]]\n* [[Dialogical logic]]\n* [[Logic and dialectic]]\n* [[Logic of argumentation]]\n* [[Knowledge representation and reasoning]]\n* [[Probabilistic argumentation]]\n{{Div col end}}\n\n== Notes ==\n<references/>\n\n==References==\n{{refbegin}}\n*{{cite journal |author=Trevor Bench-Capon|title=Value-based argumentation frameworks |journal=9th International Workshop on Non-Monotonic Reasoning (NMR 2002)  |year= 2002 |pages=443\u2013454}}\n*{{cite journal |author1=Phillipe Besnard |author2=Anthony Hunter |title= A logic-based theory of deductive arguments |journal=Artificial Intelligence |volume=128 |issue=1\u20132  |year= 2001 |pages=203\u2013235 |doi=10.1016/s0004-3702(01)00071-6}}\n* {{cite book|author1=Philippe Besnard |author2=Anthony Hunter |title=Elements of Argumentation|editor=MIT Press |place=University of Michigan |year=2008}}\n*{{cite journal |author=Martin Caminada |title=On the Issue of Reinstatement in Argumentation |journal=JELIA |year=2006 |pages=111\u2013123}}\n*{{cite conference |author=Martin Caminada|title=Comparing Two Unique Extension Semantics for Formal Argumentation: Ideal and Eager |conference=19th Belgian-Dutch Conference on Artificial Intelligence (BNAIC 2007) |year= 2007}}\n*{{cite journal |author=Phan Minh Dung |title=On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming, and n\u2013person games |journal=Artificial Intelligence |volume=77 |issue= 2|pages=321\u2013357 |year=1995 |doi=10.1016/0004-3702(94)00041-X}}\n*{{cite journal |author1=Phan Minh Dung |author2=Paolo Mancarella |author3=Francesca Toni |title=Computing ideal sceptical argumentation |journal= Technical Report |year= 2006}}\n*{{cite book |author=Peter G\u00e4rdenfors |title=Knowledge in Flux: Modeling the Dynamics of Epistemic States|editor=MIT Press |place=Cambridge |year=1988}}\n*{{cite journal |author1=Emilia Oikarinen |author2=Stefan Woltran |title= Characterizing strong equivalence for argumentation frameworks |journal=Artificial Intelligence |volume=175 |issue=14\u201315 |year= 2001 |pages=1985\u20132009 |doi=10.1016/j.artint.2011.06.003|doi-access=free }}\n*{{cite book|author1=Iyad Rahwan |author2=Guillermo R. Simari |title=Argumentation in Artificial Intelligence|editor=Springer |place=Dordrecht |year=2009|bibcode=2009aai..book.....S }}\n*{{cite conference|author1=David S. Touretzky |author2=John F. Horty |author3=Richmond H. Thomason |title=A Clash of Intuitions: The Current State of Nonmonotonic Multiple Inheritance Systems |editor=Proceedings IJCAI 1987 |pages=476\u2013482 |year=1987 |url=http://ijcai.org/Past%20Proceedings/IJCAI-87-VOL1/PDF/094.pdf |url-status=dead |archiveurl=https://web.archive.org/web/20140806072614/http://ijcai.org/Past%20Proceedings/IJCAI-87-VOL1/PDF/094.pdf |archive-date=2014-08-06 }}\n{{refend}}\n\n[[Category:Artificial intelligence]]\n", "text_old": "{{See also|Argumentation theory}}\n\nIn [[artificial intelligence]] and related fields, an '''argumentation framework''', or '''argumentation system''', is a way to deal with contentious information and draw conclusions from it.\n\nIn an abstract argumentation framework,<ref>See Dung (1995)</ref> entry-level information is a set of abstract arguments that, for instance, represent data or a proposition. Conflicts between arguments are represented by a [[binary relation]] on the set of arguments. In concrete terms, you represent an argumentation framework with a [[directed graph]] such that the nodes are the arguments, and the arrows represent the attack relation.\nThere exist some extensions of the Dung's framework, like the logic-based argumentation frameworks<ref>See Besnard and Hunter (2001)</ref> or the value-based argumentation frameworks.<ref>see Bench-Capon (2002)</ref>\n\n== Abstract argumentation frameworks ==\n\n=== Formal framework ===\nAbstract argumentation frameworks, also called argumentation frameworks ''\u00e0 la Dung'', are defined formally as a pair:\n* A set of abstract elements called ''arguments'', denoted <math>A</math>\n* A binary relation on <math>A</math>, called ''attack relation'', denoted <math>R</math>\n\n[[Image:Argumentation Framework.svg|thumb|left|upright=1|The graph built from the system <math>S</math>.]]\nFor instance, the argumentation system <math>S = \\langle A, R \\rangle</math> with <math>A = \\{ a, b, c, d\\}</math> and <math>R = \\{(a,b), (b,c), (d,c) \\}</math> contains four arguments (<math>a, b, c</math> and <math>d</math>) and three attacks (<math>a</math> attacks <math>b</math>, <math>b</math> attacks <math>c</math> and <math>d</math> attacks <math>c</math>).\n\nDung defines some notions :\n* an argument <math>a \\in A</math> is acceptable with respect to <math>E \\subseteq A</math> if and only if <math>E</math> defends <math>a</math>, that is <math>\\forall b \\in A</math> such that <math>(b,a) \\in R, \\exists c \\in E</math> such that <math>(c,b) \\in R</math>,\n* a set of arguments <math>E</math> is conflict-free if there is no attack between its arguments, formally : <math>\\forall a, b \\in E, (a,b) \\not\\in R</math>,\n* a set of arguments <math>E</math> is admissible if and only if it is conflict-free and all its arguments are acceptable with respect to <math>E</math>.\n\n=== Different semantics of acceptance ===\n\n==== Extensions ====\nTo decide if an argument can be accepted or not, or if several arguments can be accepted together, Dung defines several semantics of acceptance that allows, given an argumentation system, sets of arguments (called ''extensions'') to be computed. For instance, given <math>S = \\langle A, R\\rangle</math>,\n* <math>E</math> is a complete extension of <math>S</math> only if it is an admissible set and every acceptable argument with respect to <math>E</math> belongs to <math>E</math>,\n* <math>E</math> is a preferred extension of <math>S</math> only if it is a maximal element (with respect to the set-theoretical inclusion) among the admissible sets with respect to <math>S</math>,\n* <math>E</math> is a stable extension of <math>S</math> only if it is a conflict-free set that attacks every argument that does not belong in <math>E</math> (formally, <math>\\forall a \\in A \\backslash E, \\exists b \\in E</math> such that <math>(b,a) \\in R</math>,\n* <math>E</math> is the (unique) grounded extension of <math>S</math> only if it is the smallest element (with respect to set inclusion) among the complete extensions of <math>S</math>.\nThere exists some inclusions between the sets of extensions built with these semantics :\n* Every stable extension is preferred,\n* Every preferred extension is complete,\n* The grounded extension is complete,\n* If the system is well-founded (there exists no infinite sequence <math>a_0,a_1,\\dots,a_n,\\dots</math> such that <math>\\forall i>0, (a_{i+1},a_{i}) \\in R</math>), all these semantics coincide\u2014only one extension is grounded, stable, preferred, and complete.\n\nSome other semantics have been defined.<ref>For instance,\n* ''Ideal'' : see Dung, Mancarella and Toni (2006)\n* ''Eager'' : see Caminada (2007)</ref>\n\nOne introduce the notation <math>Ext_\\sigma(S)</math> to note the set of <math>\\sigma</math>-extensions of the system <math>S</math>.\n<!--SME: what does that last sentence mean to say?-->\n\nIn the case of the system <math>S</math> in the figure above, <math>Ext_\\sigma(S) = \\{\\{a,d\\}\\}</math> for every Dung's semantic\u2014the system is well-founded. That explains why the semantics coincide, and the accepted arguments are: <math>a</math> and <math>d</math>.\n\n==== Labellings ====\nLabellings are a more expressive way than extensions to express the acceptance of the arguments. Concretely, a labelling is a mapping that associates every argument with a label ''in'' (the argument is accepted), ''out'' (the argument is rejected), or ''undec'' (the argument is undefined\u2014not accepted or refused).\nOne can also note a labelling as a set of pairs <math>(\\mathit{argument}, \\mathit{label})</math>.\n\nSuch a mapping does not make sense without additional constraint. The notion of reinstatement labelling guarantees the sense of the mapping. <math>L</math> is a reinstatement labelling on the system <math>S = \\langle A, R \\rangle</math> if and only if :\n* <math>\\forall a \\in A, L(a) = \\mathit{in}</math> if and only if <math>\\forall b \\in A</math> such that <math>(b,a) \\in R, L(b) = \\mathit{out}</math>\n* <math>\\forall a \\in A, L(a) = \\mathit{out}</math> if and only if <math>\\exists b \\in A</math> such that <math>(b,a) \\in R</math> and <math>L(b) = \\mathit{in}</math>\n* <math>\\forall a \\in A, L(a) = \\mathit{undec}</math> if and only if <math>L(a) \\neq \\mathit{in}</math> and <math>L(a) \\neq \\mathit{out}</math>\n\nOne can convert every extension into a reinstatement labelling: the arguments of the extension are ''in'', those attacked by an argument of the extension are ''out'', and the others are ''undec''. Conversely, one can build an extension from a reinstatement labelling just by keeping the arguments ''in''. Indeed, Caminada<ref>see Caminada (2006)</ref> proved that the reinstatement labellings and the complete extensions can be mapped in a [[Bijection|bijective]] way. Moreover, the other Datung's semantics can be associated to some particular sets of reinstatement labellings.\n\nReinstatement labellings distinguish arguments not accepted because they are attacked by accepted arguments from undefined arguments\u2014that is, those that are not defended cannot defend themselves. An argument is ''undec'' if it is attacked by at least another ''undec''. If it is attacked only  by arguments ''out'', it must be ''in'', and if it is attacked some argument ''in'', then it is ''out''.\n\nThe unique reinstatement labelling that corresponds to the system <math>S</math> above is <math>L = \\{(a,\\mathit{in}),(b,\\mathit{out}),(c,\\mathit{out}),(d,\\mathit{in})\\}</math>.\n\n=== Inference from an argumentation system ===\nIn the general case when several extensions are computed for a given semantic <math>\\sigma</math>, the agent that reasons from the system can use several mechanisms to infer information:<ref>see Touretzky et al.</ref>\n* ''Credulous inference'': the agent accepts an argument if it belongs to at least one of the <math>\\sigma</math>-extensions\u2014in which case, the agent risks accepting some arguments that are not acceptable together (<math>a</math> attacks <math>b</math>, and <math>a</math> and <math>b</math> each belongs to an extension)\n* ''Skeptical inference'': the agent accepts an argument only if it belongs to every <math>\\sigma</math>-extension. In this case, the agent risks deducing too little information (if the intersection of the extensions is empty or has a very small cardinal).\n\nFor these two methods to infer information, one can identify the set of accepted arguments, respectively <math>Cr_\\sigma(S)</math> the set of the arguments credulously accepted under the semantic <math>\\sigma</math>, and <math>Sc_\\sigma(S)</math> the set of arguments accepted skeptically under the semantic <math>\\sigma</math> (the <math>\\sigma</math> can be missed if there is no possible ambiguity about the semantic).\n\nOf course, when there is only one extension (for instance, when the system is well-founded), this problem is very simple: the agent accepts arguments of the unique extension and rejects others.\n\nThe same reasoning can be done with labellings that correspond to the chosen semantic : an argument can be accepted if it is ''in'' for each labelling and refused if it is ''out'' for each labelling, the others being in an undecided state (the status of the arguments can remind the epistemic states of a belief in the AGM framework for dynamic of beliefs<ref>see G\u00e4rdenfors (1988)</ref>).\n\n=== Equivalence between argumentation frameworks ===\nThere exists several criteria of equivalence between argumentation frameworks. Most of those criteria concern the sets of extensions or the set of accepted arguments.\nFormally, given a semantic <math>\\sigma</math> :\n* <math>\\mathit{EQ_1}</math> : two argumentation frameworks are equivalent if they have the same set of <math>\\sigma</math>-extensions, that is <math>S_1 \\equiv_1 S_2 \\Leftrightarrow Ext_\\sigma(S_1) = Ext_\\sigma(S_2)</math> ;\n* <math>\\mathit{EQ_2}</math> : two argumentation frameworks are equivalent if they accept skeptically the same arguments, that is <math>S_1 \\equiv_2 S_2 \\Leftrightarrow Sc_\\sigma(S_1) = Sc_\\sigma(S_2)</math> ;\n* <math>\\mathit{EQ_2}</math> : two argumentation frameworks are equivalent if they accept credulously the same arguments, that is <math>S_1 \\equiv_3 S_2 \\Leftrightarrow Cr_\\sigma(S_1) = Cr_\\sigma(S_2)</math>.\n\nThe strong equivalence<ref>see Oikarinen and Woltran (2001)</ref> says that two systems <math>S_1</math> and <math>S_2</math> are equivalent if and only if for all other system <math>S_3</math>, the union of <math>S_1</math> with <math>S_3</math> is equivalent (for a given criterion) with the union of <math>S_2</math> and <math>S_3</math>.<ref>the union of two systems represents here the system built from the union of the sets of arguments and the union of the attack relations</ref>\n\n== Other kinds ==\nThe abstract framework of Dung has been instantiated to several particular cases.\n\n=== Logic-based argumentation frameworks ===\nIn the case of logic-based argumentation frameworks, an argument is not an abstract entity, but a pair, where the first part is a minimal consistent set of formulae enough to prove the formula for the second part of the argument.\nFormally, an argument is a pair <math>(\\Phi,\\alpha)</math> such that\n* <math>\\Phi \\nvdash \\bot</math> \n* <math>\\Phi \\vdash \\alpha</math> \n* <math>\\Phi</math> is a minimal set of <math>\\Delta</math> satisfying <math>\\alpha</math> where <math>\\Delta</math> is a set of formulae used by the agent to reason.\n\nOne calls <math>\\alpha</math> a consequence of <math>\\Phi</math>, and <math>\\Phi</math> a support of <math>\\alpha</math>.\n\nIn this case, the attack relation is not given in an explicit way, as a subset of the Cartesian product <math>A \\times A</math>, but as a property that indicates if an argument attacks another. For instance,\n* Relation ''defeater'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta \\vdash \\neg (\\phi_1 \\wedge \\dots \\wedge \\phi_n)</math> for <math>\\{\\phi_1,\\dots,\\phi_n\\} \\subseteq \\Phi</math> \n* Relation ''undercut'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta =\\neg (\\phi_1 \\wedge \\dots \\wedge \\phi_n)</math> for <math>\\{\\phi_1,\\dots,\\phi_n\\} \\subseteq \\Phi</math>\n* Relation ''rebuttal'' : <math>(\\Psi,\\beta)</math> attacks <math>(\\Phi,\\alpha)</math> if and only if <math>\\beta \\Leftrightarrow \\neg \\alpha</math> is a tautology\n\nGiven a particular attack relation, one can build a graph and reason in a similar way to the abstract argumentation frameworks (use of semantics to build extension, skeptical or credulous inference), the difference is that the information inferred from a logic based argumentation framework is a set of formulae (the consequences of the accepted arguments).\n\n=== Value-based argumentation frameworks ===\nThe value-based argumentation frameworks come from the idea that during an exchange of arguments, some can be ''stronger'' than others with respect to a certain value they advance, and so the success of an attack between arguments depends of the difference of these values.\n\nFormally, a value-based argumentation framework is a tuple <math>VAF = \\langle A, R, V, \\textit{val}, \\textit{valprefs} \\rangle </math> with <math>A</math> and <math>R</math> similar to the standard framework (a set of arguments and a binary relation on this set), <math>V</math> is a non empty set of values, <math>\\textit{val}</math> is a mapping that associates each element from <math>A</math> to an element from <math>V</math>, and <math>\\textit{valprefs}</math> is a preference relation (transitive, irreflexive and asymmetric) on <math>V \\times V</math>.\n\nIn this framework, an argument <math>a</math> defeats another argument <math>b</math> if and only if\n* <math>a</math> attacks <math>b</math> in the \"standard\" meaning: <math>(a,b) \\in R</math> ;\n* and <math>(\\textit{val}(b),val(a)) \\not\\in \\textit{valprefs}</math>, that is the value advanced by <math>b</math> is not preferred to the one advanced by <math>a</math>.\nOne remarks that an attack succeeds if both arguments are associated to the same value, or if there is no preference between their respective values.\n\n=== Assumption-based argumentation frameworks ===\nIn assumption-based argumentation (ABA) frameworks, arguments are defined as a set of rules and attacks are defined in terms of assumptions and contraries.\n\nFormally, an assumption-based argumentation framework is a tuple <math>\\langle \\mathcal{L}, \\mathcal{R}, \\mathcal{A}, \\overline{\\textvisiblespace} \\rangle</math>,<ref name=\":0\">{{Cite book|title=Argumentation in Artificial Intelligence|last=Dung|first=Phan Minh|last2=Kowalski|first2=Robert A.|last3=Toni|first3=Francesca|date=2009-01-01|publisher=Springer US|isbn=9780387981963|editor-last=Simari|editor-first=Guillermo|pages=199\u2013218|language=en|doi=10.1007/978-0-387-98197-0_10|editor-last2=Rahwan|editor-first2=Iyad|citeseerx = 10.1.1.188.2433}}</ref><ref>{{Cite journal|last=Bondarenko|first=A.|last2=Dung|first2=P. M.|last3=Kowalski|first3=R. A.|last4=Toni|first4=F.|date=1997-06-01|title=An abstract, argumentation-theoretic approach to default reasoning|journal=Artificial Intelligence|volume=93|issue=1|pages=63\u2013101|doi=10.1016/S0004-3702(97)00015-5}}</ref><ref>{{Cite journal|last=Toni|first=Francesca|date=2014-01-02|title=A tutorial on assumption-based argumentation|journal=Argument & Computation|volume=5|issue=1|pages=89\u2013117|doi=10.1080/19462166.2013.869878|issn=1946-2166|doi-access=free}}</ref> where\n*  <math>\\langle \\mathcal{L}, \\mathcal{R} \\rangle</math>  is a deductive system, where <math>\\mathcal{L}</math> is the language and <math>\\mathcal{R}</math> is the set of inference rules in the form of <math>s_0\\leftarrow s_1, \\dotsc, s_m</math>, for <math>m > 0</math> and <math>s_0, s_1, \\dotsc, s_m \\in \\mathcal{L}</math>;\n*  <math>\\mathcal{A}</math>, where <math>\\mathcal{A}\\subseteq\\mathcal{L}</math> is a non-empty set, named the ''assumptions'';\n*  <math>\\overline{\\textvisiblespace}</math> is a total mapping from <math>\\mathcal{A}</math> to <math>\\mathcal{L}</math>, where <math>\\overline{a}</math> is defined as the contrary of <math>a</math>.\nAs a consequence of defining an ABA, an argument can be represented in a [[Tree (data structure)|tree-form]].<ref name=\":0\" /> Formally, given a deductive system <math>\\langle \\mathcal{L}, \\mathcal{R} \\rangle</math> and set of assumptions <math>\\mathcal{A}\\subseteq\\mathcal{L}</math>, an argument<ref name=\":0\" /> for claim <math display=\"inline\">c\\in{\\mathcal{L}}</math> supported by <math>S\\subseteq\\mathcal{A}</math>, is a tree with nodes labelled by sentences in <math>\\mathcal{L}</math> or by symbol <math>\\tau</math>, such that:\n* The root is labelled by <math>c</math>\n* For each node <math>N</math>,\n** If <math>N</math> is a [[leaf node]], then <math>N</math> is labelled by either an assumption or by <math>\\tau</math>\n** If <math>N</math> is not a leaf node, then there is an inference rule <math>l_N\\leftarrow s_1, ... , s_m</math>, <math>(m \\geq 0)</math>, where <math>l_N</math>is the label of <math>N</math> and\n*** If <math>m = 0</math>, then the rule shall be <math>l_N\\leftarrow \\tau</math> (i.e. child of <math>N</math> is <math>\\tau</math>)\n*** Otherwise, <math>N</math> has <math>m</math> children, labelled by <math>s_1, ... , s_m</math>\n* <math>S</math> is the set of all assumptions labeling the leave nodes\nAn argument<ref name=\":0\" /> with claim <math>c</math> supported by a set of assumption <math>S</math> can also be denoted as <math>S\\vdash c </math>\n\n== See also ==\n{{Div col|colwidth=20em}}\n* [[Argument map]]\n* [[Argumentation theory]]\n* [[Defeater]]\n* [[Diagrammatic reasoning]]\n* [[Dialogical logic]]\n* [[Logic and dialectic]]\n* [[Logic of argumentation]]\n* [[Knowledge representation and reasoning]]\n* [[Probabilistic argumentation]]\n{{Div col end}}\n\n== Notes ==\n<references/>\n\n==References==\n{{refbegin}}\n*{{cite journal |author=Trevor Bench-Capon|title=Value-based argumentation frameworks |journal=9th International Workshop on Non-Monotonic Reasoning (NMR 2002)  |year= 2002 |pages=443\u2013454}}\n*{{cite journal |author1=Phillipe Besnard |author2=Anthony Hunter |title= A logic-based theory of deductive arguments |journal=Artificial Intelligence |volume=128 |issue=1\u20132  |year= 2001 |pages=203\u2013235 |doi=10.1016/s0004-3702(01)00071-6}}\n* {{cite book|author1=Philippe Besnard |author2=Anthony Hunter |title=Elements of Argumentation|editor=MIT Press |place=University of Michigan |year=2008}}\n*{{cite journal |author=Martin Caminada |title=On the Issue of Reinstatement in Argumentation |journal=JELIA |year=2006 |pages=111\u2013123}}\n*{{cite conference |author=Martin Caminada|title=Comparing Two Unique Extension Semantics for Formal Argumentation: Ideal and Eager |conference=19th Belgian-Dutch Conference on Artificial Intelligence (BNAIC 2007) |year= 2007}}\n*{{cite journal |author=Phan Minh Dung |title=On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming, and n\u2013person games |journal=Artificial Intelligence |volume=77 |issue= 2|pages=321\u2013357 |year=1995 |doi=10.1016/0004-3702(94)00041-X}}\n*{{cite journal |author1=Phan Minh Dung |author2=Paolo Mancarella |author3=Francesca Toni |title=Computing ideal sceptical argumentation |journal= Technical Report |year= 2006}}\n*{{cite book |author=Peter G\u00e4rdenfors |title=Knowledge in Flux: Modeling the Dynamics of Epistemic States|editor=MIT Press |place=Cambridge |year=1988}}\n*{{cite journal |author1=Emilia Oikarinen |author2=Stefan Woltran |title= Characterizing strong equivalence for argumentation frameworks |journal=Artificial Intelligence |volume=175 |issue=14\u201315 |year= 2001 |pages=1985\u20132009 |doi=10.1016/j.artint.2011.06.003|doi-access=free }}\n*{{cite book|author1=Iyad Rahwan |author2=Guillermo R. Simari |title=Argumentation in Artificial Intelligence|editor=Springer |place=Dordrecht |year=2009|bibcode=2009aai..book.....S }}\n*{{cite conference|author1=David S. Touretzky |author2=John F. Horty |author3=Richmond H. Thomason |title=A Clash of Intuitions: The Current State of Nonmonotonic Multiple Inheritance Systems |editor=Proceedings IJCAI 1987 |pages=476\u2013482 |year=1987 |url=http://ijcai.org/Past%20Proceedings/IJCAI-87-VOL1/PDF/094.pdf |url-status=dead |archiveurl=https://web.archive.org/web/20140806072614/http://ijcai.org/Past%20Proceedings/IJCAI-87-VOL1/PDF/094.pdf |archive-date=2014-08-06 }}\n{{refend}}\n\n[[Category:Artificial intelligence]]\n", "name_user": "RexDotTech", "label": "safe", "comment": "addition of `argumentation graph'", "url_page": "//en.wikipedia.org/wiki/Argumentation_framework"}
