{"title_page": "Window function", "text_new": "{{Short description|function used in signal processing}}\n{{For|the term used in SQL statements|Window function (SQL)}}\n[[File:Hanning.png|thumb|A popular window function, the [[#Hann and Hamming windows|Hann window]].  Most popular window functions are similar bell-shaped curves.]]\n\nIn [[signal processing]] and [[statistics]], a '''window function''' (also known as an '''apodization function''' or '''tapering function'''<ref name=Weisstein/>) is a [[function (mathematics)|mathematical function]] that is zero-valued outside of some chosen [[interval (mathematics)|interval]], normally symmetric around the middle of the interval, usually near a maximum in the middle, and usually tapering away from the middle. Mathematically, when another function or waveform/data-sequence is \"multiplied\" by a window function, the product is also zero-valued outside the interval: all that is left is the part where they overlap, the \"view through the window\".  Equivalently, and in actual practice, the segment of data within the window is first isolated, and then only that data is multiplied by the window function values.  Thus, [[Tapering (mathematics)|tapering]], not segmentation, is the main purpose of window functions.\n\nThe reasons for examining segments of a longer function include detection of transient events and time-averaging of frequency spectra.  The duration of the segments is determined in each application by requirements like time and frequency resolution.  But that method also changes the frequency content of the signal by an effect called [[spectral leakage]].  Window functions allow us to distribute the leakage spectrally in different ways, according to the needs of the particular application.  There are many choices detailed in this article, but many of the differences are so subtle as to be insignificant in practice.\n\nIn typical applications, the window functions used are non-negative, smooth, \"bell-shaped\" curves.<ref name=Roads/> Rectangle, triangle, and other functions can also be used.  A rectangular window does not modify the data segment at all.  It's only for modelling purposes that we say it multiplies by 1 inside the window and by 0 outside.  A more general definition of window functions does not require them to be identically zero outside an interval, as long as the product of the window multiplied by its argument is [[square integrable]], and, more specifically, that the function goes sufficiently rapidly toward zero.<ref name=Cattani/>\n\n== Applications ==\n\nWindow functions are used in spectral [[frequency spectrum#spectral analysis|analysis]]/modification/[[Overlap\u2013add method#resynthesis|resynthesis]],<ref name=OLA/> the design of [[finite impulse response]] filters, as well as [[beamforming]] and [[Antenna (radio)|antenna]] design.\n\n=== Spectral analysis ===<!-- This section is linked from [[Discrete Fourier transform]] -->\n\nThe [[Fourier transform]] of the function cos&nbsp;''\u03c9t'' is zero, except at frequency&nbsp;\u00b1''\u03c9''.  However, many other functions and waveforms do not have convenient closed-form transforms. Alternatively, one might be interested in their spectral content only during a certain time period.\n\nIn either case, the Fourier transform (or a similar transform) can be applied on one or more finite intervals of the waveform.  In general, the transform is applied to the product of the waveform and a window function.  Any window (including rectangular) affects the spectral estimate computed by this method.\n\n[[File:Spectral_leakage_caused_by_%22windowing%22.svg|thumb|351px|Figure 2: Windowing a sinusoid causes spectral leakage. The same amount of leakage occurs whether there are an integer (blue) or non-integer (red) number of cycles within the window (rows 1 and 2). When the sinusoid is sampled and windowed, its discrete-time Fourier transform also exhibits the same leakage pattern (rows 3 and 4). But when the DTFT is only sparsely sampled, at a certain interval, it is possible (depending on your point of view) to: (1) avoid the leakage, or (2) create the illusion of no leakage. For the case of the blue DTFT, those samples are the outputs of the discrete Fourier transform (DFT). The red DTFT has the same interval of zero-crossings, but the DFT samples fall in-between them, and the leakage is revealed.]]\n\n==== Choice of window function ====\n\nWindowing of a simple waveform like cos&nbsp;''\u03c9t'' causes its Fourier transform to develop non-zero values (commonly called [[spectral leakage]]) at frequencies other than ''\u03c9''. The leakage tends to be worst (highest) near ''\u03c9'' and least at frequencies farthest from&nbsp;''\u03c9''.\n\nIf the waveform under analysis comprises two sinusoids of different frequencies, leakage can interfere with our ability to distinguish them spectrally. Possible types of interference are often broken down into two opposing classes as follows: If the component frequencies are dissimilar and one component is weaker, then leakage from the stronger component can obscure the weaker one's presence. But if the frequencies are too similar, leakage can render them ''unresolvable'' even when the sinusoids are of equal strength. Windows that are effective against the first type of interference, namely where components have dissimilar frequencies and amplitudes, are called ''high [[dynamic range]]''. Conversely, windows that can distinguish components with similar frequencies and amplitudes are called ''high resolution''.\n\nThe rectangular window is an example of a window that is ''high resolution'' but ''low dynamic range'', meaning it is good for distinguishing components of similar amplitude even when the frequencies are also close, but poor at distinguishing components of different amplitude even when the frequencies are far away. High-resolution, low-dynamic-range windows such as the rectangular window also have the property of high '''''sensitivity''''', which is the ability to reveal relatively weak sinusoids in the presence of additive random noise. That is because the noise produces a stronger response with high-dynamic-range windows than with high-resolution windows.\n\nAt the other extreme of the range of window types are windows with high dynamic range but low resolution and sensitivity. High-dynamic-range windows are most often justified in ''wideband applications'', where the spectrum being analyzed is expected to contain many different components of various amplitudes.\n\nIn between the extremes are moderate windows, such as [[#Hann and Hamming windows|Hamming]] and [[#Hann and Hamming windows|Hann]]. They are commonly used in ''narrowband applications'', such as the spectrum of a telephone channel.\n\nIn summary, spectral analysis involves a trade-off between resolving comparable strength components with similar frequencies (''high resolution / sensitivity'') and resolving disparate strength components with dissimilar frequencies (''high dynamic range''). That trade-off occurs when the window function is chosen.{{efn-la\n|[[#refNuttall|Nuttall 1981]], p 90}}\n\n==== Discrete-time signals ====\n\nWhen the input waveform is time-sampled, instead of continuous, the analysis is usually done by applying a window function and then a [[discrete Fourier transform]] (DFT). But the DFT provides only a sparse sampling of the actual [[discrete-time Fourier transform]] (DTFT) spectrum. Figure 2, row 3 shows a DTFT for a rectangularly-windowed sinusoid. The actual frequency of the sinusoid is indicated as \"13\" on the horizontal axis. Everything else is leakage, exaggerated by the use of a logarithmic presentation. The unit of frequency is \"DFT bins\"; that is, the integer values on the frequency axis correspond to the frequencies sampled by the DFT.  So the figure depicts a case where the actual frequency of the sinusoid coincides with a DFT sample, and the maximum value of the spectrum is accurately measured by that sample.  In row 4, it misses the maximum value by \u00bd bin, and the resultant measurement error is referred to as '''''scalloping loss''''' (inspired by the shape of the peak).  For a known frequency, such as a musical note or a sinusoidal test signal, matching the frequency to a DFT bin can be prearranged by choices of a sampling rate and a window length that results in an integer number of cycles within the window.\n\n[[File:Processing losses for 3 window functions.svg|thumb|400px|Figure 3: This figure compares the processing losses of three window functions for sinusoidal inputs, with both minimum and maximum scalloping loss.]]\n\n==== Noise bandwidth ====\n\nThe concepts of resolution and dynamic range tend to be somewhat subjective, depending on what the user is actually trying to do.  But they also tend to be highly correlated with the total leakage, which is quantifiable.  It is usually expressed as an equivalent bandwidth, B.  It can be thought of as redistributing the DTFT into a rectangular shape with height equal to the spectral maximum and width B.{{efn-ua\n|name=noise bandwidth|1=Mathematically, the noise equivalent bandwidth of transfer function ''H'' is the bandwidth of an ideal rectangular filter with the same peak gain as ''H'' that would pass the same power with [[white noise]] input.  In the units of frequency ''f'' (e.g. [[hertz]]), it is given by''':'''\n\n:<math> B_{\\text{noise}} = \\frac{1}{|H(f)|^2_{\\max}} \\int_0^{\\infty} |H(f)|^2 df.</math>\n}}<ref name=Carlson/>  The more the leakage, the greater the bandwidth.  It is sometimes called ''noise equivalent bandwidth'' or ''equivalent noise bandwidth'', because it is proportional to the average power that will be registered by each DFT bin when the input signal contains a random noise component (or '''is''' just random noise).  A graph of the [[power spectrum]], averaged over time, typically reveals a flat ''[[noise floor]]'', caused by this effect.  The height of the noise floor is proportional to B.  So two different window functions can produce different noise floors.\n\n==== Processing gain and losses ====\nIn [[signal processing]], operations are chosen to improve some aspect of quality of a signal by exploiting the differences between the signal and the corrupting influences.  When the signal is a sinusoid corrupted by additive random noise, spectral analysis distributes the signal and noise components differently, often making it easier to detect the signal's presence or measure certain characteristics, such as amplitude and frequency.  Effectively, the [[signal to noise ratio]] (SNR) is improved by distributing the noise uniformly, while concentrating most of the sinusoid's energy around one frequency.  ''Processing gain'' is a term often used to describe an SNR improvement.  The processing gain of spectral analysis depends on the window function, both its noise bandwidth (B) and its potential scalloping loss.  These effects partially offset, because windows with the least scalloping naturally have the most leakage.\n\nFigure 3 depicts the effects of three different window functions on the same data set, comprising two equal strength sinusoids in additive noise.  The frequencies of the sinusoids are chosen such that one encounters no scalloping and the other encounters maximum scalloping.  Both sinusoids suffer less SNR loss under the Hann window than under the [[Ralph Beebe Blackman|Blackman]]\u2013[[Fredric J. Harris|Harris]] window.  In general (as mentioned earlier), this is a deterrent to using high-dynamic-range windows in low-dynamic-range applications.\n\n=== Filter design ===\n\n{{Main|Filter design}}\n\nWindows are sometimes used in the design of [[digital filters]], in particular to convert an \"ideal\" impulse response of infinite duration, such as a [[sinc function]], to a [[finite impulse response]] (FIR) filter design.  That is called the [[Finite impulse response#Window design method|''window method'']].<ref name=Oppenheim/><ref name=FIRfilters/><ref name=Tuwien/>\n\n=== Statistics and curve fitting ===\n\n{{Main|kernel (statistics)}}\n\nWindow functions are sometimes used in the field of [[statistics|statistical analysis]] to restrict the set of data being analyzed to a range near a given point, with a [[Weighting | weighting factor]] that diminishes the effect of points farther away from the portion of the curve being fit. In the field of  Bayesian analysis and [[curve fitting]], this is often referred to as the [[kernel (statistics)|kernel]].\n\n=== Rectangular window applications ===\n\n==== Analysis of transients ====\n\nWhen analyzing a transient signal in [[modal analysis]], such as an impulse, a shock response, a sine burst, a chirp burst, or noise burst, where the energy vs time distribution is extremely uneven, the rectangular window may be most appropriate.  For instance, when most of the energy is located at the beginning of the recording, a non-rectangular window attenuates most of the energy, degrading the signal-to-noise ratio.<ref name=HPmemory/>\n\n==== Harmonic analysis ====\n\nOne might wish to measure the harmonic content of a musical note from a particular instrument or the harmonic distortion of an amplifier at a given frequency.  Referring again to '''Figure 2''', we can observe that there is no leakage at a discrete set of harmonically-related frequencies sampled by the DFT.  (The spectral nulls are actually zero-crossings, which cannot be shown on a logarithmic scale such as this.)  This property is unique to the rectangular window, and it must be appropriately configured for the signal frequency, as described above.\n\n[[File:Two 8-point Gaussian window functions.svg|thumb|300px|Figure 4: Two different ways to generate an 8-point Gaussian window sequence (\u03c3=0.4) for spectral analysis applications. MATLAB calls them \"symmetric\" and \"periodic\". The latter is also historically called ''DFT-even''.]]\n\n[[File:Spectral_leakage_from_two_8-point_Gaussian_windows.png|thumb|300px|Figure 5: Spectral leakage characteristics of the functions in Figure 4]]\n\n<!-- Probably too much information, too soon.\n[[File:Comparison of symmetric and periodic Gaussian windows.svg|thumb|300px|Figures 6a and 6b: Comparison of symmetric and periodic Gaussian windows]]\n-->\n\n===Symmetry===\n\nThe formulas provided in this article produce discrete sequences, as if a continuous window function has been \"sampled\". (see an example at [[Kaiser window]])&nbsp; Window sequences can be either '''symmetric''' or 1-sample short of symmetric (called '''asymmetric''' or '''periodic''').<ref name=MWhann/><ref name=MWwindow/>{{efn-ua\n|1=''Periodic'' is an oblique reference to the fact that symmetry around the n=0 axis is restored when the sequence is viewed as one full cycle of a periodic sequence.\n}}&nbsp; For instance, a symmetric sequence, with its maximum at a single center-point, is generated by the [[MATLAB]] function <code>hann(9,'symmetric')</code>.  Deleting the last sample produces a sequence identical to <code>hann(8,'periodic')</code>.  An even-length symmetric sequence has two equal center-points, but most window functions used in practice have a single peak value, whether they are symmetric or asymmetric.\n\nSome functions have one or two zero-valued end-points, which are unnecessary in most applications.  Deleting a zero-valued end-point has no effect on its DTFT (spectral leakage).  But the function designed for {{mvar|N}}+1 or {{mvar|N}}+2 samples, in anticipation of deleting one or both end points, typically has a slightly narrower main lobe, slightly higher sidelobes, and a slightly lower noise bandwidth.\n\n====DFT-even====\nThe terminology ''DFT-even'' ([[#refHarris|Harris 1978]], p 52) <!--{{efn-la|[[#refHarris|f.harris 1978]], p 52.}}--> describes a subclass of ''periodic'' (or ''asymmetric'') windows, characterized by only even-length sequences.  Some potential advantages (application-dependent) for spectral analysis (DFT) are:\n\n*Efficiency:  FFT algorithms are most efficient when the sequence length is an integer power-of-two.\n\n*Zero-valued DFT coefficients:  The DFT-even subset of [[#Cosine-sum windows]], including [[#Rectangular window]], have very few non-zero DFT coefficients.  We see the rectangular window effect in the third row of '''Figure 2'''.&nbsp; A cosine-sum example is [https://upload.wikimedia.org/wikipedia/commons/9/9b/DFT-even_Hann_window_%26_spectral_leakage.png  figure '''DFT-even Hann window'''], which shows that the {{mvar|N}}-point DFT of the sequence generated by hann({{mvar|N}},'periodic') has only 3 non-zero values.  All the other samples coincide with zero-crossings of the [[DTFT]].{{efn-ua\n|The sparse sampling of a DTFT only reveals the leakage into the DFT bins from a sinusoid whose frequency is also an integer DFT bin. The unseen sidelobes reveal the leakage to expect from sinusoids at other frequencies.{{efn-la\n|[[#refHarris|f.harris 1978]], fig 10, p 57.}} Thus, when choosing a window function, it is usually important to sample the DTFT more densely (as we do in the next section) and choose a window that suppresses the sidelobes to an acceptable level.\n}}  Besides the application already described at [[#Harmonic analysis]], this property is useful for real-time applications that require both windowed and non-windowed (rectangularly windowed) transforms,<ref name=Carlin/> because the windowed transforms can be  efficiently derived from the non-windowed transforms by [[Discrete Fourier transform#Convolution theorem duality|convolution]].{{efn-la\n|[[#refNuttall|Nuttall 1981]], p 85\n}}  In that application, real-valued DFT coefficients (next bullet) is also an efficiency multiplier.\n\n*Real-valued DFT coefficients:  [[#refHarris|Harris (1978)]] cites this as the DFT equivalent of earlier work, where windows for the DFT's predecessor ([[finite Fourier transform]]) are \"always an odd number of points and exhibit even symmetry about the origin\", which results in an entirely real-valued DTFT.\n\nThe [[DTFT]] is a continuous function of frequency <math>(f),</math> and the DFT is a method of sampling it.  But as Harris points out, the DFT requires an implied shift of the symmetric sequence from a domain {{nowrap|[\u2212''M'' \u2264 ''n'' \u2264 ''M''],}} known as a ''finite Fourier transform data window'', into {{nowrap|[0 \u2264 ''n'' \u2264 2''M''],}} a ''DFT data window''.  Effectively, the real-valued function being sampled is multiplied by a complex-valued phase function:  <math>e^{-i2\\pi f M}.</math>&nbsp;  Therefore, a straightforward DFT of length 2M+1 would sample at frequency intervals of 1/(2M+1), and the samples would be complex-valued, whereas samples at intervals of 1/(2M) are all real, although the odd-numbered ones are negated relative to the original DTFT.  To compute samples at intervals of 1/(2M), using a DFT, its length must be 2M.  Two methods available are simple truncation (deleting the last sample) and [[Discrete-time Fourier transform#L=N+1|''periodic summation'']] (combining the first and last samples by addition).  Both result in a sequence length of 2M, to which a '''DFT-even''' window can be applied.  The difference is that truncation affects the DTFT function being sampled, and periodic summation affects only the sampling intervals.\n\n*In both cases, only the window function itself will have real-valued DTFT samples.  Windowed data will generally lack the symmetry to preserve that characteristic.  But other than the predictable sign reversals, the phase component of the DTFT will be representative of the data, not the window function.\n\n*Truncation affects only the real components of the DTFT samples.  The imaginary ones remain zero-valued.  Harris attributes this effect to what he calls ''DFT-even symmetry''.  [https://upload.wikimedia.org/wikipedia/commons/9/91/Sampling_the_Discrete-time_Fourier_transform.svg Figure '''Sampling the DTFT'''] is an exaggerated example{{efn-ua\n|An abnormally wide and short Gaussian window is used.\n}} of both methods, also showing how real-valued samples are obtained from the complex DTFT.\n\n*The effect of truncation on spectral leakage is best understood in terms of the magnitude of the DTFT, shown in decibels.  At [https://upload.wikimedia.org/wikipedia/commons/a/a9/Comparison_of_symmetric_and_periodic_Gaussian_windows.svg figure '''Gaussian windows'''], the graph labeled ''DTFT periodic8'' is the DTFT of the truncated window labeled ''periodic DFT-even'' (both blue).  The green graph labeled ''DTFT symmetric9'' corresponds to the same window with its symmetry restored.  The DTFT samples, labeled ''DFT8 periodic summation'', are an example of using periodic summation to sample it at the same frequencies as the blue graph.\n\n== A list of window functions ==\n\nConventions''':'''\n\n*<math>w_0(x)</math> is a zero-phase function (symmetrical about x=0)<ref name=Zphase/>, continuous for <math>x \\in [-N/2, N/2],</math> where N is a positive integer (even or odd).<ref name=Rorabaugh/>\n\n*The sequence &nbsp;<math>\\{w[n] = w_0(n-N/2),\\quad 0\\le n \\le N\\}</math>&nbsp; is ''symmetric'', of length <math>N+1.</math>\n\n*<math>\\{w[n],\\quad 0\\le n \\le N-1\\}</math>&nbsp; is ''asymmetric'', of length <math>N.</math>{{efn-ua\n|Some authors limit their attention to this important subset and to even values of N.<ref name=f.harris/><ref name=Heinzel2002/>  But the window coefficient formulas are still the ones presented here.}}\n\n*The parameter '''B''' displayed on each spectral plot is the function's noise equivalent bandwidth metric, in units of ''DFT bins''.\n\n=== Rectangular window ===\n<!-- [[Boxcar window]] redirects here -->\n[[File:Window function and frequency response - Rectangular.svg|thumb|480px|right|Rectangular window]]\n\nThe rectangular window (sometimes known as the '''[[Boxcar function|boxcar]]''' or '''[[Dirichlet kernel|Dirichlet]] window''') is the simplest window, equivalent to replacing all but ''N'' values of a data sequence by zeros, making it appear as though the waveform suddenly turns on and off:\n\n:<math>w[n] = 1.</math>\n\nOther windows are designed to moderate these sudden changes, which reduces scalloping loss and improves dynamic range, as described above ({{slink||Spectral analysis}}).\n\nThe rectangular window is the 1st order ''B''-spline window as well as the 0th power [[#Power-of-sine/cosine_windows|Power-of-sine window]].\n{{clear}}\n\n=== ''B''-spline windows ===\n\n''B''-spline windows can be obtained as ''k''-fold convolutions of the rectangular window. They include the rectangular window itself (''k''&nbsp;=&nbsp;1), the [[#Triangular window]] (''k''&nbsp;=&nbsp;2) and the [[#Parzen window]] (''k''&nbsp;=&nbsp;4).<ref name=Toraichi89/> Alternative definitions sample the appropriate normalized [[B-spline|''B''-spline]] [[basis function]]s instead of convolving discrete-time windows. A ''k''th order ''B''-spline basis function is a piece-wise polynomial function of degree ''k''\u22121 that is obtained by ''k''-fold self-convolution of the [[rectangular function]].\n{{clear}}\n\n==== Triangular window ====\n[[File:Window function and its Fourier transform \u2013 Triangular (n = 0...N).svg|thumb|480px|right|Triangular window (with ''L''=''N+1'')]]\n\nTriangular windows are given by:\n\n:<math>w[n] = 1 - \\left|\\frac{n-\\frac{N}{2}}{\\frac{L}{2}}\\right|,\\quad 0\\le n \\le N</math>\n\nwhere ''L'' can be ''N'',<ref name=Bartlett/> ''N''+1,<ref name=f.harris/>\n<ref name=Tukey/><ref name=MWtriang/> or ''N''+2.<ref name=Welch1967/>&nbsp; The first one is also known as '''[[M. S. Bartlett|Bartlett]] window''' or '''[[Lip\u00f3t Fej\u00e9r|Fej\u00e9r]] window'''.  All three definitions converge at large ''N''.\n\nThe triangular window is the 2nd order ''B''-spline window.  The L=N form can be seen as the convolution of two N/2 width rectangular windows.  The Fourier transform of the result is the squared values of the transform of the half-width rectangular window.\n{{clear}}\n\n==== Parzen window ====\n[[File:Window function and frequency response - Parzen.svg|thumb|480px|right|Parzen window]]\n\n{{Distinguish|Kernel density estimation}}\nDefining &nbsp;{{math|L \u225c N+1}},&nbsp; the Parzen window, also known as the '''de la Vall\u00e9e Poussin window''',<ref name=f.harris/> is the 4th order ''B''-spline window given by:\n\n:<math>\nw_0(n) \\triangleq \\left\\{ \\begin{array}{ll}\n 1 - 6 \\left(\\frac{n}{L/2}\\right)^2 \\left(1 - \\frac{|n|}{L/2}\\right),\n & 0 \\le |n| \\le \\frac{L}{4} \\\\ \n 2 \\left(1 - \\frac{|n|}{L/2}\\right)^3\n & \\frac{L}{4} < |n| \\le \\frac{L}{2} \\\\ \n\\end{array} \\right\\}\n</math>\n:<math>w[n] = \\ w_0\\left(n-\\tfrac{N}{2}\\right),\\ 0 \\le n \\le N</math>\n\n{{clear}}\n\n[[File:Window function and frequency response - Welch.svg|thumb|480px|right|Welch window]]\n\n=== Other polynomial windows ===\n==== Welch window ====\n\nThe Welch window consists of a single [[parabola|parabolic]] section:\n\n:<math>w[n]=1 - \\left(\\frac{n-\\frac{N}{2}}{\\frac{N}{2}}\\right)^2,\\quad 0\\le n \\le N.</math><ref name=Welch1967/>\n\nThe defining [[quadratic polynomial]] reaches a value of zero at the samples just outside the span of the window.\n\n{{clear}}\n\n=== Sine window ===\n[[File:Window function and frequency response - Cosine.svg|thumb|480px|right|Sine window]]\n\n:<math>w[n] = \\sin\\left(\\frac{\\pi n}{N}\\right) = \\cos\\left(\\frac{\\pi n}{N} - \\frac{\\pi}{2}\\right),\\quad 0\\le n \\le N.</math>\n\nThe corresponding <math>w_0(n)\\,</math> function is a cosine without the \u03c0/2 phase offset.  So the ''sine window''<ref name=Bosi/> is sometimes also called ''cosine window''.<ref name=f.harris/> As it represents half a cycle of a sinusoidal function, it is also known variably as ''half-sine window''<ref name=Kido/> or ''half-cosine window''<ref name=Landisman/>.\n\nThe [[autocorrelation]] of a sine window produces a function known as the Bohman window.<ref name=MWbohman/>\n\n==== Power-of-sine/cosine windows ====\n\nThese window functions have the form:<ref name=PowCos/>\n\n:<math>w[n] = \\sin^\\alpha\\left(\\frac{\\pi n}{N}\\right) = \\cos^\\alpha\\left(\\frac{\\pi n}{N} - \\frac{\\pi}{2}\\right),\\quad 0\\le n \\le N.</math>\n\nThe [[#Rectangular window]] ({{math|1=\u03b1=0}}), the [[#Sine window]] ({{math|1=\u03b1=1}}), and the [[#Hann and Hamming windows|Hann window]] ({{math|1=\u03b1=2}}) are members of this family.\n\n{{clear}}\n\n=== Cosine-sum windows ===\nThis family is also known as ''[https://www.mathworks.com/help/signal/ug/generalized-cosine-windows.html generalized cosine windows]''.\n\n{{Equation box 1\n|indent =\n|title=\n|equation = {{NumBlk|:|<math>w[n] = \\sum_{k = 0}^{K} (-1)^k a_k\\; \\cos\\left( \\frac{2 \\pi k n}{N} \\right),\\quad 0\\le n \\le N.</math>|{{EquationRef|Eq.1}}}}\n|cellpadding= 6\n|border\n|border colour = #0073CF\n|background colour=#F5FFFA}}\n\nIn most cases, including the examples below, all coefficients ''a''<sub>''k''</sub>&nbsp;\u2265&nbsp;0.&nbsp; These windows have only 2''K''&nbsp;+&nbsp;1 non-zero N-point DFT coefficients, and they are all real-valued.{{efn-ua\n|1=The ''N''-point DFT of an ''N''-sample DFT-even Hann or Hamming window, for example, has only 3 DTFT samples that do not coincide with zero-crossings.  An illustration, for&nbsp;''N''=16, can be viewed at [https://commons.wikimedia.org/wiki/File:DFT-even_Hann_window_&_spectral_leakage.png '''DFT-even Hann window'''].\n}}\n\n==== Hann and Hamming windows{{anchor|Hamming window}} ====\n{{Main|Hann function}}\n[[File:Window function and its Fourier transform \u2013 Hann (n = 0...N).svg|thumb|480px|right|Hann window]]\n[[File:Window function and frequency response - Hamming (alpha = 0.53836, n = 0...N).svg|thumb|480px|right|Hamming window, a<sub>0</sub>&nbsp;=&nbsp;0.53836 and a<sub>1</sub>&nbsp;=&nbsp;0.46164. The original Hamming window would have a<sub>0</sub>&nbsp;=&nbsp;0.54 and a<sub>1</sub>&nbsp;=&nbsp;0.46.]]\n\nThe customary cosine-sum windows for case ''K''&nbsp;=&nbsp;1 have the form:\n\n:<math>w[n] = a_0 - \\underbrace{(1-a_0)}_{a_1}\\cdot \\cos\\left( \\tfrac{2 \\pi n}{N} \\right),\\quad 0\\le n \\le N,</math>\n\nwhich is easily (and often) confused with its zero-phase version:\n\n:<math>\n\\begin{align}\nw_0(n)\\ &= w\\left[ n+\\tfrac{N}{2}\\right]\\\\\n&= a_0 + a_1\\cdot \\cos \\left ( \\tfrac{2\\pi n}{N} \\right),\\quad -\\tfrac{N}{2} \\le  n \\le \\tfrac{N}{2}.\n\\end{align}\n</math>\n\nSetting &nbsp;<math>a_0 = 0.5</math>&nbsp; produces a '''Hann window:'''\n\n:<math>w[n] = 0.5\\; \\left[1 - \\cos \\left ( \\frac{2 \\pi n}{N} \\right) \\right] = \\sin^2 \\left ( \\frac{\\pi n}{N} \\right),</math><ref name=MWhann/>\n\nnamed after [[Julius von Hann]], and sometimes referred to as ''Hanning'', presumably due to its linguistic and formulaic similarities to the Hamming window.  It is also known as '''raised cosine''', because the zero-phase version, <math>w_0(n),</math> is one lobe of an elevated cosine function.\n\nThis function is a member of both the [[#Cosine-sum windows|cosine-sum]] and [[#Power-of-sine/cosine_windows|power-of-sine]] families.  Unlike the [[#Hann and Hamming windows|Hamming window]], the end points of the Hann window just touch zero.  The resulting [[Spectral leakage|side-lobes]] roll off at about 18&nbsp;dB per octave.<ref name=JOShann/>\n\nSetting &nbsp;<math>a_0</math>&nbsp; to approximately 0.54, or more precisely 25/46, produces the '''Hamming window,''' proposed by [[Richard W. Hamming]].  That choice places a zero-crossing at frequency 5\u03c0/(''N''&nbsp;\u2212&nbsp;1), which cancels the first sidelobe of the Hann window, giving it a height of about one-fifth that of the Hann window.<ref name=f.harris/><ref name=Enochson/><ref name=JOSHamming/>\nThe Hamming window is often called the '''Hamming blip''' when used for [[pulse shaping]].<ref name=sunar/><ref name=sunar2/><ref name=SRD/>\n\nApproximation of the coefficients to two decimal places substantially lowers the level of sidelobes,<ref name=f.harris/> to a nearly equiripple condition.<ref name=JOSHamming/> In the equiripple sense, the optimal values for the coefficients are a<sub>0</sub>&nbsp;=&nbsp;0.53836 and a<sub>1</sub>&nbsp;=&nbsp;0.46164.<ref name=JOSHamming/><ref name=Nuttall/>\n{{clear}}\n\n==== Blackman window ====\n[[File:Window function and its Fourier transform \u2013 Blackman (n = 0...N).svg|thumb|480px|right|Blackman window; {{math|1=\u03b1=0.16}}]]\n\nBlackman windows are defined as:\n:<math>w[n] = a_0 -  a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right) + a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)</math>\n\n:<math>a_0=\\frac{1-\\alpha}{2};\\quad a_1=\\frac{1}{2};\\quad a_2=\\frac{\\alpha}{2}.</math>\n\nBy common convention, the unqualified term ''Blackman window'' refers to Blackman's \"not very serious proposal\" of {{math|1=\u03b1=0.16}} (''a''<sub>0</sub>&nbsp;=&nbsp;0.42, ''a''<sub>1</sub>&nbsp;=&nbsp;0.5, ''a''<sub>2</sub>&nbsp;=&nbsp;0.08), which closely approximates the '''exact Blackman''',<ref name=MWBlackman/> with ''a''<sub>0</sub>&nbsp;=&nbsp;7938/18608&nbsp;\u2248&nbsp;0.42659, ''a''<sub>1</sub>&nbsp;=&nbsp;9240/18608&nbsp;\u2248&nbsp;0.49656, and ''a''<sub>2</sub>&nbsp;=&nbsp;1430/18608&nbsp;\u2248&nbsp;0.076849.<ref name=lvanl/> These exact values place zeros at the third and fourth sidelobes,<ref name=f.harris/> but result in a discontinuity at the edges and a 6&nbsp;dB/oct fall-off.  The truncated coefficients do not null the sidelobes as well, but have an improved 18&nbsp;dB/oct fall-off.<ref name=f.harris/><ref name=Blackman1959/>\n{{clear}}\n\n==== Nuttall window, continuous first derivative ====\n[[File:Window function and frequency response - Nuttall (continuous first derivative).svg|thumb|480px|right|Nuttall window, continuous first derivative]]\n\nThe continuous form of Nuttall window, <math>w_0(x),</math> and its first [[derivative]] are continuous everywhere, like the [[Hann function]]. That is, the function goes to 0 at {{nowrap|1=''x''= \u00b1''N''/2,}} unlike the Blackman\u2013Nuttall, Blackman\u2013Harris, and Hamming windows.  The Blackman window ({{math|1=\u03b1=0.16}}) is also continuous with continuous derivative at the edge, but the \"exact Blackman window\" is not.\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.355768;\\quad a_1=0.487396;\\quad a_2=0.144232;\\quad a_3=0.012604.</math>\n{{clear}}\n\n==== Blackman\u2013Nuttall window ====\n[[File:Window function and frequency response - Blackman-Nuttall.svg|thumb|480px|right|Blackman\u2013Nuttall window]]\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.3635819; \\quad a_1=0.4891775; \\quad a_2=0.1365995; \\quad a_3=0.0106411.</math>\n{{clear}}\n\n==== Blackman\u2013Harris window ====\n[[File:Window function and frequency response - Blackman-Harris.svg|thumb|480px|right|Blackman\u2013Harris window]]\n\nA generalization of the Hamming family, produced by adding more shifted sinc functions, meant to minimize side-lobe levels<ref name=JOSBlack/><ref name=JOSBlack3/>\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.35875;\\quad a_1=0.48829;\\quad a_2=0.14128;\\quad a_3=0.01168.</math>\n{{clear}}\n\n==== Flat top window ====\n[[File:Window function and frequency response - flat top.svg|thumb|480px|right|Flat Top window]]\n\nA flat top window is a partially negative-valued window that has minimal [[#Discrete-time_signals|scalloping loss]] in the frequency domain. That property is desirable for the measurement of amplitudes of sinusoidal frequency components.<ref name=Heinzel2002/><ref name=SWsmith/> Drawbacks of the broad bandwidth are poor frequency resolution and high [[#Noise bandwidth]].\n\nFlat top windows can be designed using low-pass filter design methods,<ref name=SWsmith/> or they may be of the usual [[#Cosine-sum windows|cosine-sum]] variety:\n\n:<math>\n\\begin{align}\nw[n] = a_0 &- a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)\\\\\n           &- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)+a_4 \\cos \\left ( \\frac{8 \\pi n}{N} \\right).\n\\end{align}\n</math>\n\nThe [https://www.mathworks.com/help/signal/ref/flattopwin.html Matlab variant] has these coefficients:\n:<math>a_0=0.21557895;\\quad a_1=0.41663158;\\quad a_2=0.277263158;\\quad a_3=0.083578947;\\quad a_4=0.006947368.</math>\n\nOther variations are available, such as sidelobes that roll off at the cost of higher values near the main lobe.<ref name=Heinzel2002/>\n{{clear}}\n\n==== Rife\u2013Vincent windows ====\n\nRife\u2013Vincent windows<ref name=Rife/> are customarily scaled for unity average value, instead of unity peak value.  The coefficient values below, applied to {{EquationNote|Eq.1}}, reflect that custom.\n\nClass I, Order 1 (K=1):&nbsp; <math>a_0=1;\\quad a_1=1</math> &nbsp; &nbsp; &nbsp; Functionally equivalent to the [[#Hann and Hamming windows|Hann window]].\n\nClass I, Order 2 (K=2):&nbsp; <math>a_0=1;\\quad a_1=\\tfrac{4}{3};\\quad a_2=\\tfrac{1}{3}</math>\n\nClass I is defined by minimizing the high-order sidelobe amplitude.  Coefficients for orders up to K=4 are tabulated.<ref name=Andria/>\n\nClass II minimizes the main-lobe width for a given maximum side-lobe.\n\nClass III is a compromise for which order ''K''&nbsp;=&nbsp;2 resembles the [[#Blackman window]].<ref name=Andria/><ref name=Schoukens/>\n\n{{clear}}\n\n=== Adjustable windows ===\n\n==== Gaussian window ====\n[[File:Window function and frequency response - Gaussian (sigma = 0.4).svg|thumb|480px|right|Gaussian window, ''\u03c3''&nbsp;=&nbsp;0.4]]\nThe Fourier transform of a [[Gaussian function|Gaussian]] is also a Gaussian (it is an [[eigenfunction]] of the Fourier transform).  Since the Gaussian function extends to infinity, it must either be truncated at the ends of the window, or itself windowed with another zero-ended window.<ref name=JOSGauss/>\n\nSince the log of a Gaussian produces a [[parabola]], this can be used for nearly exact quadratic interpolation in [[frequency estimation]].<ref name=JOSGauss2/><ref name=JOSGauss/><ref name=interpolation/>\n\n:<math>w[n]=\\exp\\left(-\\frac{1}{2} \\left ( \\frac{n-N/2}{\\sigma N/2} \\right)^{2}\\right),\\quad 0\\le n \\le N.</math>\n:<math>\\sigma \\le \\;0.5\\,</math>\n\nThe standard deviation of the Gaussian function is ''\u03c3''&nbsp;&middot;&nbsp;''N''/2 sampling periods.\n{{clear}}\n\n[[File:Window function and frequency response - Confined Gaussian (sigma t = 0.1).svg|thumb|480px|right|Confined Gaussian window, ''\u03c3''<sub>''t''</sub>&nbsp;=&nbsp;0.1]]\n\n==== Confined Gaussian window ====\nThe confined Gaussian window yields the smallest possible root mean square frequency width {{math|''\u03c3''{{sub|''&omega;''}}}} for a given temporal width &nbsp;{{math|(''N'' + 1) ''\u03c3''{{sub|''t''}}}}.<ref name=Starosielec2014/> These windows optimize the RMS time-frequency bandwidth products. They are computed as the minimum eigenvectors of a parameter-dependent matrix. The confined Gaussian window family contains the [[#Sine window|Sine window]] and the [[#Gaussian window|Gaussian window]] in the limiting cases of large and small {{math|''\u03c3''{{sub|''t''}}}}, respectively.\n{{clear}}\n\n[[File:Window function and frequency response - Approximate confined Gaussian (sigma t = 0.1).svg|thumb|480px|right|Approximate confined Gaussian window, {{math|1=''\u03c3''{{sub|''t''}}=0.1}}]]\n\n==== Approximate confined Gaussian window ====\n\nDefining &nbsp;{{math|''L'' \u225c ''N''+1}},&nbsp; a [[#Confined Gaussian window|Confined Gaussian window]] of temporal width &nbsp;{{math|''L'' \u00d7 ''\u03c3''{{sub|''t''}}}}&nbsp; is well approximated by:<ref name=Starosielec2014/>\n\n:<math>w[n] = G(n) - \\frac{G(-\\tfrac{1}{2})[G(n + L) + G(n - L)]}{G(-\\tfrac{1}{2} + L) + G(-\\tfrac{1}{2} - L)}</math>\n\nwhere <math>G</math> is a Gaussian function:\n\n::<math>G(x) = \\exp\\left(- \\left(\\cfrac{x - \\frac{N}{2}}{2 L \\sigma_t}\\right)^2\\right)</math>\n\nThe standard deviation of the approximate window is [[asymptotically equal]] (i.e. large values of {{math|''N''}}) to &nbsp;{{math|''L'' \u00d7 ''\u03c3''{{sub|''t''}}}}&nbsp; for &nbsp;{{math|''\u03c3{{sub|t}}'' < 0.14}}.<ref name=Starosielec2014/>\n{{clear}}\n\n==== Generalized normal window ====\nA more generalized version of the Gaussian window is the generalized normal window.<ref name=Chakraborty/> Retaining the notation from the [[Gaussian window]] above, we can represent this window as\n\n:<math>w[n,p]=\\exp\\left(-\\left ( \\frac{n-N/2}{\\sigma N/2} \\right)^{p}\\right)</math>\n\nfor any even <math>p</math>. At <math>p=2</math>, this is a Gaussian window and as <math>p</math> approaches <math>\\infty</math>, this approximates to a rectangular window. The [[Fourier transform]] of this window does not exist in a closed form for a general <math>p</math>. However, it demonstrates the other benefits of being smooth, adjustable bandwidth. Like the [[Tukey window]] discussed later, this window naturally offers a \"flat top\" to control the amplitude attenuation of a time-series (on which we don't have a control with Gaussian window). In essence, it offers a good (controllable) compromise, in terms of spectral leakage, frequency resolution and amplitude attenuation, between the Gaussian window and the rectangular window.\nSee also <ref name=Diethorn/> for a study on [[time-frequency representation]] of this window (or function).\n\n{{clear}}\n\n==== Tukey window ====\n[[File:Window function and frequency response - Tukey (alpha = 0.5).svg|thumb|480px|right|Tukey window, {{math|1=\u03b1=0.5}}]]\n\nDefining &nbsp;{{math|''L'' \u225c ''N''+1}},&nbsp; the Tukey window, also known as the ''cosine-tapered window'', can be regarded as a cosine lobe of width {{math|''L''\u03b1/2}} that is convolved with a rectangular window of width {{math|''L''(1 &minus; \u03b1/2)}}.\n:<math>\n\\left . \n\\begin{array}{lll}\nw[n] = \\frac{1}{2} \\left[1-\\cos \\left(\\frac{2\\pi n}{\\alpha L} \\right) \\right],\\quad & 0 \\le n < \\frac{\\alpha L}{2}\\\\\nw[n] = 1,\\quad & \\frac{\\alpha L}{2} \\le n \\le \\frac{N}{2}\\\\\nw[N-n] = w[n],\\quad & 0 \\le n \\le \\frac{N}{2}\n\\end{array}\\right\\}\n</math> &nbsp; <ref name=MWtukey/><ref name=Bloomfield/>\n\nAt {{math|1=\u03b1=0}} it becomes rectangular, and at {{math|1=\u03b1=1}} it becomes a Hann window.\n{{clear}}\n\n==== Planck-taper window ====\n[[File:Window function and frequency response - Planck-taper (epsilon = 0.1).svg|thumb|480px|Planck-taper window, ''\u03b5''&nbsp;=&nbsp;0.1]]\n\nThe so-called \"Planck-taper\" window is a [[bump function]] that has been widely used<ref name=Tu/> in the theory of [[partitions of unity]] in [[manifolds]].  It is [[Smooth function|smooth]] (a <math>C^\\infty</math> function) everywhere, but is exactly zero outside of a compact region, exactly one over an interval within that region, and varies smoothly and monotonically between those limits.  Its use as a window function in signal processing was first suggested in the context of [[gravitational-wave astronomy]], inspired by the [[Planck's law|Planck distribution]].<ref name=McKechan/> It is defined as a [[piecewise]] function''':'''\n:<math>\n\\left . \n\\begin{array}{lll}\nw[0] =  0, \\\\\nw[n] =  \\left(1 + \\exp\\left(\\frac{\\epsilon N}{n} - \\frac{\\epsilon N}{\\epsilon N - n}\\right)\\right)^{-1},\\quad & 1 \\le n < \\epsilon N \\\\\nw[n] =  1,\\quad & \\epsilon N \\le n \\le \\frac{N}{2} \\\\\nw[N-n] = w[n],\\quad & 0 \\le n \\le \\frac{N}{2}\n\\end{array}\\right\\}\n</math>\n\nThe amount of tapering is controlled by the parameter ''\u03b5'', with smaller values giving sharper transitions.\n\n{{clear}}\n\n==== DPSS or Slepian window ====\n\nThe DPSS (discrete prolate spheroidal sequence) or Slepian window [[Spectral concentration problem|maximizes the energy concentration in the main lobe]],<ref name=Slepian/> and is used in [[multitaper]] spectral analysis, which averages out noise in the spectrum and reduces information loss at the edges of the window.\n\nThe main lobe ends at a frequency bin given by the parameter ''\u03b1''.<ref name=KaiserDPSS/>\n{|\n|[[File:Window function and frequency response - DPSS (alpha = 2).svg|thumb|480px|right|DPSS window, ''\u03b1''&nbsp;=&nbsp;2]]\n|[[File:Window function and frequency response - DPSS (alpha = 3).svg|thumb|480px|right|DPSS window, ''\u03b1''&nbsp;=&nbsp;3]]\n|}\nThe Kaiser windows below are created by a simple approximation to the DPSS windows:\n{|\n|[[File:Window function and frequency response - Kaiser (alpha = 2).svg|thumb|480px|right|Kaiser window, ''\u03b1''&nbsp;=&nbsp;2]]\n|[[File:Window function and frequency response - Kaiser (alpha = 3).svg|thumb|480px|right|Kaiser window, ''\u03b1''&nbsp;=&nbsp;3]]\n|}\n\n==== Kaiser window ====\n\n{{Main|Kaiser window}}\nThe Kaiser, or Kaiser-Bessel, window is a simple approximation of the [[#DPSS or Slepian window|DPSS window]] using [[Bessel function]]s, discovered by [[James Kaiser]].<ref name=Kaiser1966/><ref name=Kaiser1964/>\n\n:<math>w[n]=\\frac{I_0\\left(\\pi\\alpha \\sqrt{1-\\left(\\frac{2 n}{N}-1\\right)^2}\\right)}{I_0(\\pi\\alpha)},\\quad 0\\le n \\le N</math> &nbsp; &nbsp;{{efn-la\n|[[#refHarris|f.harris 1978]], p 73}}{{efn-ua\n|The Kaiser window is often parametrized by {{math|\u03b2}}, where {{math|1=\u03b2 = \u03c0\u03b1}}.{{efn-la\n|[[#refOppenheim|Oppenheim & Schafer 1999]], p 474.}}<ref name=Rabiner/><ref name=Crochiere/>\n<ref name=Vaidyanathan/><ref name=JOSKaiser/><ref name=KaiserDPSS/><ref name=MWkaiser/>&nbsp; The alternative use of just {{math|\u03b1}} facilitates comparisons to the DPSS windows.<ref name=Kaiser_Window.html/>\n}}\n:<math>\nw_0(n) = \\frac{I_0\\left(\\pi\\alpha \\sqrt{1-\\left(\\frac{2 n}{N}\\right)^2}\\right)}{I_0(\\pi\\alpha)},\\quad -N/2 \\le n \\le N/2</math>\n\nwhere <math>I_0</math> is the zero-th order modified Bessel function of the first kind.  Variable parameter <math>\\alpha</math> determines the tradeoff between main lobe width and side lobe levels of the spectral leakage pattern.&nbsp;  The main lobe width, in between the nulls, is given by &nbsp;<math>2\\sqrt{1 + \\alpha^2},</math>&nbsp; in units of DFT bins,<ref name=Kaiser1980/>&nbsp; and a typical value of <math>\\alpha</math> is 3.\n\n{{clear}}\n\n==== Dolph\u2013Chebyshev window ====\n[[File:Window function and frequency response - Dolph-Chebyshev (alpha = 5).svg|thumb|480px|right|Dolph\u2013Chebyshev window, ''\u03b1''&nbsp;=&nbsp;5]]\n\nMinimizes the [[Uniform norm|Chebyshev norm]] of the side-lobes for a given main lobe width.<ref name=Dolph/>\n\nThe zero-phase Dolph\u2013Chebyshev window function <math>w_0[n]</math> is usually defined in terms of its real-valued discrete Fourier transform, <math>W_0[k]</math>:<ref name=DolphDef/>\n\n:<math>\nW_0(k) = \\frac{T_{N}  \\big(\\beta \\cos\\left(\\frac{\\pi k}{N+1}\\right)\\big)}{T_{N}  (\\beta)}\n  = \\frac{T_N    \\big(\\beta \\cos\\left(\\frac{\\pi k}{N+1}\\right)\\big)}{10^\\alpha},\\ 0 \\le k \\le N.\n</math>\n\n''T''<sub>''n''</sub>(''x'') is the ''n''-th [[Chebyshev polynomials|Chebyshev polynomial]] of the first kind evaluated in ''x'', which can be computed using\n\n:<math>T_n(x) =\\begin{cases}\n\\cos\\!\\big(n \\cos^{-1}(x) \\big) & \\text{if }-1 \\le x \\le 1 \\\\\n\\cosh\\!\\big(n \\cosh^{-1}(x) \\big) & \\text{if }x \\ge 1 \\\\ \n(-1)^n \\cosh\\!\\big(n \\cosh^{-1}(-x) \\big) & \\text{if }x \\le -1,\n\\end{cases}</math>\n\nand\n\n:<math>\\beta = \\cosh\\!\\big(\\tfrac{1}{N} \\cosh^{-1}(10^\\alpha)\\big)</math>\n\nis the unique positive real solution to <math>T_N(\\beta) = 10^\\alpha</math>, where the parameter ''\u03b1'' sets the Chebyshev norm of the sidelobes to \u221220''\u03b1''&nbsp;decibels.<ref name=Dolph/>\n\nThe window function can be calculated from ''W''<sub>0</sub>(''k'') by an inverse [[discrete Fourier transform]] (DFT):<ref name=Dolph/>\n\n:<math>w_0(n) = \\frac{1}{N+1} \\sum_{k=0}^N W_0(k) \\cdot e^{i 2 \\pi k n / (N+1)},\\ -N/2 \\le n \\le N/2.</math>\n\nThe ''lagged'' version of the window can be obtained by:\n\n:<math>w[n] = w_0\\left(n-\\frac{N}{2}\\right),\\quad 0 \\le n \\le N,</math>\n\nwhich for even values of N must be computed as follows:\n\n:<math>\\begin{align}\nw_0\\left(n-\\frac{N}{2}\\right) \n= \\frac{1}{N+1} \\sum_{k=0}^{N} W_0(k) \\cdot e^{\\frac{i 2 \\pi k (n-N/2)}{N+1}}\n= \\frac{1}{N+1} \\sum_{k=0}^{N} \\left[ \\left(-e^{\\frac{i\\pi}{N+1}}\\right)^k \\cdot W_0(k)\\right] e^{\\frac{i 2 \\pi k n}{N+1}},\n\\end{align}</math>\n\nwhich is an inverse DFT of &nbsp;<math>\\left(-e^{\\frac{i\\pi}{N+1}}\\right)^k\\cdot W_0(k).</math>\n\nVariations:\n*Due to the equiripple condition, the time-domain window has discontinuities at the edges.  An approximation that avoids them, by allowing the equiripples to drop off at the edges, is a [http://www.mathworks.com/help/signal/ref/taylorwin.html Taylor window].\n*An alternative to the inverse DFT definition is also available.[http://practicalcryptography.com/miscellaneous/machine-learning/implementing-dolph-chebyshev-window/].\n{{clear}}\n\n==== Ultraspherical window ====\n[[File:Window function and frequency response - Ultraspherical (mu = -0.5).svg|thumb|480px|right|The Ultraspherical window's ''\u00b5'' parameter determines whether its Fourier transform's side-lobe amplitudes decrease, are level, or (shown here) increase with frequency.]]\n\nThe Ultraspherical window was introduced in 1984 by Roy Streit<ref name=Kabal/> and has application in  antenna array design,<ref name=Streit/> non-recursive filter design,<ref name=Kabal/> and spectrum analysis.<ref name=Deczky/>\n\nLike other adjustable windows, the Ultraspherical window has parameters that can be used to control its Fourier transform main-lobe width and relative side-lobe amplitude. Uncommon to other windows, it has an additional parameter which can be used to set the rate at which side-lobes decrease (or increase) in amplitude.<ref name=Deczky/><ref name=Bergen/>\n\nThe window can be expressed in the time-domain as follows:<ref name=Deczky/>\n\n:<math>\\begin{align}\nw[n] \n= \\frac{1}{N+1} \\left[ C^{\\mu}_{N}(x_0)+\\sum_{k=1}^{\\frac{N}{2}}  C^{\\mu}_{N}\\left(x_{0}\\cos\\frac{k\\pi}{N+1}\\right)\\cos\\frac{2n\\pi k}{N+1} \\right]\n\\end{align}</math>\n\nwhere <math>C^{\\mu}_{N}</math> is the [[Ultraspherical polynomial]] of degree N, and <math>x_0</math> and <math>\\mu</math> control the side-lobe patterns.<ref name=Deczky/>\n\nCertain specific values of <math>\\mu</math> yield other well-known windows: <math>\\mu=0</math> and <math>\\mu=1</math> give the Dolph\u2013Chebyshev and Saram\u00e4ki windows respectively.<ref name=Kabal/> See [http://octave.sourceforge.net/signal/function/ultrwin.html here] for illustration of Ultraspherical windows with varied parametrization.\n{{clear}}\n\n==== Exponential or Poisson window ====\n[[File:Window function and frequency response - Exponential (half window decay).svg|thumb|480px|Exponential window, ''\u03c4''&nbsp;=&nbsp;''N''/2]]\n[[File:Window function and frequency response - Exponential (60dB decay).svg|thumb|480px|Exponential window, ''\u03c4''&nbsp;=&nbsp;(''N''/2)/(60/8.69)]]\n\nThe Poisson window, or more generically the exponential window increases exponentially towards the center of the window and decreases exponentially in the second half. Since the [[exponential function]] never reaches zero, the values of the window at its limits are non-zero (it can be seen as the multiplication of an exponential function by a rectangular window <ref name=JOSPoisson/>). It is defined by\n\n:<math>w[n]=e^{-\\left|n-\\frac{N}{2}\\right|\\frac{1}{\\tau}},</math>\n\nwhere ''\u03c4'' is the time constant of the function. The exponential function decays as ''e''&nbsp;\u2243&nbsp;2.71828 or approximately 8.69&nbsp;dB per time constant.<ref name=Gade/>\nThis means that for a targeted decay of ''D''&nbsp;dB over half of the window length, the time constant ''\u03c4'' is given by\n\n:<math>\\tau = \\frac{N}{2}\\frac{8.69}{D}.</math>\n{{clear}}\n\n=== Hybrid windows ===\n\nWindow functions have also been constructed as multiplicative or additive combinations of other windows.\n\n==== Bartlett\u2013Hann window ====\n[[File:Window function and frequency response - Bartlett-Hann.svg|thumb|480px|right|Bartlett\u2013Hann window]]\n\n:<math>w[n]=a_0 - a_1 \\left |\\frac{n}{N}-\\frac{1}{2} \\right| - a_2 \\cos \\left (\\frac{2 \\pi n}{N}\\right )</math>\n\n:<math>a_0=0.62;\\quad a_1=0.48;\\quad a_2=0.38\\,</math>\n{{clear}}\n\n==== Planck\u2013Bessel window ====\n\n[[File:Window function and frequency response - Planck-Bessel (epsilon = 0.1, alpha = 4.45).svg|thumb|480px|right|Planck\u2013Bessel window, ''\u03b5''&nbsp;=&nbsp;0.1, ''\u03b1''&nbsp;=&nbsp;4.45]]\n\nA [[#Planck-taper window]] multiplied by a [[Kaiser window]] which is defined in terms of a [[Modified Bessel function#Modified Bessel functions : I.CE.B1.2C K.CE.B1|modified Bessel function]]. This hybrid window function was introduced to decrease the peak side-lobe level of the Planck-taper window while still exploiting its good asymptotic decay.<ref name=Berry/> It has two tunable parameters, ''\u03b5'' from the Planck-taper and ''\u03b1'' from the Kaiser window, so it can be adjusted to fit the requirements of a given signal.\n\n{{clear}}\n\n==== Hann\u2013Poisson window ====\n[[File:Window function and frequency response - Hann-Poisson (alpha = 2).svg|thumb|480px|Hann\u2013Poisson window, ''\u03b1''&nbsp;=&nbsp;2]]\nA [[#Hann and Hamming windows|Hann window]] multiplied by a [[#Exponential_or_Poisson_window|Poisson window]], which has no side-lobes, in the sense that its Fourier transform drops off forever away from the main lobe.  It can thus be used in [[hill climbing]] algorithms like [[Newton's method]].<ref name=HannPoisson/> The Hann\u2013Poisson window is defined by:\n\n:<math>w[n]=\\frac{1}{2}\\left(1-\\cos\\left(\\frac{2 \\pi n}{N}\\right)\\right)e^\\frac{-\\alpha\\left|N - 2n\\right|}{N}\\,=\\operatorname{hav}\\left(\\frac{2 \\pi n}{N}\\right)e^\\frac{-\\alpha\\left|N - 2n\\right|}{N}\\,</math>\n\nwhere ''\u03b1'' is a parameter that controls the slope of the exponential.\n{{Clear}}\n\n=== Other windows ===\n\n==== Lanczos window ====\n[[File:Window function and frequency response - Lanczos.svg|thumb|480px|right|Sinc or Lanczos window]]\n:<math>w[n] = \\operatorname{sinc}\\left(\\frac{2n}{N}-1\\right)</math>\n\n* used in [[Lanczos resampling]]\n* for the Lanczos window, <math>\\operatorname{sinc}(x)</math> is defined as <math>\\sin(\\pi x)/\\pi x</math>\n* also known as a ''sinc window'', because''':'''\n::<math>w_0(n) = \\operatorname{sinc}\\left(\\frac{2n}{N}\\right)\\,</math> is the main lobe of a normalized [[sinc function]]\n{{clear}}\n\n== Comparison of windows ==\n\n[[File:Window functions in the frequency domain.png|thumb|500px|right|Window functions in the frequency domain (\"spectral leakage\")]]\n\nWhen selecting an appropriate window function for an application, this comparison graph may be useful. The frequency axis has units of FFT \"bins\" when the window of length N is applied to data and a transform of length N is computed.  For instance, the value at frequency \u00bd \"bin\" (third tick mark) is the response that would be measured in bins k and k+1 to a sinusoidal signal at frequency k+\u00bd.  It is relative to the maximum possible response, which occurs when the signal frequency is an integer number of bins.  The value at frequency \u00bd is referred to as the maximum ''scalloping loss'' of the window, which is one metric used to compare windows.  The rectangular window is noticeably worse than the others in terms of that metric.\n\nOther metrics that can be seen are the width of the main lobe and the peak level of the sidelobes, which respectively determine the ability to resolve comparable strength signals and disparate strength signals.  The rectangular window (for instance) is the best choice for the former and the worst choice for the latter.  What cannot be seen from the graphs is that the rectangular window has the best noise bandwidth, which makes it a good candidate for detecting low-level sinusoids in an otherwise [[white noise]] environment.  Interpolation techniques, such as [[Discrete-time Fourier transform#L\u2264N|zero-padding]] and frequency-shifting, are available to mitigate its potential scalloping loss. {{clear}}\n\n== Overlapping windows ==\n\nWhen the length of a data set to be transformed is larger than necessary to provide the desired frequency resolution, a common practice is to subdivide it into smaller sets and window them individually.  To mitigate the \"loss\" at the edges of the window, the individual sets may overlap in time.  See [[Welch method]] of power spectral analysis and the [[modified discrete cosine transform]].\n\n== Two-dimensional windows ==\nTwo-dimensional windows are commonly used in image processing to reduce unwanted high-frequencies in the image Fourier transform.<ref name=Hovden/> They can be constructed from one-dimensional windows in either of two forms.<ref name=Bernstein/> The separable form, <math>W(m,n)=w(m)w(n)</math> is trivial to compute. The [[Radial function|radial]] form, <math>W(m,n)=w(r)</math>, which involves the radius <math>r=\\sqrt{(m-M/2)^2+(n-N/2)^2}</math>, is [[Isotropy|isotropic]], independent on the orientation of the coordinate axes. Only the [[#Gaussian_window|Gaussian]] function is both separable and isotropic.<ref name=Awad/> The separable forms of all other window functions have corners that depend on the choice of the coordinate axes. The isotropy/[[anisotropy]] of a two-dimensional window function is shared by its two-dimensional Fourier transform. The difference between the separable and radial forms is akin to the result of [[diffraction]] from rectangular vs. circular appertures, which can be visualized in terms of the product of two [[sinc function]]s vs. an [[Airy function]], respectively.\n\n== See also ==\n{{Commons category|Window function}}\n* [[Spectral leakage]]\n* [[Multitaper]]\n* [[Apodization]]\n* [[Welch method]]\n* [[Short-time Fourier transform]]\n* [[Window design method]]\n* [[Kolmogorov\u2013Zurbenko filter]]\n\n== Notes ==\n{{notelist-ua}}\n\n== Page citations==\n{{notelist-la}}\n\n==References==\n{{reflist|1|refs=\n<ref name=Oppenheim>\n{{Cite book\n |ref=refOppenheim\n |last=Oppenheim\n |first=Alan V.\n |authorlink=Alan V. Oppenheim\n |last2=Schafer\n |first2=Ronald W.\n |author2-link=Ronald W. Schafer\n |last3=Buck\n |first3=John R.\n |title=Discrete-time signal processing\n |year=1999\n |publisher=Prentice Hall\n |location=Upper Saddle River, N.J.\n |isbn=0-13-754920-2\n |edition=2nd\n |chapter=7.2\n |pages=[https://archive.org/details/discretetimesign00alan/page/465 465]\u2013478\n |url-access=registration\n |url=https://archive.org/details/discretetimesign00alan\n}}&nbsp; url=https://d1.amobbs.com/bbs_upload782111/files_24/ourdev_523225.pdf\n</ref>\n\n<ref name=Weisstein>\n{{cite book |title=CRC Concise Encyclopedia of Mathematics |first=Eric W. |last=Weisstein |publisher=CRC Press |year=2003 |isbn=978-1-58488-347-0 |url=https://books.google.com/?id=aFDWuZZslUUC&pg=PA97&dq=apodization+function\n}}</ref>\n\n<ref name=Roads>\n{{cite book |title=Microsound |first=Curtis |last=Roads |publisher=MIT Press |year=2002 |isbn=978-0-262-18215-7\n}}</ref>\n\n<ref name=Cattani>\n{{cite book |title=Wavelet and Wave Analysis As Applied to Materials With Micro Or Nanostructure |first=Carlo |last=Cattani |first2=Jeremiah |last2=Rushchitsky |publisher=World Scientific |year=2007 |isbn=978-981-270-784-0 |url=https://books.google.com/?id=JuJKu_0KDycC&pg=PA53&dq=define+%22window+function%22+nonzero+interval\n}}</ref>\n\n<ref name=OLA>\n{{cite web|url=https://www.dsprelated.com/freebooks/sasp/Overlap_Add_OLA_STFT_Processing.html|title=Overlap-Add (OLA) STFT Processing {{!}} Spectral Audio Signal Processing |website=www.dsprelated.com |access-date=2016-08-07 |quote=The window is applied twice: once before the FFT (the \"analysis window\") and secondly after the inverse FFT prior to reconstruction by overlap-add (the so-called \"synthesis window\"). ... More generally, any positive COLA window can be split into an analysis and synthesis window pair by taking its square root.\n}}</ref>\n\n<ref name=Carlson>\n{{cite book |url=https://books.google.com/?id=V_JSAAAAMAAJ |title=Communication Systems: An Introduction to Signals and Noise in Electrical Communication |first=A. Bruce |last=Carlson |publisher=McGraw-Hill |year=1986 |isbn=978-0-07-009960-9\n}}</ref>\n\n<ref name=FIRfilters>\n{{cite web |url=http://www.labbookpages.co.uk/audio/firWindowing.html|title=FIR Filters by Windowing - The Lab Book Pages |website=www.labbookpages.co.uk |access-date=2016-04-13\n}}</ref>\n\n<ref name=Tuwien>\n{{cite web |url=http://www.cg.tuwien.ac.at/research/vis/vismed/Windows/MasteringWindows.pdf\n|title=Mastering Windows |website=www.cg.tuwien.ac.at |access-date=2020-02-12\n}}</ref>\n\n<ref name=HPmemory>\n{{cite web |url=http://www.hpmemoryproject.org/an/pdf/an_243.pdf|title=The Fundamentals of Signal Analysis Application Note 243 |website=hpmemoryproject.org |accessdate=10 April 2018\n}}</ref>\n\n<ref name=MWhann>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/hann.html |title=Hann (Hanning) window - MATLAB hann |website=www.mathworks.com |access-date=2020-02-12\n}}</ref>\n\n<ref name=MWwindow>\n{{cite web |url=http://www.mathworks.com/help/dsp/ref/windowfunction.html |title=Window Function |website=www.mathworks.com |access-date=2019-04-14\n}}</ref>\n\n<ref name=Carlin>\n{{cite patent |inventor-last=Carlin |inventor-first=Joe |inventor2-last=Collins |inventor2-first=Terry |inventor3-last=Hays |inventor3-first=Peter |inventor4-last=Hemmerdinger |inventor4-first=Barry |inventor5-last=Kellogg |inventor5-first=Robert |inventor6-last=Kettig |inventor6-first=Robert |inventor7-last=Lemmon |inventor7-first=Bradley |inventor8-last=Murdock |inventor8-first=Thomas |inventor9-last=Tamaru |inventor9-first=Robert |inventor10-last=Ware |inventor10-first=Stuart \n|publication-date=1999-12-10\n|fdate=1999-12-10\n|gdate=2005-05-24\n|title=Wideband communication intercept and direction finding device using hyperchannelization \n|country-code=US\n|description=patent \n|status=patent \n|patent-number=6898235\n|url=https://patentimages.storage.googleapis.com/4d/39/2a/cec2ae6f33c1e7/US6898235.pdf\n}}, url2=https://worldwide.espacenet.com/patent/search/family/034590049/publication/US6898235B1?q=pn%3DUS6898235\n</ref>\n\n<ref name=Rorabaugh>\n{{cite book\n|first=C.Britton |last=Rorabaugh\n|title=DSP Primer\n|series=Primer series\n|date=October 1998\n|publisher=McGraw-Hill Professional\n|isbn=978-0070540040\n|page=196\n}}</ref>\n\n<ref name=Toraichi89>\n{{cite journal |last1=Toraichi |first1=K. |last2=Kamada |first2=M. |last3=Itahashi |first3=S. |last4=Mori |first4=R. |title=Window functions represented by B-spline functions |doi=10.1109/29.17517 |journal=IEEE Transactions on Acoustics, Speech, and Signal Processing |volume=37 |pages=145\u2013147 |year=1989\n}}</ref>\n\n<ref name=f.harris>\n{{cite journal\n  |ref=refHarris\n  |doi=10.1109/PROC.1978.10837\n  |last=Harris\n  |first=Fredric J.\n  |title=On the use of Windows for Harmonic Analysis with the Discrete Fourier Transform\n  |journal=Proceedings of the IEEE\n  |volume=66\n  |issue=1\n  |pages=51\u201383\n  |date=Jan 1978\n  |url=http://web.mit.edu/xiphmont/Public/windows.pdf|citeseerx=10.1.1.649.9880\n  |bibcode=1978IEEEP..66...51H\n}} ''The fundamental 1978 paper on FFT windows by Harris, which specified many windows and introduced key metrics used to compare them.''\n</ref>\n\n<ref name=Tukey>\n{{cite journal |last=Tukey |first=J.W. |title=An introduction to the calculations of numerical spectrum analysis |journal=Spectral Analysis of Time Series |year=1967 |pages=25\u201346\n}}</ref>\n\n<ref name=MWtriang>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/triang.html |title=Triangular window - MATLAB triang |website=www.mathworks.com |access-date=2016-04-13\n}}</ref>\n\n<ref name=MWbohman>\n{{cite web |url=https://www.mathworks.com/help/signal/ref/bohmanwin.html |title=Bohman window - R2019B |website=www.mathworks.com |access-date=2020-02-12\n}}</ref>\n\n<ref name=Welch1967>\n{{cite journal |last1=Welch |first1=P. |title=The use of fast Fourier transform for the estimation of power spectra: A method based on time averaging over short, modified periodograms |doi=10.1109/TAU.1967.1161901 |journal=IEEE Transactions on Audio and Electroacoustics |volume=15 |issue=2 |pages=70\u201373 |year=1967| bibcode=1967ITAE...15...70W\n}}</ref>\n\n<ref name=Bosi>\n{{cite book|last1=Bosi |first1=Marina |last2=Goldberg |first2=Richard E. |title=Introduction to Digital Audio Coding and Standards |chapter=Time to Frequency Mapping Part II: The MDCT |publisher=Springer US |series=The Springer International Series in Engineering and Computer Science |volume=721 |date=2003 |location=Boston, MA |page=106 |isbn=978-1-4615-0327-9 |doi=10.1007/978-1-4615-0327-9\n}}</ref>\n\n<ref name=Kido>\n{{cite journal |last1=Kido |first1=Ken'iti |last2=Suzuki |first2=Hideo |last3=Ono |first3=Takahiko |last4=Fukushima |first4=Manabu |date=1998 |title=Deformation of impulse response estimates by time window in cross spectral technique |journal=Journal of the Acoustical Society of Japan (E) |volume=19 |issue=5 |pages=349\u2013361 |doi=10.1250/ast.19.349\n}}</ref>\n\n<ref name=Landisman>\n{{cite journal |last1=Landisman |first1=M. |last2=Dziewonski |first2=A. |last3=Sat\u00f4 |first3=Y. |date=1969-05-01 |title=Recent Improvements in the Analysis of Surface Wave Observations |journal=Geophysical Journal International |volume=17 |issue=4 |pages=369\u2013403 |doi=10.1111/j.1365-246X.1969.tb00246.x |bibcode=1969GeoJ...17..369L\n}}</ref>\n\n<ref name=Enochson>\n{{cite book |title=Programming and Analysis for Digital Time Series Data |first=Loren D. |last=Enochson |first2=Robert K. |last2=Otnes |publisher=U.S. Dept. of Defense, Shock and Vibration Info. Center |year=1968 |pages=142 |url=https://books.google.com/?id=duBQAAAAMAAJ&q=%22hamming+window%22+date:0-1970&dq=%22hamming+window%22+date:0-1970\n}}</ref>\n\n<ref name=sunar>\n{{cite web |url=https://users.wpi.edu/~sunar/courses/ece3311/slides/ch16.pdf |title=A digital quadrature amplitude modulation (QAM) Radio: Building a better radio |website=users.wpi.edu |access-date=2020-02-12 |page=28\n}}</ref>\n\n<ref name=sunar2>\n{{cite web |url=https://users.wpi.edu/~sunar/courses/ece3311/slides/ch08.pdf |title=Bits to Symbols to Signals and back again |website=users.wpi.edu |access-date=2020-02-12 |page=7\n}}</ref>\n\n<ref name=SRD>\n{{cite book\n | last =Johnson\n | first =C.Richard, Jr\n | last2 =Sethares\n | first2 =William A.\n | last3 =Klein\n | first3 =Andrew G.\n | title =Software Receiver Design\n | publisher =Cambridge University Press\n | date =2011-08-18\n | page =232\n | isbn =1139501453\n}}, also https://cnx.org/contents/rS1kP4Jm@4/Coding#footnote-ref10</ref>\n\n<ref name=Nuttall>\n{{cite journal\n |ref=refNuttall\n | doi =10.1109/TASSP.1981.1163506\n | last =Nuttall\n | first =Albert H.\n | title =Some Windows with Very Good Sidelobe Behavior\n | journal =IEEE Transactions on Acoustics, Speech, and Signal Processing\n | volume =29\n | issue =1\n | pages =84\u201391\n | date =Feb 1981\n | url =https://zenodo.org/record/1280930\n}} ''Extends Harris' paper, covering all the window functions known at the time, along with key metric comparisons.''\n</ref>\n\n<ref name=Rabiner>\n{{Cite book\n| ref=refRabiner\n| author1=Rabiner, Lawrence R.\n| author2=Gold, Bernard\n| title=Theory and application of digital signal processing\n| year=1975\n| publisher=Prentice-Hall\n| location=Englewood Cliffs, N.J.\n| isbn=0-13-914101-4\n| chapter=3.11\n| page=[https://archive.org/details/theoryapplicatio00rabi/page/94 94]\n| url-access=registration\n| url=https://archive.org/details/theoryapplicatio00rabi/page/94\n}}</ref>\n\n<ref name=Crochiere>\n{{cite book | ref=refCrochiere \n|last=Crochiere |first=R.E. |last2=Rabiner |first2=L.R. |title=Multirate Digital Signal Processing |year=1983 |chapter=4.3.1 |page=144 |publisher=Prentice-Hall |location=Englewood Cliffs, NJ |isbn=0136051626 |url=https://kupdf.net/download/multirate-digital-signal-processing-crochiere-rabiner_58a7065b6454a7e80bb1e993_pdf\n}}</ref>\n\n<ref name=Kaiser_Window.html>\n{{cite web\n |url=https://www.dsprelated.com/freebooks/sasp/Kaiser_Window.html\n |title=Kaiser Window\n |website=www.dsprelated.com\n |access-date=2020-04-08\n |quote=The following Matlab comparison of the DPSS and Kaiser windows illustrates the interpretation of {{math|\u03b1}} as the bin number of the edge of the critically sampled window main lobe.\n}}</ref>\n\n<ref name=MWBlackman>\n{{cite web |url=http://mathworld.wolfram.com/BlackmanFunction.html |title=Blackman Function |last=Weisstein |first=Eric W. |website=mathworld.wolfram.com |language=en |access-date=2016-04-13\n}}</ref>\n\n<ref name=lvanl>\n{{cite web |url=http://zone.ni.com/reference/en-XX/help/371361E-01/lvanlsconcepts/char_smoothing_windows/#Exact_Blackman |title=Characteristics of Different Smoothing Windows - NI LabVIEW 8.6 Help |website=zone.ni.com |access-date=2020-02-13\n}}</ref>\n\n<ref name=Blackman1959>\n{{cite book |url=https://smile.amazon.com/Measurement-Power-Spectra-Communications-Engineering/dp/B0006AW1C4 |title=The Measurement of Power Spectra from the Point of View of Communications Engineering |last=Blackman |first=R.B. |last2=Tukey |first2=J.W. |date=1959-01-01 |publisher=Dover Publications |isbn=9780486605074 |page=99\n}}</ref>\n\n<ref name=Heinzel2002>\n{{cite techreport |first=G. |last=Heinzel |last2=R\u00fcdiger |first2=A. |last3=Schilling |first3=R. |title=Spectrum and spectral density estimation by the Discrete Fourier transform (DFT), including a comprehensive list of window functions and some new flat-top windows |id=395068.0 |institution=Max Planck Institute (MPI) f\u00fcr Gravitationsphysik / Laser Interferometry & Gravitational Wave Astronomy |year=2002 |url=http://edoc.mpg.de/395068 |accessdate=2013-02-10\n}}</ref>\n\n<ref name=SWsmith>\n{{cite book |last=Smith |first=Steven W. |title=The Scientist and Engineer's Guide to Digital Signal Processing |url=http://www.dspguide.com/ch9/1.htm |accessdate=2013-02-14 |year=2011 |publisher=California Technical Publishing |location=San Diego, California, USA}}</ref>\n\n<ref name=Rife>\n{{citation |last=Rife |first=David C. |first2=G.A. |last2=Vincent |title=Use of the discrete Fourier transform in the measurement of frequencies and levels of tones |journal=Bell Syst. Tech. J. |volume=49 |issue=2 |year=1970 |pages=197\u2013228 |doi=10.1002/j.1538-7305.1970.tb01766.x\n}}</ref>\n\n<ref name=Andria>\n{{citation |last1=Andria |first1=Gregorio |first2=Mario |last2=Savino |first3=Amerigo |last3=Trotta |title=Windows and interpolation algorithms to improve electrical measurement accuracy |journal=IEEE Transactions on Instrumentation and Measurement |volume=38 |issue=4 |year=1989 |pages=856\u2013863 |doi=10.1109/19.31004\n}}</ref>\n\n<ref name=Schoukens>\n{{citation |last1=Schoukens |first1=Joannes |first2=Rik |last2=Pintelon |first3=Hugo |last3=Van Hamme |title=The interpolated fast Fourier transform: a comparative study |journal=IEEE Transactions on Instrumentation and Measurement|volume=41 |issue=2 |year=1992 |pages=226\u2013232 |doi=10.1109/19.137352}}</ref>\n\n<ref name=Starosielec2014>\n{{cite journal |last=Starosielec |first=S. |last2=H\u00e4gele |first2=D. |title=Discrete-time windows with minimal RMS bandwidth for given RMS temporal width |journal=Signal Processing |volume=102 |pages=240\u2013246 |date=2014 |doi=10.1016/j.sigpro.2014.03.033\n}}</ref>\n\n<ref name=Chakraborty>\n{{cite book |doi=10.1109/ICASSP.2013.6638833 |chapter=Generalized normal window for digital signal processing |title=2013 IEEE International Conference on Acoustics, Speech and Signal Processing |pages=6083\u20136087 |year=2013 |last1=Chakraborty |first1=Debejyo |last2=Kovvali |first2=Narayan |isbn=978-1-4799-0356-6\n}}</ref>\n\n<ref name=Diethorn>\n{{cite journal |doi=10.1109/78.295214 |title=The generalized exponential time-frequency distribution |journal=IEEE Transactions on Signal Processing |volume=42 |issue=5 |pages=1028\u20131037 |year=1994 |last1=Diethorn |first1=E.J. |bibcode=1994ITSP...42.1028D\n}}</ref>\n\n<ref name=MWtukey>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/tukeywin.html|title=Tukey (tapered cosine) window - MATLAB tukeywin |website=www.mathworks.com |access-date=2019-11-21\n}}</ref>\n\n<ref name=Bloomfield>\n{{cite book\n | last =Bloomfield\n | first =P.\n | title =Fourier Analysis of Time Series: An Introduction\n | publisher =Wiley-Interscience\n | date =2000\n | location =New York\n}}</ref>\n\n<ref name=Tu>\n{{cite book |last=Tu |first=Loring W. |title=An Introduction to Manifolds |chapter=Bump Functions and Partitions of Unity |year=2008 |publisher=Springer |location=New York |isbn=978-0-387-48098-5 |pages=127\u2013134 |doi=10.1007/978-0-387-48101-2_13 |series=Universitext\n}}</ref>\n\n<ref name=McKechan>\n{{cite journal |last=McKechan |first=D.J.A. |last2=Robinson |first2=C. |last3=Sathyaprakash |first3=B.S. |title=A tapering window for time-domain templates and simulated signals in the detection of gravitational waves from coalescing compact binaries |journal=Classical and Quantum Gravity |date=21 April 2010 |volume=27 |issue=8 |pages=084020 |doi=10.1088/0264-9381/27/8/084020 |arxiv=1003.2939 |bibcode = 2010CQGra..27h4020M\n}}</ref>\n\n<ref name=Kaiser1966>\n{{cite book |title=System Analysis by Digital Computer |last=Kaiser |first=James F. |last2=Kuo |first2=Franklin F. |publisher=John Wiley and Sons |year=1966 |pages=232\u2013235 |quote=This family of window functions was \"discovered\" by Kaiser in 1962 following a discussion with B. F. Logan of the Bell Telephone Laboratories. ... Another valuable property of this family ... is that they also approximate closely the prolate spheroidal wave functions of order zero.\n}}</ref>\n\n<ref name=Kaiser1964>\n{{cite journal |last=Kaiser |first=James F. |date=Nov 1964 |title=A family of window functions having nearly ideal properties |journal=Unpublished Memorandum\n}}</ref>\n\n<ref name=Kaiser1980>\n{{cite journal |last1=Kaiser |first1=James F. |last2=Schafer |first2=Ronald W. |doi=10.1109/TASSP.1980.1163349 |title=On the use of the I<sub>0</sub>-sinh window for spectrum analysis |journal=IEEE Transactions on Acoustics, Speech, and Signal Processing |volume=28 |pages=105\u2013107 |year=1980\n}}</ref>\n\n<ref name=MWkaiser>\n{{cite web |url=https://www.mathworks.com/help/signal/ref/kaiser.html |website=www.mathworks.com |title=Kaiser Window, R2020a |publisher=Mathworks |access-date=9 April 2020\n}}</ref>\n\n<ref name=Kabal>\n{{cite journal |last=Kabal |first=Peter |title=Time Windows for Linear Prediction of Speech |journal=Technical Report, Dept. Elec. & Comp. Eng., McGill University |year=2009 |issue=2a |page=31 |url=http://www-mmsp.ece.mcgill.ca/Documents/Reports/2009/KabalR2009b.pdf|accessdate=2 February 2014\n}}</ref>\n\n<ref name=Streit>\n{{cite journal |last=Streit |first=Roy |title=A two-parameter family of weights for nonrecursive digital filters and antennas |journal=Transactions of ASSP |year=1984 |volume=32 |pages=108\u2013118 |doi=10.1109/tassp.1984.1164275\n}}</ref>\n\n<ref name=Bergen>\n{{cite journal\n  |last=Bergen\n  |first=S.W.A.\n  |first2=A. |last2=Antoniou\n  |title=Design of Ultraspherical Window Functions with Prescribed Spectral Characteristics\n  |journal=EURASIP Journal on Applied Signal Processing\n  |volume=2004\n  |issue=13\n  |pages=2053\u20132065\n  |year=2004\n  |doi=10.1155/S1110865704403114 |bibcode=2004EJASP2004...63B\n}}</ref>\n\n<ref name=Deczky>\n{{cite book |last=Deczky |first=Andrew |chapter=Unispherical Windows |year=2001 |volume=2 |pages=85\u201388 |doi=10.1109/iscas.2001.921012 |isbn=978-0-7803-6685-5 |title=ISCAS 2001. The 2001 IEEE International Symposium on Circuits and Systems (Cat. No.01CH37196)\n}}</ref>\n\n<ref name=Zphase>\n{{cite web |url=https://ccrma.stanford.edu/~jos/filters/Zero_Phase_Filters_Even_Impulse.html\n|title=Zero Phase Filters |website=ccrma.stanford.edu |access-date=2020-02-12\n}}</ref>\n\n<ref name=Bartlett>\n{{cite web|url=https://ccrma.stanford.edu/~jos/sasp/Bartlett_Triangular_Window.html|title=Bartlett Window|website=ccrma.stanford.edu|access-date=2016-04-13\n}}</ref>\n\n<ref name=JOShann>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hann_Hanning_Raised_Cosine.html |title=Hann or Hanning or Raised Cosine |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=PowCos>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Power_of_Cosine_Window_Family.html |title=Power-of-Cosine Window Family |website=ccrma.stanford.edu |accessdate=10 April 2018\n}}</ref>\n\n<ref name=JOSHamming>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hamming_Window.html |title=Hamming Window|website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSBlack>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Blackman_Harris_Window_Family.html |title=Blackman-Harris Window Family |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSBlack3>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Three_Term_Blackman_Harris_Window.html |title=Three-Term Blackman-Harris Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSGauss2>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Gaussian_Window_Transform.html |title=Gaussian Window and Transform |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSGauss>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Matlab_Gaussian_Window.html |title=Matlab for the Gaussian Window |website=ccrma.stanford.edu |access-date=2016-04-13 |quote=Note that, on a dB scale, Gaussians are quadratic. This means that parabolic interpolation of a sampled Gaussian transform is exact. ... quadratic interpolation of spectral peaks may be more accurate on a log-magnitude scale (e.g., dB) than on a linear magnitude scale\n}}</ref>\n\n<ref name=interpolation>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Quadratic_Interpolation_Spectral_Peaks.html |title=Quadratic Interpolation of Spectral Peaks |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=Slepian>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Slepian_DPSS_Window.html |title=Slepian or DPSS Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=KaiserDPSS>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Kaiser_DPSS_Windows_Compared.html |website=ccrma.stanford.edu |title=Kaiser and DPSS Windows Compared |last=Smith |first=J.O. |date=2011 |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSKaiser>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Kaiser_Window.html |quote=Sometimes the Kaiser window is parametrized by \u03b1, where \u03b2=\u03c0\u03b1. |website=ccrma.stanford.edu |title=Kaiser Window |last=Smith |first=J.O. |date=2011 |access-date=2019-03-20\n}}</ref>\n\n<ref name=Dolph>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Dolph_Chebyshev_Window.html |title=Dolph-Chebyshev Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=DolphDef>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Dolph_Chebyshev_Window_Definition.html |title=Dolph-Chebyshev Window Definition |website=ccrma.stanford.edu |access-date=2019-03-05\n}}</ref>\n\n<ref name=HannPoisson>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hann_Poisson_Window.html |title=Hann-Poisson Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSPoisson>\n{{cite web\n | url =https://ccrma.stanford.edu/~jos/sasp/Poisson_Window.html\n | title =Poisson Window\n | last =Smith\n | first =Julius O. III\n | date =2011-04-23\n | website =ccrma.stanford.edu\n | access-date =2020-02-12\n}}</ref>\n\n<ref name=Gade>\n{{cite web\n  | last =Gade\n  | first =Svend\n  | last2 =Herlufsen\n  | first2 =Henrik\n  | title =Technical Review No 3-1987: Windows to FFT analysis (Part I)\n  | publisher =Br\u00fcel & Kj\u00e6r\n  | year =1987\n  | url =http://www.bksv.com/doc/Bv0031.pdf\n  | accessdate =2011-11-22\n}}</ref>\n\n<ref name=Berry>\n{{cite journal |last=Berry |first=C.P.L. |last2=Gair |first2=J.R. |title=Observing the Galaxy's massive black hole with gravitational wave bursts |journal=[[Monthly Notices of the Royal Astronomical Society]] |date=12 December 2012 |volume=429 |issue=1 |arxiv=1210.2778 |pages=589\u2013612 |doi=10.1093/mnras/sts360|bibcode=2013MNRAS.429..589B\n}}</ref>\n\n<ref name=Hovden>\n{{cite journal |title=Periodic Artifact Reduction in Fourier Transforms of Full Field Atomic Resolution Images |author=R. Hovden, Y. Jiang, H. Xin, L.F. Kourkoutis |journal=Microscopy and Microanalysis |volume=21 |issue=2 |pages=436\u2013441 |year=2015 |doi=10.1017/S1431927614014639 |pmid=25597865 |bibcode=2015MiMic..21..436H\n}}</ref>\n\n<ref name=Bernstein>\n{{cite book\n | last =Bernstein\n | first =Matt A.\n | last2 =King\n | first2 =Kevin Franklin\n | last3 =Zhou\n | first3 =Xiaohong Joe\n | title =Handbook of MRI Pulse Sequences\n | publisher =Elsevier Academic Press\n | date =2004\n | location =London\n | pages =495\u2013499\n | language =English\n | url =https://books.google.com/books?id=d6PLHcyejEIC&lpg=PA495&ots=tcBHi9Obfy&dq=image%20tapering%20tukey&pg=PA496#v=onepage&q&f=false\n | isbn =0120928612\n}}</ref>\n\n<ref name=Awad>\n{{cite book |last1=Awad |first1=A.I. |last2=Baba |first2=K. |chapter=An Application for Singular Point Location in Fingerprint Classification |doi=10.1007/978-3-642-22389-1_24 |title=Digital Information Processing and Communications |series=Communications in Computer and Information Science |volume=188 |pages=262 |year=2011 |isbn=978-3-642-22388-4\n}}</ref>\n\n<ref name=Vaidyanathan>\n{{cite journal |last1=Lin |first1=Yuan-Pei |last2=Vaidyanathan |first2=P.P. |title=A Kaiser Window Approach for the Design of Prototype Filters of Cosine Modulated Filterbanks |journal=IEEE Signal Processing Letters |volume=5 |issue=6 | pages=132\u2013134 |date=June 1998 |url=http://authors.library.caltech.edu/6891/1/LINieeespl98.pdf |access-date=2017-03-16| doi=10.1109/97.681427 |bibcode=1998ISPL....5..132L\n}}</ref>\n}}\n\n== Further reading ==\n{{refbegin}}\n* {{cite web\n | url =https://apps.dtic.mil/dtic/tr/fulltext/u2/a034956.pdf\n | title =Windows, Harmonic Analysis, and the Discrete Fourier Transform\n | last =Harris\n | first =Frederic J.\n | date =September 1976\n | website =apps.dtic.mil\n | publisher =Naval Undersea Center, San Diego\n | access-date =2019-04-08\n | quote = }}\n* {{Cite book\n |doi=10.7795/110.20121022aa\n |year=2012\n |isbn=978-3-86918-281-0\n |last1=Albrecht\n |first1=Hans-Helge\n |title=Tailored minimum sidelobe and minimum sidelobe cosine-sum windows. Version 1.0\n |volume=ISBN 978-3-86918-281-0 ). editor: Physikalisch-Technische Bundesanstalt\n |publisher=Physikalisch-Technische Bundesanstalt\n }}\n* {{cite journal\n  |last =Bergen\n  |first =S.W.A.\n  |first2=A. |last2=Antoniou\n  |title=Design of Nonrecursive Digital Filters Using the Ultraspherical Window Function\n  |journal=EURASIP Journal on Applied Signal Processing\n  |volume=2005\n  |issue=12\n  |pages=1910\u20131922\n  |year=2005\n  |doi=10.1155/ASP.2005.1910 |bibcode=2005EJASP2005...44B\n  }}\n* {{Cite book\n |last=Prabhu |first=K. M. M.\n |title=Window Functions and Their Applications in Signal Processing\n |year=2014\n |publisher=CRC Press\n |location=Boca Raton, FL\n |isbn=978-1-4665-1583-3\n}}\n* {{Cite patent\n | title = System and method for generating a root raised cosine orthogonal frequency division multiplexing (RRC OFDM) modulation\n | country-code = US\n | description = patent\n | patent-number = 7065150\n | postscript = <!--None-->\n | inventor-last =Park\n | inventor-first =Young-Seo\n | publication-date = 2003\n | issue-date = 2006\n |ref=none\n}}\n\n==External links==\n* LabView Help, Characteristics of Smoothing Filters, http://zone.ni.com/reference/en-XX/help/371361B-01/lvanlsconcepts/char_smoothing_windows/\n* Evaluation of Various Window Function using Multi-Instrument, http://www.multi-instrument.com/doc/D1003/Evaluation_of_Various_Window_Functions_using_Multi-Instrument_D1003.pdf\n* Creation and properties of Cosine-sum Window functions, http://electronicsart.weebly.com/fftwindows.html\n* [http://www.ritec-eg.com/Library%20&%20Tools/Windowing-Leakage-Bin-Centering-Window-Noise-Factor.html Online Interactive FFT, Windows, Resolution, and Leakage Simulation | RITEC | Library & Tools]\n\n{{refend}}\n\n[[Category:Fourier analysis]]\n[[Category:Signal estimation]]\n[[Category:Digital signal processing]]\n[[Category:Types of functions]]\n", "text_old": "{{Short description|function used in signal processing}}\n{{For|the term used in SQL statements|Window function (SQL)}}\n[[File:Hanning.png|thumb|A popular window function, the [[#Hann and Hamming windows|Hann window]].  Most popular window functions are similar bell-shaped curves.]]\n\nIn [[signal processing]] and [[statistics]], a '''window function''' (also known as an '''apodization function''' or '''tapering function'''<ref name=Weisstein/>) is a [[function (mathematics)|mathematical function]] that is zero-valued outside of some chosen [[interval (mathematics)|interval]], normally symmetric around the middle of the interval, usually near a maximum in the middle, and usually tapering away from the middle. Mathematically, when another function or waveform/data-sequence is \"multiplied\" by a window function, the product is also zero-valued outside the interval: all that is left is the part where they overlap, the \"view through the window\".  Equivalently, and in actual practice, the segment of data within the window is first isolated, and then only that data is multiplied by the window function values.  Thus, [[Tapering (mathematics)|tapering]], not segmentation, is the main purpose of window functions.\n\nThe reasons for examining segments of a longer function include detection of transient events and time-averaging of frequency spectra.  The duration of the segments is determined in each application by requirements like time and frequency resolution.  But that method also changes the frequency content of the signal by an effect called [[spectral leakage]].  Window functions allow us to distribute the leakage spectrally in different ways, according to the needs of the particular application.  There are many choices detailed in this article, but many of the differences are so subtle as to be insignificant in practice.\n\nIn typical applications, the window functions used are non-negative, smooth, \"bell-shaped\" curves.<ref name=Roads/> Rectangle, triangle, and other functions can also be used.  A rectangular window does not modify the data segment at all.  It's only for modelling purposes that we say it multiplies by 1 inside the window and by 0 outside.  A more general definition of window functions does not require them to be identically zero outside an interval, as long as the product of the window multiplied by its argument is [[square integrable]], and, more specifically, that the function goes sufficiently rapidly toward zero.<ref name=Cattani/>\n\n== Applications ==\n\nWindow functions are used in spectral [[frequency spectrum#spectral analysis|analysis]]/modification/[[Overlap\u2013add method#resynthesis|resynthesis]],<ref name=OLA/> the design of [[finite impulse response]] filters, as well as [[beamforming]] and [[Antenna (radio)|antenna]] design.\n\n=== Spectral analysis ===<!-- This section is linked from [[Discrete Fourier transform]] -->\n\nThe [[Fourier transform]] of the function cos&nbsp;''\u03c9t'' is zero, except at frequency&nbsp;\u00b1''\u03c9''.  However, many other functions and waveforms do not have convenient closed-form transforms. Alternatively, one might be interested in their spectral content only during a certain time period.\n\nIn either case, the Fourier transform (or a similar transform) can be applied on one or more finite intervals of the waveform.  In general, the transform is applied to the product of the waveform and a window function.  Any window (including rectangular) affects the spectral estimate computed by this method.\n\n[[File:Spectral_leakage_caused_by_%22windowing%22.svg|thumb|351px|Figure 2: Windowing a sinusoid causes spectral leakage. The same amount of leakage occurs whether there are an integer (blue) or non-integer (red) number of cycles within the window (rows 1 and 2). When the sinusoid is sampled and windowed, its discrete-time Fourier transform also exhibits the same leakage pattern (rows 3 and 4). But when the DTFT is only sparsely sampled, at a certain interval, it is possible (depending on your point of view) to: (1) avoid the leakage, or (2) create the illusion of no leakage. For the case of the blue DTFT, those samples are the outputs of the discrete Fourier transform (DFT). The red DTFT has the same interval of zero-crossings, but the DFT samples fall in-between them, and the leakage is revealed.]]\n\n==== Choice of window function ====\n\nWindowing of a simple waveform like cos&nbsp;''\u03c9t'' causes its Fourier transform to develop non-zero values (commonly called [[spectral leakage]]) at frequencies other than ''\u03c9''. The leakage tends to be worst (highest) near ''\u03c9'' and least at frequencies farthest from&nbsp;''\u03c9''.\n\nIf the waveform under analysis comprises two sinusoids of different frequencies, leakage can interfere with our ability to distinguish them spectrally. Possible types of interference are often broken down into two opposing classes as follows: If the component frequencies are dissimilar and one component is weaker, then leakage from the stronger component can obscure the weaker one's presence. But if the frequencies are too similar, leakage can render them ''unresolvable'' even when the sinusoids are of equal strength. Windows that are effective against the first type of interference, namely where components have dissimilar frequencies and amplitudes, are called ''high [[dynamic range]]''. Conversely, windows that can distinguish components with similar frequencies and amplitudes are called ''high resolution''.\n\nThe rectangular window is an example of a window that is ''high resolution'' but ''low dynamic range'', meaning it is good for distinguishing components of similar amplitude even when the frequencies are also close, but poor at distinguishing components of different amplitude even when the frequencies are far away. High-resolution, low-dynamic-range windows such as the rectangular window also have the property of high '''''sensitivity''''', which is the ability to reveal relatively weak sinusoids in the presence of additive random noise. That is because the noise produces a stronger response with high-dynamic-range windows than with high-resolution windows.\n\nAt the other extreme of the range of window types are windows with high dynamic range but low resolution and sensitivity. High-dynamic-range windows are most often justified in ''wideband applications'', where the spectrum being analyzed is expected to contain many different components of various amplitudes.\n\nIn between the extremes are moderate windows, such as [[#Hann and Hamming windows|Hamming]] and [[#Hann and Hamming windows|Hann]]. They are commonly used in ''narrowband applications'', such as the spectrum of a telephone channel.\n\nIn summary, spectral analysis involves a trade-off between resolving comparable strength components with similar frequencies (''high resolution / sensitivity'') and resolving disparate strength components with dissimilar frequencies (''high dynamic range''). That trade-off occurs when the window function is chosen.{{efn-la\n|[[#refNuttall|Nuttall 1981]], p 90}}\n\n==== Discrete-time signals ====\n\nWhen the input waveform is time-sampled, instead of continuous, the analysis is usually done by applying a window function and then a [[discrete Fourier transform]] (DFT). But the DFT provides only a sparse sampling of the actual [[discrete-time Fourier transform]] (DTFT) spectrum. Figure 2, row 3 shows a DTFT for a rectangularly-windowed sinusoid. The actual frequency of the sinusoid is indicated as \"13\" on the horizontal axis. Everything else is leakage, exaggerated by the use of a logarithmic presentation. The unit of frequency is \"DFT bins\"; that is, the integer values on the frequency axis correspond to the frequencies sampled by the DFT.  So the figure depicts a case where the actual frequency of the sinusoid coincides with a DFT sample, and the maximum value of the spectrum is accurately measured by that sample.  In row 4, it misses the maximum value by \u00bd bin, and the resultant measurement error is referred to as '''''scalloping loss''''' (inspired by the shape of the peak).  For a known frequency, such as a musical note or a sinusoidal test signal, matching the frequency to a DFT bin can be prearranged by choices of a sampling rate and a window length that results in an integer number of cycles within the window.\n\n[[File:Processing losses for 3 window functions.svg|thumb|400px|Figure 3: This figure compares the processing losses of three window functions for sinusoidal inputs, with both minimum and maximum scalloping loss.]]\n\n==== Noise bandwidth ====\n\nThe concepts of resolution and dynamic range tend to be somewhat subjective, depending on what the user is actually trying to do.  But they also tend to be highly correlated with the total leakage, which is quantifiable.  It is usually expressed as an equivalent bandwidth, B.  It can be thought of as redistributing the DTFT into a rectangular shape with height equal to the spectral maximum and width B.{{efn-ua\n|name=noise bandwidth|1=Mathematically, the noise equivalent bandwidth of transfer function ''H'' is the bandwidth of an ideal rectangular filter with the same peak gain as ''H'' that would pass the same power with [[white noise]] input.  In the units of frequency ''f'' (e.g. [[hertz]]), it is given by''':'''\n\n:<math> B_{\\text{noise}} = \\frac{1}{|H(f)|^2_{\\max}} \\int_0^{\\infty} |H(f)|^2 df.</math>\n}}<ref name=Carlson/>  The more the leakage, the greater the bandwidth.  It is sometimes called ''noise equivalent bandwidth'' or ''equivalent noise bandwidth'', because it is proportional to the average power that will be registered by each DFT bin when the input signal contains a random noise component (or '''is''' just random noise).  A graph of the [[power spectrum]], averaged over time, typically reveals a flat ''[[noise floor]]'', caused by this effect.  The height of the noise floor is proportional to B.  So two different window functions can produce different noise floors.\n\n==== Processing gain and losses ====\nIn [[signal processing]], operations are chosen to improve some aspect of quality of a signal by exploiting the differences between the signal and the corrupting influences.  When the signal is a sinusoid corrupted by additive random noise, spectral analysis distributes the signal and noise components differently, often making it easier to detect the signal's presence or measure certain characteristics, such as amplitude and frequency.  Effectively, the [[signal to noise ratio]] (SNR) is improved by distributing the noise uniformly, while concentrating most of the sinusoid's energy around one frequency.  ''Processing gain'' is a term often used to describe an SNR improvement.  The processing gain of spectral analysis depends on the window function, both its noise bandwidth (B) and its potential scalloping loss.  These effects partially offset, because windows with the least scalloping naturally have the most leakage.\n\nFigure 3 depicts the effects of three different window functions on the same data set, comprising two equal strength sinusoids in additive noise.  The frequencies of the sinusoids are chosen such that one encounters no scalloping and the other encounters maximum scalloping.  Both sinusoids suffer less SNR loss under the Hann window than under the [[Ralph Beebe Blackman|Blackman]]\u2013[[Fredric J. Harris|Harris]] window.  In general (as mentioned earlier), this is a deterrent to using high-dynamic-range windows in low-dynamic-range applications.\n\n=== Filter design ===\n\n{{Main|Filter design}}\n\nWindows are sometimes used in the design of [[digital filters]], in particular to convert an \"ideal\" impulse response of infinite duration, such as a [[sinc function]], to a [[finite impulse response]] (FIR) filter design.  That is called the [[Finite impulse response#Window design method|''window method'']].<ref name=Oppenheim/><ref name=FIRfilters/><ref name=Tuwien/>\n\n=== Statistics and curve fitting ===\n\n{{Main|kernel (statistics)}}\n\nWindow functions are sometimes used in the field of [[statistics|statistical analysis]] to restrict the set of data being analyzed to a range near a given point, with a [[Weighting | weighting factor]] that diminishes the effect of points farther away from the portion of the curve being fit. In the field of  Bayesian analysis and [[curve fitting]], this is often referred to as the [[kernel (statistics)|kernel]].\n\n=== Rectangular window applications ===\n\n==== Analysis of transients ====\n\nWhen analyzing a transient signal in [[modal analysis]], such as an impulse, a shock response, a sine burst, a chirp burst, or noise burst, where the energy vs time distribution is extremely uneven, the rectangular window may be most appropriate.  For instance, when most of the energy is located at the beginning of the recording, a non-rectangular window attenuates most of the energy, degrading the signal-to-noise ratio.<ref name=HPmemory/>\n\n==== Harmonic analysis ====\n\nOne might wish to measure the harmonic content of a musical note from a particular instrument or the harmonic distortion of an amplifier at a given frequency.  Referring again to '''Figure 2''', we can observe that there is no leakage at a discrete set of harmonically-related frequencies sampled by the DFT.  (The spectral nulls are actually zero-crossings, which cannot be shown on a logarithmic scale such as this.)  This property is unique to the rectangular window, and it must be appropriately configured for the signal frequency, as described above.\n\n[[File:Two 8-point Gaussian window functions.svg|thumb|300px|Figure 4: Two different ways to generate an 8-point Gaussian window sequence (\u03c3=0.4) for spectral analysis applications. MATLAB calls them \"symmetric\" and \"periodic\". The latter is also historically called ''DFT-even''.]]\n\n[[File:Spectral_leakage_from_two_8-point_Gaussian_windows.png|thumb|300px|Figure 5: Spectral leakage characteristics of the functions in Figure 4]]\n\n<!-- Probably too much information, too soon.\n[[File:Comparison of symmetric and periodic Gaussian windows.svg|thumb|300px|Figures 6a and 6b: Comparison of symmetric and periodic Gaussian windows]]\n-->\n\n===Symmetry===\n\nThe formulas provided in this article produce discrete sequences, as if a continuous window function has been \"sampled\". (see an example at [[Kaiser window]])&nbsp; Window sequences can be either '''symmetric''' or 1-sample short of symmetric (called '''asymmetric''' or '''periodic''').<ref name=MWhann/><ref name=MWwindow/>{{efn-ua\n|1=''Periodic'' is an oblique reference to the fact that symmetry around the n=0 axis is restored when the sequence is viewed as one full cycle of a periodic sequence.\n}}&nbsp; For instance, a symmetric sequence, with its maximum at a single center-point, is generated by the [[MATLAB]] function <code>hann(9,'symmetric')</code>.  Deleting the last sample produces a sequence identical to <code>hann(8,'periodic')</code>.  An even-length symmetric sequence has two equal center-points, but most window functions used in practice have a single peak value, whether they are symmetric or asymmetric.\n\nSome functions have one or two zero-valued end-points, which are unnecessary in most applications.  Deleting a zero-valued end-point has no effect on its DTFT (spectral leakage).  But the function designed for {{mvar|N}}+1 or {{mvar|N}}+2 samples, in anticipation of deleting one or both end points, typically has a slightly narrower main lobe, slightly higher sidelobes, and a slightly lower noise bandwidth.\n\n====DFT-even====\nThe terminology ''DFT-even'' ([[#refHarris|Harris 1978]], p 52) <!--{{efn-la|[[#refHarris|f.harris 1978]], p 52.}}--> describes a subclass of ''periodic'' (or ''asymmetric'') windows, characterized by only even-length sequences.  Some potential advantages (application-dependent) for spectral analysis (DFT) are:\n\n*Efficiency:  FFT algorithms are most efficient when the sequence length is an integer power-of-two.\n\n*Zero-valued DFT coefficients:  The DFT-even subset of [[#Cosine-sum windows]], including [[#Rectangular window]], have very few non-zero DFT coefficients.  We see the rectangular window effect in the third row of '''Figure 2'''.&nbsp; A cosine-sum example is [https://upload.wikimedia.org/wikipedia/commons/9/9b/DFT-even_Hann_window_%26_spectral_leakage.png  figure '''DFT-even Hann window'''], which shows that the {{mvar|N}}-point DFT of the sequence generated by hann({{mvar|N}},'periodic') has only 3 non-zero values.  All the other samples coincide with zero-crossings of the [[DTFT]].{{efn-ua\n|The sparse sampling of a DTFT only reveals the leakage into the DFT bins from a sinusoid whose frequency is also an integer DFT bin. The unseen sidelobes reveal the leakage to expect from sinusoids at other frequencies.{{efn-la\n|[[#refHarris|f.harris 1978]], fig 10, p 57.}} Thus, when choosing a window function, it is usually important to sample the DTFT more densely (as we do in the next section) and choose a window that suppresses the sidelobes to an acceptable level.\n}}  Besides the application already described at [[#Harmonic analysis]], this property is useful for real-time applications that require both windowed and non-windowed (rectangularly windowed) transforms,<ref name=Carlin/> because the windowed transforms can be  efficiently derived from the non-windowed transforms by [[Discrete Fourier transform#Convolution theorem duality|convolution]].{{efn-la\n|[[#refNuttall|Nuttall 1981]], p 85\n}}  In that application, real-valued DFT coefficients (next bullet) is also an efficiency multiplier.\n\n*Real-valued DFT coefficients:  [[#refHarris|Harris (1978)]] cites this as the DFT equivalent of earlier work, where windows for the DFT's predecessor ([[finite Fourier transform]]) are \"always an odd number of points and exhibit even symmetry about the origin\", which results in an entirely real-valued DTFT.\n\nThe [[DTFT]] is a continuous function of frequency <math>(f),</math> and the DFT is a method of sampling it.  But as Harris points out, the DFT requires an implied shift of the symmetric sequence from a domain {{nowrap|[\u2212''M'' \u2264 ''n'' \u2264 ''M''],}} known as a ''finite Fourier transform data window'', into {{nowrap|[0 \u2264 ''n'' \u2264 2''M''],}} a ''DFT data window''.  Effectively, the real-valued function being sampled is multiplied by a complex-valued phase function:  <math>e^{-i2\\pi f M}.</math>&nbsp;  Therefore, a straightforward DFT of length 2M+1 would sample at frequency intervals of 1/(2M+1), and the samples would be complex-valued, whereas samples at intervals of 1/(2M) are all real, although the odd-numbered ones are negated relative to the original DTFT.  To compute samples at intervals of 1/(2M), using a DFT, its length must be 2M.  Two methods available are simple truncation (deleting the last sample) and [[Discrete-time Fourier transform#L=N+1|''periodic summation'']] (combining the first and last samples by addition).  Both result in a sequence length of 2M, to which a '''DFT-even''' window can be applied.  The difference is that truncation affects the DTFT function being sampled, and periodic summation affects only the sampling intervals.\n\n*In both cases, only the window function itself will have real-valued DTFT samples.  Windowed data will generally lack the symmetry to preserve that characteristic.  But other than the predictable sign reversals, the phase component of the DTFT will be representative of the data, not the window function.\n\n*Truncation affects only the real components of the DTFT samples.  The imaginary ones remain zero-valued.  Harris attributes this effect to what he calls ''DFT-even symmetry''.  [https://upload.wikimedia.org/wikipedia/commons/9/91/Sampling_the_Discrete-time_Fourier_transform.svg Figure '''Sampling the DTFT'''] is an exaggerated example{{efn-ua\n|An abnormally wide and short Gaussian window is used.\n}} of both methods, also showing how real-valued samples are obtained from the complex DTFT.\n\n*The effect of truncation on spectral leakage is best understood in terms of the magnitude of the real component, shown in decibels.  At [https://upload.wikimedia.org/wikipedia/commons/a/a9/Comparison_of_symmetric_and_periodic_Gaussian_windows.svg figure '''Gaussian windows'''], the graph labeled ''DTFT periodic8'' is the DTFT of the truncated window labeled ''periodic DFT-even'' (both blue).  The green graph labeled ''DTFT symmetric9'' corresponds to the same window with its symmetry restored.  The DTFT samples, labeled ''DFT8 periodic summation'', are an example of using periodic summation to sample it at the same frequencies as the blue graph.\n\n== A list of window functions ==\n\nConventions''':'''\n\n*<math>w_0(x)</math> is a zero-phase function (symmetrical about x=0)<ref name=Zphase/>, continuous for <math>x \\in [-N/2, N/2],</math> where N is a positive integer (even or odd).<ref name=Rorabaugh/>\n\n*The sequence &nbsp;<math>\\{w[n] = w_0(n-N/2),\\quad 0\\le n \\le N\\}</math>&nbsp; is ''symmetric'', of length <math>N+1.</math>\n\n*<math>\\{w[n],\\quad 0\\le n \\le N-1\\}</math>&nbsp; is ''asymmetric'', of length <math>N.</math>{{efn-ua\n|Some authors limit their attention to this important subset and to even values of N.<ref name=f.harris/><ref name=Heinzel2002/>  But the window coefficient formulas are still the ones presented here.}}\n\n*The parameter '''B''' displayed on each spectral plot is the function's noise equivalent bandwidth metric, in units of ''DFT bins''.\n\n=== Rectangular window ===\n<!-- [[Boxcar window]] redirects here -->\n[[File:Window function and frequency response - Rectangular.svg|thumb|480px|right|Rectangular window]]\n\nThe rectangular window (sometimes known as the '''[[Boxcar function|boxcar]]''' or '''[[Dirichlet kernel|Dirichlet]] window''') is the simplest window, equivalent to replacing all but ''N'' values of a data sequence by zeros, making it appear as though the waveform suddenly turns on and off:\n\n:<math>w[n] = 1.</math>\n\nOther windows are designed to moderate these sudden changes, which reduces scalloping loss and improves dynamic range, as described above ({{slink||Spectral analysis}}).\n\nThe rectangular window is the 1st order ''B''-spline window as well as the 0th power [[#Power-of-sine/cosine_windows|Power-of-sine window]].\n{{clear}}\n\n=== ''B''-spline windows ===\n\n''B''-spline windows can be obtained as ''k''-fold convolutions of the rectangular window. They include the rectangular window itself (''k''&nbsp;=&nbsp;1), the [[#Triangular window]] (''k''&nbsp;=&nbsp;2) and the [[#Parzen window]] (''k''&nbsp;=&nbsp;4).<ref name=Toraichi89/> Alternative definitions sample the appropriate normalized [[B-spline|''B''-spline]] [[basis function]]s instead of convolving discrete-time windows. A ''k''th order ''B''-spline basis function is a piece-wise polynomial function of degree ''k''\u22121 that is obtained by ''k''-fold self-convolution of the [[rectangular function]].\n{{clear}}\n\n==== Triangular window ====\n[[File:Window function and its Fourier transform \u2013 Triangular (n = 0...N).svg|thumb|480px|right|Triangular window (with ''L''=''N+1'')]]\n\nTriangular windows are given by:\n\n:<math>w[n] = 1 - \\left|\\frac{n-\\frac{N}{2}}{\\frac{L}{2}}\\right|,\\quad 0\\le n \\le N</math>\n\nwhere ''L'' can be ''N'',<ref name=Bartlett/> ''N''+1,<ref name=f.harris/>\n<ref name=Tukey/><ref name=MWtriang/> or ''N''+2.<ref name=Welch1967/>&nbsp; The first one is also known as '''[[M. S. Bartlett|Bartlett]] window''' or '''[[Lip\u00f3t Fej\u00e9r|Fej\u00e9r]] window'''.  All three definitions converge at large ''N''.\n\nThe triangular window is the 2nd order ''B''-spline window.  The L=N form can be seen as the convolution of two N/2 width rectangular windows.  The Fourier transform of the result is the squared values of the transform of the half-width rectangular window.\n{{clear}}\n\n==== Parzen window ====\n[[File:Window function and frequency response - Parzen.svg|thumb|480px|right|Parzen window]]\n\n{{Distinguish|Kernel density estimation}}\nDefining &nbsp;{{math|L \u225c N+1}},&nbsp; the Parzen window, also known as the '''de la Vall\u00e9e Poussin window''',<ref name=f.harris/> is the 4th order ''B''-spline window given by:\n\n:<math>\nw_0(n) \\triangleq \\left\\{ \\begin{array}{ll}\n 1 - 6 \\left(\\frac{n}{L/2}\\right)^2 \\left(1 - \\frac{|n|}{L/2}\\right),\n & 0 \\le |n| \\le \\frac{L}{4} \\\\ \n 2 \\left(1 - \\frac{|n|}{L/2}\\right)^3\n & \\frac{L}{4} < |n| \\le \\frac{L}{2} \\\\ \n\\end{array} \\right\\}\n</math>\n:<math>w[n] = \\ w_0\\left(n-\\tfrac{N}{2}\\right),\\ 0 \\le n \\le N</math>\n\n{{clear}}\n\n[[File:Window function and frequency response - Welch.svg|thumb|480px|right|Welch window]]\n\n=== Other polynomial windows ===\n==== Welch window ====\n\nThe Welch window consists of a single [[parabola|parabolic]] section:\n\n:<math>w[n]=1 - \\left(\\frac{n-\\frac{N}{2}}{\\frac{N}{2}}\\right)^2,\\quad 0\\le n \\le N.</math><ref name=Welch1967/>\n\nThe defining [[quadratic polynomial]] reaches a value of zero at the samples just outside the span of the window.\n\n{{clear}}\n\n=== Sine window ===\n[[File:Window function and frequency response - Cosine.svg|thumb|480px|right|Sine window]]\n\n:<math>w[n] = \\sin\\left(\\frac{\\pi n}{N}\\right) = \\cos\\left(\\frac{\\pi n}{N} - \\frac{\\pi}{2}\\right),\\quad 0\\le n \\le N.</math>\n\nThe corresponding <math>w_0(n)\\,</math> function is a cosine without the \u03c0/2 phase offset.  So the ''sine window''<ref name=Bosi/> is sometimes also called ''cosine window''.<ref name=f.harris/> As it represents half a cycle of a sinusoidal function, it is also known variably as ''half-sine window''<ref name=Kido/> or ''half-cosine window''<ref name=Landisman/>.\n\nThe [[autocorrelation]] of a sine window produces a function known as the Bohman window.<ref name=MWbohman/>\n\n==== Power-of-sine/cosine windows ====\n\nThese window functions have the form:<ref name=PowCos/>\n\n:<math>w[n] = \\sin^\\alpha\\left(\\frac{\\pi n}{N}\\right) = \\cos^\\alpha\\left(\\frac{\\pi n}{N} - \\frac{\\pi}{2}\\right),\\quad 0\\le n \\le N.</math>\n\nThe [[#Rectangular window]] ({{math|1=\u03b1=0}}), the [[#Sine window]] ({{math|1=\u03b1=1}}), and the [[#Hann and Hamming windows|Hann window]] ({{math|1=\u03b1=2}}) are members of this family.\n\n{{clear}}\n\n=== Cosine-sum windows ===\nThis family is also known as ''[https://www.mathworks.com/help/signal/ug/generalized-cosine-windows.html generalized cosine windows]''.\n\n{{Equation box 1\n|indent =\n|title=\n|equation = {{NumBlk|:|<math>w[n] = \\sum_{k = 0}^{K} (-1)^k a_k\\; \\cos\\left( \\frac{2 \\pi k n}{N} \\right),\\quad 0\\le n \\le N.</math>|{{EquationRef|Eq.1}}}}\n|cellpadding= 6\n|border\n|border colour = #0073CF\n|background colour=#F5FFFA}}\n\nIn most cases, including the examples below, all coefficients ''a''<sub>''k''</sub>&nbsp;\u2265&nbsp;0.&nbsp; These windows have only 2''K''&nbsp;+&nbsp;1 non-zero N-point DFT coefficients, and they are all real-valued.{{efn-ua\n|1=The ''N''-point DFT of an ''N''-sample DFT-even Hann or Hamming window, for example, has only 3 DTFT samples that do not coincide with zero-crossings.  An illustration, for&nbsp;''N''=16, can be viewed at [https://commons.wikimedia.org/wiki/File:DFT-even_Hann_window_&_spectral_leakage.png '''DFT-even Hann window'''].\n}}\n\n==== Hann and Hamming windows{{anchor|Hamming window}} ====\n{{Main|Hann function}}\n[[File:Window function and its Fourier transform \u2013 Hann (n = 0...N).svg|thumb|480px|right|Hann window]]\n[[File:Window function and frequency response - Hamming (alpha = 0.53836, n = 0...N).svg|thumb|480px|right|Hamming window, a<sub>0</sub>&nbsp;=&nbsp;0.53836 and a<sub>1</sub>&nbsp;=&nbsp;0.46164. The original Hamming window would have a<sub>0</sub>&nbsp;=&nbsp;0.54 and a<sub>1</sub>&nbsp;=&nbsp;0.46.]]\n\nThe customary cosine-sum windows for case ''K''&nbsp;=&nbsp;1 have the form:\n\n:<math>w[n] = a_0 - \\underbrace{(1-a_0)}_{a_1}\\cdot \\cos\\left( \\tfrac{2 \\pi n}{N} \\right),\\quad 0\\le n \\le N,</math>\n\nwhich is easily (and often) confused with its zero-phase version:\n\n:<math>\n\\begin{align}\nw_0(n)\\ &= w\\left[ n+\\tfrac{N}{2}\\right]\\\\\n&= a_0 + a_1\\cdot \\cos \\left ( \\tfrac{2\\pi n}{N} \\right),\\quad -\\tfrac{N}{2} \\le  n \\le \\tfrac{N}{2}.\n\\end{align}\n</math>\n\nSetting &nbsp;<math>a_0 = 0.5</math>&nbsp; produces a '''Hann window:'''\n\n:<math>w[n] = 0.5\\; \\left[1 - \\cos \\left ( \\frac{2 \\pi n}{N} \\right) \\right] = \\sin^2 \\left ( \\frac{\\pi n}{N} \\right),</math><ref name=MWhann/>\n\nnamed after [[Julius von Hann]], and sometimes referred to as ''Hanning'', presumably due to its linguistic and formulaic similarities to the Hamming window.  It is also known as '''raised cosine''', because the zero-phase version, <math>w_0(n),</math> is one lobe of an elevated cosine function.\n\nThis function is a member of both the [[#Cosine-sum windows|cosine-sum]] and [[#Power-of-sine/cosine_windows|power-of-sine]] families.  Unlike the [[#Hann and Hamming windows|Hamming window]], the end points of the Hann window just touch zero.  The resulting [[Spectral leakage|side-lobes]] roll off at about 18&nbsp;dB per octave.<ref name=JOShann/>\n\nSetting &nbsp;<math>a_0</math>&nbsp; to approximately 0.54, or more precisely 25/46, produces the '''Hamming window,''' proposed by [[Richard W. Hamming]].  That choice places a zero-crossing at frequency 5\u03c0/(''N''&nbsp;\u2212&nbsp;1), which cancels the first sidelobe of the Hann window, giving it a height of about one-fifth that of the Hann window.<ref name=f.harris/><ref name=Enochson/><ref name=JOSHamming/>\nThe Hamming window is often called the '''Hamming blip''' when used for [[pulse shaping]].<ref name=sunar/><ref name=sunar2/><ref name=SRD/>\n\nApproximation of the coefficients to two decimal places substantially lowers the level of sidelobes,<ref name=f.harris/> to a nearly equiripple condition.<ref name=JOSHamming/> In the equiripple sense, the optimal values for the coefficients are a<sub>0</sub>&nbsp;=&nbsp;0.53836 and a<sub>1</sub>&nbsp;=&nbsp;0.46164.<ref name=JOSHamming/><ref name=Nuttall/>\n{{clear}}\n\n==== Blackman window ====\n[[File:Window function and its Fourier transform \u2013 Blackman (n = 0...N).svg|thumb|480px|right|Blackman window; {{math|1=\u03b1=0.16}}]]\n\nBlackman windows are defined as:\n:<math>w[n] = a_0 -  a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right) + a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)</math>\n\n:<math>a_0=\\frac{1-\\alpha}{2};\\quad a_1=\\frac{1}{2};\\quad a_2=\\frac{\\alpha}{2}.</math>\n\nBy common convention, the unqualified term ''Blackman window'' refers to Blackman's \"not very serious proposal\" of {{math|1=\u03b1=0.16}} (''a''<sub>0</sub>&nbsp;=&nbsp;0.42, ''a''<sub>1</sub>&nbsp;=&nbsp;0.5, ''a''<sub>2</sub>&nbsp;=&nbsp;0.08), which closely approximates the '''exact Blackman''',<ref name=MWBlackman/> with ''a''<sub>0</sub>&nbsp;=&nbsp;7938/18608&nbsp;\u2248&nbsp;0.42659, ''a''<sub>1</sub>&nbsp;=&nbsp;9240/18608&nbsp;\u2248&nbsp;0.49656, and ''a''<sub>2</sub>&nbsp;=&nbsp;1430/18608&nbsp;\u2248&nbsp;0.076849.<ref name=lvanl/> These exact values place zeros at the third and fourth sidelobes,<ref name=f.harris/> but result in a discontinuity at the edges and a 6&nbsp;dB/oct fall-off.  The truncated coefficients do not null the sidelobes as well, but have an improved 18&nbsp;dB/oct fall-off.<ref name=f.harris/><ref name=Blackman1959/>\n{{clear}}\n\n==== Nuttall window, continuous first derivative ====\n[[File:Window function and frequency response - Nuttall (continuous first derivative).svg|thumb|480px|right|Nuttall window, continuous first derivative]]\n\nThe continuous form of Nuttall window, <math>w_0(x),</math> and its first [[derivative]] are continuous everywhere, like the [[Hann function]]. That is, the function goes to 0 at {{nowrap|1=''x''= \u00b1''N''/2,}} unlike the Blackman\u2013Nuttall, Blackman\u2013Harris, and Hamming windows.  The Blackman window ({{math|1=\u03b1=0.16}}) is also continuous with continuous derivative at the edge, but the \"exact Blackman window\" is not.\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.355768;\\quad a_1=0.487396;\\quad a_2=0.144232;\\quad a_3=0.012604.</math>\n{{clear}}\n\n==== Blackman\u2013Nuttall window ====\n[[File:Window function and frequency response - Blackman-Nuttall.svg|thumb|480px|right|Blackman\u2013Nuttall window]]\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.3635819; \\quad a_1=0.4891775; \\quad a_2=0.1365995; \\quad a_3=0.0106411.</math>\n{{clear}}\n\n==== Blackman\u2013Harris window ====\n[[File:Window function and frequency response - Blackman-Harris.svg|thumb|480px|right|Blackman\u2013Harris window]]\n\nA generalization of the Hamming family, produced by adding more shifted sinc functions, meant to minimize side-lobe levels<ref name=JOSBlack/><ref name=JOSBlack3/>\n\n:<math>w[n]=a_0 - a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)</math>\n\n:<math>a_0=0.35875;\\quad a_1=0.48829;\\quad a_2=0.14128;\\quad a_3=0.01168.</math>\n{{clear}}\n\n==== Flat top window ====\n[[File:Window function and frequency response - flat top.svg|thumb|480px|right|Flat Top window]]\n\nA flat top window is a partially negative-valued window that has minimal [[#Discrete-time_signals|scalloping loss]] in the frequency domain. That property is desirable for the measurement of amplitudes of sinusoidal frequency components.<ref name=Heinzel2002/><ref name=SWsmith/> Drawbacks of the broad bandwidth are poor frequency resolution and high [[#Noise bandwidth]].\n\nFlat top windows can be designed using low-pass filter design methods,<ref name=SWsmith/> or they may be of the usual [[#Cosine-sum windows|cosine-sum]] variety:\n\n:<math>\n\\begin{align}\nw[n] = a_0 &- a_1 \\cos \\left ( \\frac{2 \\pi n}{N} \\right)+ a_2 \\cos \\left ( \\frac{4 \\pi n}{N} \\right)\\\\\n           &- a_3 \\cos \\left ( \\frac{6 \\pi n}{N} \\right)+a_4 \\cos \\left ( \\frac{8 \\pi n}{N} \\right).\n\\end{align}\n</math>\n\nThe [https://www.mathworks.com/help/signal/ref/flattopwin.html Matlab variant] has these coefficients:\n:<math>a_0=0.21557895;\\quad a_1=0.41663158;\\quad a_2=0.277263158;\\quad a_3=0.083578947;\\quad a_4=0.006947368.</math>\n\nOther variations are available, such as sidelobes that roll off at the cost of higher values near the main lobe.<ref name=Heinzel2002/>\n{{clear}}\n\n==== Rife\u2013Vincent windows ====\n\nRife\u2013Vincent windows<ref name=Rife/> are customarily scaled for unity average value, instead of unity peak value.  The coefficient values below, applied to {{EquationNote|Eq.1}}, reflect that custom.\n\nClass I, Order 1 (K=1):&nbsp; <math>a_0=1;\\quad a_1=1</math> &nbsp; &nbsp; &nbsp; Functionally equivalent to the [[#Hann and Hamming windows|Hann window]].\n\nClass I, Order 2 (K=2):&nbsp; <math>a_0=1;\\quad a_1=\\tfrac{4}{3};\\quad a_2=\\tfrac{1}{3}</math>\n\nClass I is defined by minimizing the high-order sidelobe amplitude.  Coefficients for orders up to K=4 are tabulated.<ref name=Andria/>\n\nClass II minimizes the main-lobe width for a given maximum side-lobe.\n\nClass III is a compromise for which order ''K''&nbsp;=&nbsp;2 resembles the [[#Blackman window]].<ref name=Andria/><ref name=Schoukens/>\n\n{{clear}}\n\n=== Adjustable windows ===\n\n==== Gaussian window ====\n[[File:Window function and frequency response - Gaussian (sigma = 0.4).svg|thumb|480px|right|Gaussian window, ''\u03c3''&nbsp;=&nbsp;0.4]]\nThe Fourier transform of a [[Gaussian function|Gaussian]] is also a Gaussian (it is an [[eigenfunction]] of the Fourier transform).  Since the Gaussian function extends to infinity, it must either be truncated at the ends of the window, or itself windowed with another zero-ended window.<ref name=JOSGauss/>\n\nSince the log of a Gaussian produces a [[parabola]], this can be used for nearly exact quadratic interpolation in [[frequency estimation]].<ref name=JOSGauss2/><ref name=JOSGauss/><ref name=interpolation/>\n\n:<math>w[n]=\\exp\\left(-\\frac{1}{2} \\left ( \\frac{n-N/2}{\\sigma N/2} \\right)^{2}\\right),\\quad 0\\le n \\le N.</math>\n:<math>\\sigma \\le \\;0.5\\,</math>\n\nThe standard deviation of the Gaussian function is ''\u03c3''&nbsp;&middot;&nbsp;''N''/2 sampling periods.\n{{clear}}\n\n[[File:Window function and frequency response - Confined Gaussian (sigma t = 0.1).svg|thumb|480px|right|Confined Gaussian window, ''\u03c3''<sub>''t''</sub>&nbsp;=&nbsp;0.1]]\n\n==== Confined Gaussian window ====\nThe confined Gaussian window yields the smallest possible root mean square frequency width {{math|''\u03c3''{{sub|''&omega;''}}}} for a given temporal width &nbsp;{{math|(''N'' + 1) ''\u03c3''{{sub|''t''}}}}.<ref name=Starosielec2014/> These windows optimize the RMS time-frequency bandwidth products. They are computed as the minimum eigenvectors of a parameter-dependent matrix. The confined Gaussian window family contains the [[#Sine window|Sine window]] and the [[#Gaussian window|Gaussian window]] in the limiting cases of large and small {{math|''\u03c3''{{sub|''t''}}}}, respectively.\n{{clear}}\n\n[[File:Window function and frequency response - Approximate confined Gaussian (sigma t = 0.1).svg|thumb|480px|right|Approximate confined Gaussian window, {{math|1=''\u03c3''{{sub|''t''}}=0.1}}]]\n\n==== Approximate confined Gaussian window ====\n\nDefining &nbsp;{{math|''L'' \u225c ''N''+1}},&nbsp; a [[#Confined Gaussian window|Confined Gaussian window]] of temporal width &nbsp;{{math|''L'' \u00d7 ''\u03c3''{{sub|''t''}}}}&nbsp; is well approximated by:<ref name=Starosielec2014/>\n\n:<math>w[n] = G(n) - \\frac{G(-\\tfrac{1}{2})[G(n + L) + G(n - L)]}{G(-\\tfrac{1}{2} + L) + G(-\\tfrac{1}{2} - L)}</math>\n\nwhere <math>G</math> is a Gaussian function:\n\n::<math>G(x) = \\exp\\left(- \\left(\\cfrac{x - \\frac{N}{2}}{2 L \\sigma_t}\\right)^2\\right)</math>\n\nThe standard deviation of the approximate window is [[asymptotically equal]] (i.e. large values of {{math|''N''}}) to &nbsp;{{math|''L'' \u00d7 ''\u03c3''{{sub|''t''}}}}&nbsp; for &nbsp;{{math|''\u03c3{{sub|t}}'' < 0.14}}.<ref name=Starosielec2014/>\n{{clear}}\n\n==== Generalized normal window ====\nA more generalized version of the Gaussian window is the generalized normal window.<ref name=Chakraborty/> Retaining the notation from the [[Gaussian window]] above, we can represent this window as\n\n:<math>w[n,p]=\\exp\\left(-\\left ( \\frac{n-N/2}{\\sigma N/2} \\right)^{p}\\right)</math>\n\nfor any even <math>p</math>. At <math>p=2</math>, this is a Gaussian window and as <math>p</math> approaches <math>\\infty</math>, this approximates to a rectangular window. The [[Fourier transform]] of this window does not exist in a closed form for a general <math>p</math>. However, it demonstrates the other benefits of being smooth, adjustable bandwidth. Like the [[Tukey window]] discussed later, this window naturally offers a \"flat top\" to control the amplitude attenuation of a time-series (on which we don't have a control with Gaussian window). In essence, it offers a good (controllable) compromise, in terms of spectral leakage, frequency resolution and amplitude attenuation, between the Gaussian window and the rectangular window.\nSee also <ref name=Diethorn/> for a study on [[time-frequency representation]] of this window (or function).\n\n{{clear}}\n\n==== Tukey window ====\n[[File:Window function and frequency response - Tukey (alpha = 0.5).svg|thumb|480px|right|Tukey window, {{math|1=\u03b1=0.5}}]]\n\nDefining &nbsp;{{math|''L'' \u225c ''N''+1}},&nbsp; the Tukey window, also known as the ''cosine-tapered window'', can be regarded as a cosine lobe of width {{math|''L''\u03b1/2}} that is convolved with a rectangular window of width {{math|''L''(1 &minus; \u03b1/2)}}.\n:<math>\n\\left . \n\\begin{array}{lll}\nw[n] = \\frac{1}{2} \\left[1-\\cos \\left(\\frac{2\\pi n}{\\alpha L} \\right) \\right],\\quad & 0 \\le n < \\frac{\\alpha L}{2}\\\\\nw[n] = 1,\\quad & \\frac{\\alpha L}{2} \\le n \\le \\frac{N}{2}\\\\\nw[N-n] = w[n],\\quad & 0 \\le n \\le \\frac{N}{2}\n\\end{array}\\right\\}\n</math> &nbsp; <ref name=MWtukey/><ref name=Bloomfield/>\n\nAt {{math|1=\u03b1=0}} it becomes rectangular, and at {{math|1=\u03b1=1}} it becomes a Hann window.\n{{clear}}\n\n==== Planck-taper window ====\n[[File:Window function and frequency response - Planck-taper (epsilon = 0.1).svg|thumb|480px|Planck-taper window, ''\u03b5''&nbsp;=&nbsp;0.1]]\n\nThe so-called \"Planck-taper\" window is a [[bump function]] that has been widely used<ref name=Tu/> in the theory of [[partitions of unity]] in [[manifolds]].  It is [[Smooth function|smooth]] (a <math>C^\\infty</math> function) everywhere, but is exactly zero outside of a compact region, exactly one over an interval within that region, and varies smoothly and monotonically between those limits.  Its use as a window function in signal processing was first suggested in the context of [[gravitational-wave astronomy]], inspired by the [[Planck's law|Planck distribution]].<ref name=McKechan/> It is defined as a [[piecewise]] function''':'''\n:<math>\n\\left . \n\\begin{array}{lll}\nw[0] =  0, \\\\\nw[n] =  \\left(1 + \\exp\\left(\\frac{\\epsilon N}{n} - \\frac{\\epsilon N}{\\epsilon N - n}\\right)\\right)^{-1},\\quad & 1 \\le n < \\epsilon N \\\\\nw[n] =  1,\\quad & \\epsilon N \\le n \\le \\frac{N}{2} \\\\\nw[N-n] = w[n],\\quad & 0 \\le n \\le \\frac{N}{2}\n\\end{array}\\right\\}\n</math>\n\nThe amount of tapering is controlled by the parameter ''\u03b5'', with smaller values giving sharper transitions.\n\n{{clear}}\n\n==== DPSS or Slepian window ====\n\nThe DPSS (discrete prolate spheroidal sequence) or Slepian window [[Spectral concentration problem|maximizes the energy concentration in the main lobe]],<ref name=Slepian/> and is used in [[multitaper]] spectral analysis, which averages out noise in the spectrum and reduces information loss at the edges of the window.\n\nThe main lobe ends at a frequency bin given by the parameter ''\u03b1''.<ref name=KaiserDPSS/>\n{|\n|[[File:Window function and frequency response - DPSS (alpha = 2).svg|thumb|480px|right|DPSS window, ''\u03b1''&nbsp;=&nbsp;2]]\n|[[File:Window function and frequency response - DPSS (alpha = 3).svg|thumb|480px|right|DPSS window, ''\u03b1''&nbsp;=&nbsp;3]]\n|}\nThe Kaiser windows below are created by a simple approximation to the DPSS windows:\n{|\n|[[File:Window function and frequency response - Kaiser (alpha = 2).svg|thumb|480px|right|Kaiser window, ''\u03b1''&nbsp;=&nbsp;2]]\n|[[File:Window function and frequency response - Kaiser (alpha = 3).svg|thumb|480px|right|Kaiser window, ''\u03b1''&nbsp;=&nbsp;3]]\n|}\n\n==== Kaiser window ====\n\n{{Main|Kaiser window}}\nThe Kaiser, or Kaiser-Bessel, window is a simple approximation of the [[#DPSS or Slepian window|DPSS window]] using [[Bessel function]]s, discovered by [[James Kaiser]].<ref name=Kaiser1966/><ref name=Kaiser1964/>\n\n:<math>w[n]=\\frac{I_0\\left(\\pi\\alpha \\sqrt{1-\\left(\\frac{2 n}{N}-1\\right)^2}\\right)}{I_0(\\pi\\alpha)},\\quad 0\\le n \\le N</math> &nbsp; &nbsp;{{efn-la\n|[[#refHarris|f.harris 1978]], p 73}}{{efn-ua\n|The Kaiser window is often parametrized by {{math|\u03b2}}, where {{math|1=\u03b2 = \u03c0\u03b1}}.{{efn-la\n|[[#refOppenheim|Oppenheim & Schafer 1999]], p 474.}}<ref name=Rabiner/><ref name=Crochiere/>\n<ref name=Vaidyanathan/><ref name=JOSKaiser/><ref name=KaiserDPSS/><ref name=MWkaiser/>&nbsp; The alternative use of just {{math|\u03b1}} facilitates comparisons to the DPSS windows.<ref name=Kaiser_Window.html/>\n}}\n:<math>\nw_0(n) = \\frac{I_0\\left(\\pi\\alpha \\sqrt{1-\\left(\\frac{2 n}{N}\\right)^2}\\right)}{I_0(\\pi\\alpha)},\\quad -N/2 \\le n \\le N/2</math>\n\nwhere <math>I_0</math> is the zero-th order modified Bessel function of the first kind.  Variable parameter <math>\\alpha</math> determines the tradeoff between main lobe width and side lobe levels of the spectral leakage pattern.&nbsp;  The main lobe width, in between the nulls, is given by &nbsp;<math>2\\sqrt{1 + \\alpha^2},</math>&nbsp; in units of DFT bins,<ref name=Kaiser1980/>&nbsp; and a typical value of <math>\\alpha</math> is 3.\n\n{{clear}}\n\n==== Dolph\u2013Chebyshev window ====\n[[File:Window function and frequency response - Dolph-Chebyshev (alpha = 5).svg|thumb|480px|right|Dolph\u2013Chebyshev window, ''\u03b1''&nbsp;=&nbsp;5]]\n\nMinimizes the [[Uniform norm|Chebyshev norm]] of the side-lobes for a given main lobe width.<ref name=Dolph/>\n\nThe zero-phase Dolph\u2013Chebyshev window function <math>w_0[n]</math> is usually defined in terms of its real-valued discrete Fourier transform, <math>W_0[k]</math>:<ref name=DolphDef/>\n\n:<math>\nW_0(k) = \\frac{T_{N}  \\big(\\beta \\cos\\left(\\frac{\\pi k}{N+1}\\right)\\big)}{T_{N}  (\\beta)}\n  = \\frac{T_N    \\big(\\beta \\cos\\left(\\frac{\\pi k}{N+1}\\right)\\big)}{10^\\alpha},\\ 0 \\le k \\le N.\n</math>\n\n''T''<sub>''n''</sub>(''x'') is the ''n''-th [[Chebyshev polynomials|Chebyshev polynomial]] of the first kind evaluated in ''x'', which can be computed using\n\n:<math>T_n(x) =\\begin{cases}\n\\cos\\!\\big(n \\cos^{-1}(x) \\big) & \\text{if }-1 \\le x \\le 1 \\\\\n\\cosh\\!\\big(n \\cosh^{-1}(x) \\big) & \\text{if }x \\ge 1 \\\\ \n(-1)^n \\cosh\\!\\big(n \\cosh^{-1}(-x) \\big) & \\text{if }x \\le -1,\n\\end{cases}</math>\n\nand\n\n:<math>\\beta = \\cosh\\!\\big(\\tfrac{1}{N} \\cosh^{-1}(10^\\alpha)\\big)</math>\n\nis the unique positive real solution to <math>T_N(\\beta) = 10^\\alpha</math>, where the parameter ''\u03b1'' sets the Chebyshev norm of the sidelobes to \u221220''\u03b1''&nbsp;decibels.<ref name=Dolph/>\n\nThe window function can be calculated from ''W''<sub>0</sub>(''k'') by an inverse [[discrete Fourier transform]] (DFT):<ref name=Dolph/>\n\n:<math>w_0(n) = \\frac{1}{N+1} \\sum_{k=0}^N W_0(k) \\cdot e^{i 2 \\pi k n / (N+1)},\\ -N/2 \\le n \\le N/2.</math>\n\nThe ''lagged'' version of the window can be obtained by:\n\n:<math>w[n] = w_0\\left(n-\\frac{N}{2}\\right),\\quad 0 \\le n \\le N,</math>\n\nwhich for even values of N must be computed as follows:\n\n:<math>\\begin{align}\nw_0\\left(n-\\frac{N}{2}\\right) \n= \\frac{1}{N+1} \\sum_{k=0}^{N} W_0(k) \\cdot e^{\\frac{i 2 \\pi k (n-N/2)}{N+1}}\n= \\frac{1}{N+1} \\sum_{k=0}^{N} \\left[ \\left(-e^{\\frac{i\\pi}{N+1}}\\right)^k \\cdot W_0(k)\\right] e^{\\frac{i 2 \\pi k n}{N+1}},\n\\end{align}</math>\n\nwhich is an inverse DFT of &nbsp;<math>\\left(-e^{\\frac{i\\pi}{N+1}}\\right)^k\\cdot W_0(k).</math>\n\nVariations:\n*Due to the equiripple condition, the time-domain window has discontinuities at the edges.  An approximation that avoids them, by allowing the equiripples to drop off at the edges, is a [http://www.mathworks.com/help/signal/ref/taylorwin.html Taylor window].\n*An alternative to the inverse DFT definition is also available.[http://practicalcryptography.com/miscellaneous/machine-learning/implementing-dolph-chebyshev-window/].\n{{clear}}\n\n==== Ultraspherical window ====\n[[File:Window function and frequency response - Ultraspherical (mu = -0.5).svg|thumb|480px|right|The Ultraspherical window's ''\u00b5'' parameter determines whether its Fourier transform's side-lobe amplitudes decrease, are level, or (shown here) increase with frequency.]]\n\nThe Ultraspherical window was introduced in 1984 by Roy Streit<ref name=Kabal/> and has application in  antenna array design,<ref name=Streit/> non-recursive filter design,<ref name=Kabal/> and spectrum analysis.<ref name=Deczky/>\n\nLike other adjustable windows, the Ultraspherical window has parameters that can be used to control its Fourier transform main-lobe width and relative side-lobe amplitude. Uncommon to other windows, it has an additional parameter which can be used to set the rate at which side-lobes decrease (or increase) in amplitude.<ref name=Deczky/><ref name=Bergen/>\n\nThe window can be expressed in the time-domain as follows:<ref name=Deczky/>\n\n:<math>\\begin{align}\nw[n] \n= \\frac{1}{N+1} \\left[ C^{\\mu}_{N}(x_0)+\\sum_{k=1}^{\\frac{N}{2}}  C^{\\mu}_{N}\\left(x_{0}\\cos\\frac{k\\pi}{N+1}\\right)\\cos\\frac{2n\\pi k}{N+1} \\right]\n\\end{align}</math>\n\nwhere <math>C^{\\mu}_{N}</math> is the [[Ultraspherical polynomial]] of degree N, and <math>x_0</math> and <math>\\mu</math> control the side-lobe patterns.<ref name=Deczky/>\n\nCertain specific values of <math>\\mu</math> yield other well-known windows: <math>\\mu=0</math> and <math>\\mu=1</math> give the Dolph\u2013Chebyshev and Saram\u00e4ki windows respectively.<ref name=Kabal/> See [http://octave.sourceforge.net/signal/function/ultrwin.html here] for illustration of Ultraspherical windows with varied parametrization.\n{{clear}}\n\n==== Exponential or Poisson window ====\n[[File:Window function and frequency response - Exponential (half window decay).svg|thumb|480px|Exponential window, ''\u03c4''&nbsp;=&nbsp;''N''/2]]\n[[File:Window function and frequency response - Exponential (60dB decay).svg|thumb|480px|Exponential window, ''\u03c4''&nbsp;=&nbsp;(''N''/2)/(60/8.69)]]\n\nThe Poisson window, or more generically the exponential window increases exponentially towards the center of the window and decreases exponentially in the second half. Since the [[exponential function]] never reaches zero, the values of the window at its limits are non-zero (it can be seen as the multiplication of an exponential function by a rectangular window <ref name=JOSPoisson/>). It is defined by\n\n:<math>w[n]=e^{-\\left|n-\\frac{N}{2}\\right|\\frac{1}{\\tau}},</math>\n\nwhere ''\u03c4'' is the time constant of the function. The exponential function decays as ''e''&nbsp;\u2243&nbsp;2.71828 or approximately 8.69&nbsp;dB per time constant.<ref name=Gade/>\nThis means that for a targeted decay of ''D''&nbsp;dB over half of the window length, the time constant ''\u03c4'' is given by\n\n:<math>\\tau = \\frac{N}{2}\\frac{8.69}{D}.</math>\n{{clear}}\n\n=== Hybrid windows ===\n\nWindow functions have also been constructed as multiplicative or additive combinations of other windows.\n\n==== Bartlett\u2013Hann window ====\n[[File:Window function and frequency response - Bartlett-Hann.svg|thumb|480px|right|Bartlett\u2013Hann window]]\n\n:<math>w[n]=a_0 - a_1 \\left |\\frac{n}{N}-\\frac{1}{2} \\right| - a_2 \\cos \\left (\\frac{2 \\pi n}{N}\\right )</math>\n\n:<math>a_0=0.62;\\quad a_1=0.48;\\quad a_2=0.38\\,</math>\n{{clear}}\n\n==== Planck\u2013Bessel window ====\n\n[[File:Window function and frequency response - Planck-Bessel (epsilon = 0.1, alpha = 4.45).svg|thumb|480px|right|Planck\u2013Bessel window, ''\u03b5''&nbsp;=&nbsp;0.1, ''\u03b1''&nbsp;=&nbsp;4.45]]\n\nA [[#Planck-taper window]] multiplied by a [[Kaiser window]] which is defined in terms of a [[Modified Bessel function#Modified Bessel functions : I.CE.B1.2C K.CE.B1|modified Bessel function]]. This hybrid window function was introduced to decrease the peak side-lobe level of the Planck-taper window while still exploiting its good asymptotic decay.<ref name=Berry/> It has two tunable parameters, ''\u03b5'' from the Planck-taper and ''\u03b1'' from the Kaiser window, so it can be adjusted to fit the requirements of a given signal.\n\n{{clear}}\n\n==== Hann\u2013Poisson window ====\n[[File:Window function and frequency response - Hann-Poisson (alpha = 2).svg|thumb|480px|Hann\u2013Poisson window, ''\u03b1''&nbsp;=&nbsp;2]]\nA [[#Hann and Hamming windows|Hann window]] multiplied by a [[#Exponential_or_Poisson_window|Poisson window]], which has no side-lobes, in the sense that its Fourier transform drops off forever away from the main lobe.  It can thus be used in [[hill climbing]] algorithms like [[Newton's method]].<ref name=HannPoisson/> The Hann\u2013Poisson window is defined by:\n\n:<math>w[n]=\\frac{1}{2}\\left(1-\\cos\\left(\\frac{2 \\pi n}{N}\\right)\\right)e^\\frac{-\\alpha\\left|N - 2n\\right|}{N}\\,=\\operatorname{hav}\\left(\\frac{2 \\pi n}{N}\\right)e^\\frac{-\\alpha\\left|N - 2n\\right|}{N}\\,</math>\n\nwhere ''\u03b1'' is a parameter that controls the slope of the exponential.\n{{Clear}}\n\n=== Other windows ===\n\n==== Lanczos window ====\n[[File:Window function and frequency response - Lanczos.svg|thumb|480px|right|Sinc or Lanczos window]]\n:<math>w[n] = \\operatorname{sinc}\\left(\\frac{2n}{N}-1\\right)</math>\n\n* used in [[Lanczos resampling]]\n* for the Lanczos window, <math>\\operatorname{sinc}(x)</math> is defined as <math>\\sin(\\pi x)/\\pi x</math>\n* also known as a ''sinc window'', because''':'''\n::<math>w_0(n) = \\operatorname{sinc}\\left(\\frac{2n}{N}\\right)\\,</math> is the main lobe of a normalized [[sinc function]]\n{{clear}}\n\n== Comparison of windows ==\n\n[[File:Window functions in the frequency domain.png|thumb|500px|right|Window functions in the frequency domain (\"spectral leakage\")]]\n\nWhen selecting an appropriate window function for an application, this comparison graph may be useful. The frequency axis has units of FFT \"bins\" when the window of length N is applied to data and a transform of length N is computed.  For instance, the value at frequency \u00bd \"bin\" (third tick mark) is the response that would be measured in bins k and k+1 to a sinusoidal signal at frequency k+\u00bd.  It is relative to the maximum possible response, which occurs when the signal frequency is an integer number of bins.  The value at frequency \u00bd is referred to as the maximum ''scalloping loss'' of the window, which is one metric used to compare windows.  The rectangular window is noticeably worse than the others in terms of that metric.\n\nOther metrics that can be seen are the width of the main lobe and the peak level of the sidelobes, which respectively determine the ability to resolve comparable strength signals and disparate strength signals.  The rectangular window (for instance) is the best choice for the former and the worst choice for the latter.  What cannot be seen from the graphs is that the rectangular window has the best noise bandwidth, which makes it a good candidate for detecting low-level sinusoids in an otherwise [[white noise]] environment.  Interpolation techniques, such as [[Discrete-time Fourier transform#L\u2264N|zero-padding]] and frequency-shifting, are available to mitigate its potential scalloping loss. {{clear}}\n\n== Overlapping windows ==\n\nWhen the length of a data set to be transformed is larger than necessary to provide the desired frequency resolution, a common practice is to subdivide it into smaller sets and window them individually.  To mitigate the \"loss\" at the edges of the window, the individual sets may overlap in time.  See [[Welch method]] of power spectral analysis and the [[modified discrete cosine transform]].\n\n== Two-dimensional windows ==\nTwo-dimensional windows are commonly used in image processing to reduce unwanted high-frequencies in the image Fourier transform.<ref name=Hovden/> They can be constructed from one-dimensional windows in either of two forms.<ref name=Bernstein/> The separable form, <math>W(m,n)=w(m)w(n)</math> is trivial to compute. The [[Radial function|radial]] form, <math>W(m,n)=w(r)</math>, which involves the radius <math>r=\\sqrt{(m-M/2)^2+(n-N/2)^2}</math>, is [[Isotropy|isotropic]], independent on the orientation of the coordinate axes. Only the [[#Gaussian_window|Gaussian]] function is both separable and isotropic.<ref name=Awad/> The separable forms of all other window functions have corners that depend on the choice of the coordinate axes. The isotropy/[[anisotropy]] of a two-dimensional window function is shared by its two-dimensional Fourier transform. The difference between the separable and radial forms is akin to the result of [[diffraction]] from rectangular vs. circular appertures, which can be visualized in terms of the product of two [[sinc function]]s vs. an [[Airy function]], respectively.\n\n== See also ==\n{{Commons category|Window function}}\n* [[Spectral leakage]]\n* [[Multitaper]]\n* [[Apodization]]\n* [[Welch method]]\n* [[Short-time Fourier transform]]\n* [[Window design method]]\n* [[Kolmogorov\u2013Zurbenko filter]]\n\n== Notes ==\n{{notelist-ua}}\n\n== Page citations==\n{{notelist-la}}\n\n==References==\n{{reflist|1|refs=\n<ref name=Oppenheim>\n{{Cite book\n |ref=refOppenheim\n |last=Oppenheim\n |first=Alan V.\n |authorlink=Alan V. Oppenheim\n |last2=Schafer\n |first2=Ronald W.\n |author2-link=Ronald W. Schafer\n |last3=Buck\n |first3=John R.\n |title=Discrete-time signal processing\n |year=1999\n |publisher=Prentice Hall\n |location=Upper Saddle River, N.J.\n |isbn=0-13-754920-2\n |edition=2nd\n |chapter=7.2\n |pages=[https://archive.org/details/discretetimesign00alan/page/465 465]\u2013478\n |url-access=registration\n |url=https://archive.org/details/discretetimesign00alan\n}}&nbsp; url=https://d1.amobbs.com/bbs_upload782111/files_24/ourdev_523225.pdf\n</ref>\n\n<ref name=Weisstein>\n{{cite book |title=CRC Concise Encyclopedia of Mathematics |first=Eric W. |last=Weisstein |publisher=CRC Press |year=2003 |isbn=978-1-58488-347-0 |url=https://books.google.com/?id=aFDWuZZslUUC&pg=PA97&dq=apodization+function\n}}</ref>\n\n<ref name=Roads>\n{{cite book |title=Microsound |first=Curtis |last=Roads |publisher=MIT Press |year=2002 |isbn=978-0-262-18215-7\n}}</ref>\n\n<ref name=Cattani>\n{{cite book |title=Wavelet and Wave Analysis As Applied to Materials With Micro Or Nanostructure |first=Carlo |last=Cattani |first2=Jeremiah |last2=Rushchitsky |publisher=World Scientific |year=2007 |isbn=978-981-270-784-0 |url=https://books.google.com/?id=JuJKu_0KDycC&pg=PA53&dq=define+%22window+function%22+nonzero+interval\n}}</ref>\n\n<ref name=OLA>\n{{cite web|url=https://www.dsprelated.com/freebooks/sasp/Overlap_Add_OLA_STFT_Processing.html|title=Overlap-Add (OLA) STFT Processing {{!}} Spectral Audio Signal Processing |website=www.dsprelated.com |access-date=2016-08-07 |quote=The window is applied twice: once before the FFT (the \"analysis window\") and secondly after the inverse FFT prior to reconstruction by overlap-add (the so-called \"synthesis window\"). ... More generally, any positive COLA window can be split into an analysis and synthesis window pair by taking its square root.\n}}</ref>\n\n<ref name=Carlson>\n{{cite book |url=https://books.google.com/?id=V_JSAAAAMAAJ |title=Communication Systems: An Introduction to Signals and Noise in Electrical Communication |first=A. Bruce |last=Carlson |publisher=McGraw-Hill |year=1986 |isbn=978-0-07-009960-9\n}}</ref>\n\n<ref name=FIRfilters>\n{{cite web |url=http://www.labbookpages.co.uk/audio/firWindowing.html|title=FIR Filters by Windowing - The Lab Book Pages |website=www.labbookpages.co.uk |access-date=2016-04-13\n}}</ref>\n\n<ref name=Tuwien>\n{{cite web |url=http://www.cg.tuwien.ac.at/research/vis/vismed/Windows/MasteringWindows.pdf\n|title=Mastering Windows |website=www.cg.tuwien.ac.at |access-date=2020-02-12\n}}</ref>\n\n<ref name=HPmemory>\n{{cite web |url=http://www.hpmemoryproject.org/an/pdf/an_243.pdf|title=The Fundamentals of Signal Analysis Application Note 243 |website=hpmemoryproject.org |accessdate=10 April 2018\n}}</ref>\n\n<ref name=MWhann>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/hann.html |title=Hann (Hanning) window - MATLAB hann |website=www.mathworks.com |access-date=2020-02-12\n}}</ref>\n\n<ref name=MWwindow>\n{{cite web |url=http://www.mathworks.com/help/dsp/ref/windowfunction.html |title=Window Function |website=www.mathworks.com |access-date=2019-04-14\n}}</ref>\n\n<ref name=Carlin>\n{{cite patent |inventor-last=Carlin |inventor-first=Joe |inventor2-last=Collins |inventor2-first=Terry |inventor3-last=Hays |inventor3-first=Peter |inventor4-last=Hemmerdinger |inventor4-first=Barry |inventor5-last=Kellogg |inventor5-first=Robert |inventor6-last=Kettig |inventor6-first=Robert |inventor7-last=Lemmon |inventor7-first=Bradley |inventor8-last=Murdock |inventor8-first=Thomas |inventor9-last=Tamaru |inventor9-first=Robert |inventor10-last=Ware |inventor10-first=Stuart \n|publication-date=1999-12-10\n|fdate=1999-12-10\n|gdate=2005-05-24\n|title=Wideband communication intercept and direction finding device using hyperchannelization \n|country-code=US\n|description=patent \n|status=patent \n|patent-number=6898235\n|url=https://patentimages.storage.googleapis.com/4d/39/2a/cec2ae6f33c1e7/US6898235.pdf\n}}, url2=https://worldwide.espacenet.com/patent/search/family/034590049/publication/US6898235B1?q=pn%3DUS6898235\n</ref>\n\n<ref name=Rorabaugh>\n{{cite book\n|first=C.Britton |last=Rorabaugh\n|title=DSP Primer\n|series=Primer series\n|date=October 1998\n|publisher=McGraw-Hill Professional\n|isbn=978-0070540040\n|page=196\n}}</ref>\n\n<ref name=Toraichi89>\n{{cite journal |last1=Toraichi |first1=K. |last2=Kamada |first2=M. |last3=Itahashi |first3=S. |last4=Mori |first4=R. |title=Window functions represented by B-spline functions |doi=10.1109/29.17517 |journal=IEEE Transactions on Acoustics, Speech, and Signal Processing |volume=37 |pages=145\u2013147 |year=1989\n}}</ref>\n\n<ref name=f.harris>\n{{cite journal\n  |ref=refHarris\n  |doi=10.1109/PROC.1978.10837\n  |last=Harris\n  |first=Fredric J.\n  |title=On the use of Windows for Harmonic Analysis with the Discrete Fourier Transform\n  |journal=Proceedings of the IEEE\n  |volume=66\n  |issue=1\n  |pages=51\u201383\n  |date=Jan 1978\n  |url=http://web.mit.edu/xiphmont/Public/windows.pdf|citeseerx=10.1.1.649.9880\n  |bibcode=1978IEEEP..66...51H\n}} ''The fundamental 1978 paper on FFT windows by Harris, which specified many windows and introduced key metrics used to compare them.''\n</ref>\n\n<ref name=Tukey>\n{{cite journal |last=Tukey |first=J.W. |title=An introduction to the calculations of numerical spectrum analysis |journal=Spectral Analysis of Time Series |year=1967 |pages=25\u201346\n}}</ref>\n\n<ref name=MWtriang>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/triang.html |title=Triangular window - MATLAB triang |website=www.mathworks.com |access-date=2016-04-13\n}}</ref>\n\n<ref name=MWbohman>\n{{cite web |url=https://www.mathworks.com/help/signal/ref/bohmanwin.html |title=Bohman window - R2019B |website=www.mathworks.com |access-date=2020-02-12\n}}</ref>\n\n<ref name=Welch1967>\n{{cite journal |last1=Welch |first1=P. |title=The use of fast Fourier transform for the estimation of power spectra: A method based on time averaging over short, modified periodograms |doi=10.1109/TAU.1967.1161901 |journal=IEEE Transactions on Audio and Electroacoustics |volume=15 |issue=2 |pages=70\u201373 |year=1967| bibcode=1967ITAE...15...70W\n}}</ref>\n\n<ref name=Bosi>\n{{cite book|last1=Bosi |first1=Marina |last2=Goldberg |first2=Richard E. |title=Introduction to Digital Audio Coding and Standards |chapter=Time to Frequency Mapping Part II: The MDCT |publisher=Springer US |series=The Springer International Series in Engineering and Computer Science |volume=721 |date=2003 |location=Boston, MA |page=106 |isbn=978-1-4615-0327-9 |doi=10.1007/978-1-4615-0327-9\n}}</ref>\n\n<ref name=Kido>\n{{cite journal |last1=Kido |first1=Ken'iti |last2=Suzuki |first2=Hideo |last3=Ono |first3=Takahiko |last4=Fukushima |first4=Manabu |date=1998 |title=Deformation of impulse response estimates by time window in cross spectral technique |journal=Journal of the Acoustical Society of Japan (E) |volume=19 |issue=5 |pages=349\u2013361 |doi=10.1250/ast.19.349\n}}</ref>\n\n<ref name=Landisman>\n{{cite journal |last1=Landisman |first1=M. |last2=Dziewonski |first2=A. |last3=Sat\u00f4 |first3=Y. |date=1969-05-01 |title=Recent Improvements in the Analysis of Surface Wave Observations |journal=Geophysical Journal International |volume=17 |issue=4 |pages=369\u2013403 |doi=10.1111/j.1365-246X.1969.tb00246.x |bibcode=1969GeoJ...17..369L\n}}</ref>\n\n<ref name=Enochson>\n{{cite book |title=Programming and Analysis for Digital Time Series Data |first=Loren D. |last=Enochson |first2=Robert K. |last2=Otnes |publisher=U.S. Dept. of Defense, Shock and Vibration Info. Center |year=1968 |pages=142 |url=https://books.google.com/?id=duBQAAAAMAAJ&q=%22hamming+window%22+date:0-1970&dq=%22hamming+window%22+date:0-1970\n}}</ref>\n\n<ref name=sunar>\n{{cite web |url=https://users.wpi.edu/~sunar/courses/ece3311/slides/ch16.pdf |title=A digital quadrature amplitude modulation (QAM) Radio: Building a better radio |website=users.wpi.edu |access-date=2020-02-12 |page=28\n}}</ref>\n\n<ref name=sunar2>\n{{cite web |url=https://users.wpi.edu/~sunar/courses/ece3311/slides/ch08.pdf |title=Bits to Symbols to Signals and back again |website=users.wpi.edu |access-date=2020-02-12 |page=7\n}}</ref>\n\n<ref name=SRD>\n{{cite book\n | last =Johnson\n | first =C.Richard, Jr\n | last2 =Sethares\n | first2 =William A.\n | last3 =Klein\n | first3 =Andrew G.\n | title =Software Receiver Design\n | publisher =Cambridge University Press\n | date =2011-08-18\n | page =232\n | isbn =1139501453\n}}, also https://cnx.org/contents/rS1kP4Jm@4/Coding#footnote-ref10</ref>\n\n<ref name=Nuttall>\n{{cite journal\n |ref=refNuttall\n | doi =10.1109/TASSP.1981.1163506\n | last =Nuttall\n | first =Albert H.\n | title =Some Windows with Very Good Sidelobe Behavior\n | journal =IEEE Transactions on Acoustics, Speech, and Signal Processing\n | volume =29\n | issue =1\n | pages =84\u201391\n | date =Feb 1981\n | url =https://zenodo.org/record/1280930\n}} ''Extends Harris' paper, covering all the window functions known at the time, along with key metric comparisons.''\n</ref>\n\n<ref name=Rabiner>\n{{Cite book\n| ref=refRabiner\n| author1=Rabiner, Lawrence R.\n| author2=Gold, Bernard\n| title=Theory and application of digital signal processing\n| year=1975\n| publisher=Prentice-Hall\n| location=Englewood Cliffs, N.J.\n| isbn=0-13-914101-4\n| chapter=3.11\n| page=[https://archive.org/details/theoryapplicatio00rabi/page/94 94]\n| url-access=registration\n| url=https://archive.org/details/theoryapplicatio00rabi/page/94\n}}</ref>\n\n<ref name=Crochiere>\n{{cite book | ref=refCrochiere \n|last=Crochiere |first=R.E. |last2=Rabiner |first2=L.R. |title=Multirate Digital Signal Processing |year=1983 |chapter=4.3.1 |page=144 |publisher=Prentice-Hall |location=Englewood Cliffs, NJ |isbn=0136051626 |url=https://kupdf.net/download/multirate-digital-signal-processing-crochiere-rabiner_58a7065b6454a7e80bb1e993_pdf\n}}</ref>\n\n<ref name=Kaiser_Window.html>\n{{cite web\n |url=https://www.dsprelated.com/freebooks/sasp/Kaiser_Window.html\n |title=Kaiser Window\n |website=www.dsprelated.com\n |access-date=2020-04-08\n |quote=The following Matlab comparison of the DPSS and Kaiser windows illustrates the interpretation of {{math|\u03b1}} as the bin number of the edge of the critically sampled window main lobe.\n}}</ref>\n\n<ref name=MWBlackman>\n{{cite web |url=http://mathworld.wolfram.com/BlackmanFunction.html |title=Blackman Function |last=Weisstein |first=Eric W. |website=mathworld.wolfram.com |language=en |access-date=2016-04-13\n}}</ref>\n\n<ref name=lvanl>\n{{cite web |url=http://zone.ni.com/reference/en-XX/help/371361E-01/lvanlsconcepts/char_smoothing_windows/#Exact_Blackman |title=Characteristics of Different Smoothing Windows - NI LabVIEW 8.6 Help |website=zone.ni.com |access-date=2020-02-13\n}}</ref>\n\n<ref name=Blackman1959>\n{{cite book |url=https://smile.amazon.com/Measurement-Power-Spectra-Communications-Engineering/dp/B0006AW1C4 |title=The Measurement of Power Spectra from the Point of View of Communications Engineering |last=Blackman |first=R.B. |last2=Tukey |first2=J.W. |date=1959-01-01 |publisher=Dover Publications |isbn=9780486605074 |page=99\n}}</ref>\n\n<ref name=Heinzel2002>\n{{cite techreport |first=G. |last=Heinzel |last2=R\u00fcdiger |first2=A. |last3=Schilling |first3=R. |title=Spectrum and spectral density estimation by the Discrete Fourier transform (DFT), including a comprehensive list of window functions and some new flat-top windows |id=395068.0 |institution=Max Planck Institute (MPI) f\u00fcr Gravitationsphysik / Laser Interferometry & Gravitational Wave Astronomy |year=2002 |url=http://edoc.mpg.de/395068 |accessdate=2013-02-10\n}}</ref>\n\n<ref name=SWsmith>\n{{cite book |last=Smith |first=Steven W. |title=The Scientist and Engineer's Guide to Digital Signal Processing |url=http://www.dspguide.com/ch9/1.htm |accessdate=2013-02-14 |year=2011 |publisher=California Technical Publishing |location=San Diego, California, USA}}</ref>\n\n<ref name=Rife>\n{{citation |last=Rife |first=David C. |first2=G.A. |last2=Vincent |title=Use of the discrete Fourier transform in the measurement of frequencies and levels of tones |journal=Bell Syst. Tech. J. |volume=49 |issue=2 |year=1970 |pages=197\u2013228 |doi=10.1002/j.1538-7305.1970.tb01766.x\n}}</ref>\n\n<ref name=Andria>\n{{citation |last1=Andria |first1=Gregorio |first2=Mario |last2=Savino |first3=Amerigo |last3=Trotta |title=Windows and interpolation algorithms to improve electrical measurement accuracy |journal=IEEE Transactions on Instrumentation and Measurement |volume=38 |issue=4 |year=1989 |pages=856\u2013863 |doi=10.1109/19.31004\n}}</ref>\n\n<ref name=Schoukens>\n{{citation |last1=Schoukens |first1=Joannes |first2=Rik |last2=Pintelon |first3=Hugo |last3=Van Hamme |title=The interpolated fast Fourier transform: a comparative study |journal=IEEE Transactions on Instrumentation and Measurement|volume=41 |issue=2 |year=1992 |pages=226\u2013232 |doi=10.1109/19.137352}}</ref>\n\n<ref name=Starosielec2014>\n{{cite journal |last=Starosielec |first=S. |last2=H\u00e4gele |first2=D. |title=Discrete-time windows with minimal RMS bandwidth for given RMS temporal width |journal=Signal Processing |volume=102 |pages=240\u2013246 |date=2014 |doi=10.1016/j.sigpro.2014.03.033\n}}</ref>\n\n<ref name=Chakraborty>\n{{cite book |doi=10.1109/ICASSP.2013.6638833 |chapter=Generalized normal window for digital signal processing |title=2013 IEEE International Conference on Acoustics, Speech and Signal Processing |pages=6083\u20136087 |year=2013 |last1=Chakraborty |first1=Debejyo |last2=Kovvali |first2=Narayan |isbn=978-1-4799-0356-6\n}}</ref>\n\n<ref name=Diethorn>\n{{cite journal |doi=10.1109/78.295214 |title=The generalized exponential time-frequency distribution |journal=IEEE Transactions on Signal Processing |volume=42 |issue=5 |pages=1028\u20131037 |year=1994 |last1=Diethorn |first1=E.J. |bibcode=1994ITSP...42.1028D\n}}</ref>\n\n<ref name=MWtukey>\n{{cite web |url=http://www.mathworks.com/help/signal/ref/tukeywin.html|title=Tukey (tapered cosine) window - MATLAB tukeywin |website=www.mathworks.com |access-date=2019-11-21\n}}</ref>\n\n<ref name=Bloomfield>\n{{cite book\n | last =Bloomfield\n | first =P.\n | title =Fourier Analysis of Time Series: An Introduction\n | publisher =Wiley-Interscience\n | date =2000\n | location =New York\n}}</ref>\n\n<ref name=Tu>\n{{cite book |last=Tu |first=Loring W. |title=An Introduction to Manifolds |chapter=Bump Functions and Partitions of Unity |year=2008 |publisher=Springer |location=New York |isbn=978-0-387-48098-5 |pages=127\u2013134 |doi=10.1007/978-0-387-48101-2_13 |series=Universitext\n}}</ref>\n\n<ref name=McKechan>\n{{cite journal |last=McKechan |first=D.J.A. |last2=Robinson |first2=C. |last3=Sathyaprakash |first3=B.S. |title=A tapering window for time-domain templates and simulated signals in the detection of gravitational waves from coalescing compact binaries |journal=Classical and Quantum Gravity |date=21 April 2010 |volume=27 |issue=8 |pages=084020 |doi=10.1088/0264-9381/27/8/084020 |arxiv=1003.2939 |bibcode = 2010CQGra..27h4020M\n}}</ref>\n\n<ref name=Kaiser1966>\n{{cite book |title=System Analysis by Digital Computer |last=Kaiser |first=James F. |last2=Kuo |first2=Franklin F. |publisher=John Wiley and Sons |year=1966 |pages=232\u2013235 |quote=This family of window functions was \"discovered\" by Kaiser in 1962 following a discussion with B. F. Logan of the Bell Telephone Laboratories. ... Another valuable property of this family ... is that they also approximate closely the prolate spheroidal wave functions of order zero.\n}}</ref>\n\n<ref name=Kaiser1964>\n{{cite journal |last=Kaiser |first=James F. |date=Nov 1964 |title=A family of window functions having nearly ideal properties |journal=Unpublished Memorandum\n}}</ref>\n\n<ref name=Kaiser1980>\n{{cite journal |last1=Kaiser |first1=James F. |last2=Schafer |first2=Ronald W. |doi=10.1109/TASSP.1980.1163349 |title=On the use of the I<sub>0</sub>-sinh window for spectrum analysis |journal=IEEE Transactions on Acoustics, Speech, and Signal Processing |volume=28 |pages=105\u2013107 |year=1980\n}}</ref>\n\n<ref name=MWkaiser>\n{{cite web |url=https://www.mathworks.com/help/signal/ref/kaiser.html |website=www.mathworks.com |title=Kaiser Window, R2020a |publisher=Mathworks |access-date=9 April 2020\n}}</ref>\n\n<ref name=Kabal>\n{{cite journal |last=Kabal |first=Peter |title=Time Windows for Linear Prediction of Speech |journal=Technical Report, Dept. Elec. & Comp. Eng., McGill University |year=2009 |issue=2a |page=31 |url=http://www-mmsp.ece.mcgill.ca/Documents/Reports/2009/KabalR2009b.pdf|accessdate=2 February 2014\n}}</ref>\n\n<ref name=Streit>\n{{cite journal |last=Streit |first=Roy |title=A two-parameter family of weights for nonrecursive digital filters and antennas |journal=Transactions of ASSP |year=1984 |volume=32 |pages=108\u2013118 |doi=10.1109/tassp.1984.1164275\n}}</ref>\n\n<ref name=Bergen>\n{{cite journal\n  |last=Bergen\n  |first=S.W.A.\n  |first2=A. |last2=Antoniou\n  |title=Design of Ultraspherical Window Functions with Prescribed Spectral Characteristics\n  |journal=EURASIP Journal on Applied Signal Processing\n  |volume=2004\n  |issue=13\n  |pages=2053\u20132065\n  |year=2004\n  |doi=10.1155/S1110865704403114 |bibcode=2004EJASP2004...63B\n}}</ref>\n\n<ref name=Deczky>\n{{cite book |last=Deczky |first=Andrew |chapter=Unispherical Windows |year=2001 |volume=2 |pages=85\u201388 |doi=10.1109/iscas.2001.921012 |isbn=978-0-7803-6685-5 |title=ISCAS 2001. The 2001 IEEE International Symposium on Circuits and Systems (Cat. No.01CH37196)\n}}</ref>\n\n<ref name=Zphase>\n{{cite web |url=https://ccrma.stanford.edu/~jos/filters/Zero_Phase_Filters_Even_Impulse.html\n|title=Zero Phase Filters |website=ccrma.stanford.edu |access-date=2020-02-12\n}}</ref>\n\n<ref name=Bartlett>\n{{cite web|url=https://ccrma.stanford.edu/~jos/sasp/Bartlett_Triangular_Window.html|title=Bartlett Window|website=ccrma.stanford.edu|access-date=2016-04-13\n}}</ref>\n\n<ref name=JOShann>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hann_Hanning_Raised_Cosine.html |title=Hann or Hanning or Raised Cosine |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=PowCos>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Power_of_Cosine_Window_Family.html |title=Power-of-Cosine Window Family |website=ccrma.stanford.edu |accessdate=10 April 2018\n}}</ref>\n\n<ref name=JOSHamming>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hamming_Window.html |title=Hamming Window|website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSBlack>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Blackman_Harris_Window_Family.html |title=Blackman-Harris Window Family |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSBlack3>\n{{Cite web |url=https://ccrma.stanford.edu/~jos/sasp/Three_Term_Blackman_Harris_Window.html |title=Three-Term Blackman-Harris Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSGauss2>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Gaussian_Window_Transform.html |title=Gaussian Window and Transform |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSGauss>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Matlab_Gaussian_Window.html |title=Matlab for the Gaussian Window |website=ccrma.stanford.edu |access-date=2016-04-13 |quote=Note that, on a dB scale, Gaussians are quadratic. This means that parabolic interpolation of a sampled Gaussian transform is exact. ... quadratic interpolation of spectral peaks may be more accurate on a log-magnitude scale (e.g., dB) than on a linear magnitude scale\n}}</ref>\n\n<ref name=interpolation>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Quadratic_Interpolation_Spectral_Peaks.html |title=Quadratic Interpolation of Spectral Peaks |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=Slepian>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Slepian_DPSS_Window.html |title=Slepian or DPSS Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=KaiserDPSS>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Kaiser_DPSS_Windows_Compared.html |website=ccrma.stanford.edu |title=Kaiser and DPSS Windows Compared |last=Smith |first=J.O. |date=2011 |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSKaiser>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Kaiser_Window.html |quote=Sometimes the Kaiser window is parametrized by \u03b1, where \u03b2=\u03c0\u03b1. |website=ccrma.stanford.edu |title=Kaiser Window |last=Smith |first=J.O. |date=2011 |access-date=2019-03-20\n}}</ref>\n\n<ref name=Dolph>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Dolph_Chebyshev_Window.html |title=Dolph-Chebyshev Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=DolphDef>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Dolph_Chebyshev_Window_Definition.html |title=Dolph-Chebyshev Window Definition |website=ccrma.stanford.edu |access-date=2019-03-05\n}}</ref>\n\n<ref name=HannPoisson>\n{{cite web |url=https://ccrma.stanford.edu/~jos/sasp/Hann_Poisson_Window.html |title=Hann-Poisson Window |website=ccrma.stanford.edu |access-date=2016-04-13\n}}</ref>\n\n<ref name=JOSPoisson>\n{{cite web\n | url =https://ccrma.stanford.edu/~jos/sasp/Poisson_Window.html\n | title =Poisson Window\n | last =Smith\n | first =Julius O. III\n | date =2011-04-23\n | website =ccrma.stanford.edu\n | access-date =2020-02-12\n}}</ref>\n\n<ref name=Gade>\n{{cite web\n  | last =Gade\n  | first =Svend\n  | last2 =Herlufsen\n  | first2 =Henrik\n  | title =Technical Review No 3-1987: Windows to FFT analysis (Part I)\n  | publisher =Br\u00fcel & Kj\u00e6r\n  | year =1987\n  | url =http://www.bksv.com/doc/Bv0031.pdf\n  | accessdate =2011-11-22\n}}</ref>\n\n<ref name=Berry>\n{{cite journal |last=Berry |first=C.P.L. |last2=Gair |first2=J.R. |title=Observing the Galaxy's massive black hole with gravitational wave bursts |journal=[[Monthly Notices of the Royal Astronomical Society]] |date=12 December 2012 |volume=429 |issue=1 |arxiv=1210.2778 |pages=589\u2013612 |doi=10.1093/mnras/sts360|bibcode=2013MNRAS.429..589B\n}}</ref>\n\n<ref name=Hovden>\n{{cite journal |title=Periodic Artifact Reduction in Fourier Transforms of Full Field Atomic Resolution Images |author=R. Hovden, Y. Jiang, H. Xin, L.F. Kourkoutis |journal=Microscopy and Microanalysis |volume=21 |issue=2 |pages=436\u2013441 |year=2015 |doi=10.1017/S1431927614014639 |pmid=25597865 |bibcode=2015MiMic..21..436H\n}}</ref>\n\n<ref name=Bernstein>\n{{cite book\n | last =Bernstein\n | first =Matt A.\n | last2 =King\n | first2 =Kevin Franklin\n | last3 =Zhou\n | first3 =Xiaohong Joe\n | title =Handbook of MRI Pulse Sequences\n | publisher =Elsevier Academic Press\n | date =2004\n | location =London\n | pages =495\u2013499\n | language =English\n | url =https://books.google.com/books?id=d6PLHcyejEIC&lpg=PA495&ots=tcBHi9Obfy&dq=image%20tapering%20tukey&pg=PA496#v=onepage&q&f=false\n | isbn =0120928612\n}}</ref>\n\n<ref name=Awad>\n{{cite book |last1=Awad |first1=A.I. |last2=Baba |first2=K. |chapter=An Application for Singular Point Location in Fingerprint Classification |doi=10.1007/978-3-642-22389-1_24 |title=Digital Information Processing and Communications |series=Communications in Computer and Information Science |volume=188 |pages=262 |year=2011 |isbn=978-3-642-22388-4\n}}</ref>\n\n<ref name=Vaidyanathan>\n{{cite journal |last1=Lin |first1=Yuan-Pei |last2=Vaidyanathan |first2=P.P. |title=A Kaiser Window Approach for the Design of Prototype Filters of Cosine Modulated Filterbanks |journal=IEEE Signal Processing Letters |volume=5 |issue=6 | pages=132\u2013134 |date=June 1998 |url=http://authors.library.caltech.edu/6891/1/LINieeespl98.pdf |access-date=2017-03-16| doi=10.1109/97.681427 |bibcode=1998ISPL....5..132L\n}}</ref>\n}}\n\n== Further reading ==\n{{refbegin}}\n* {{cite web\n | url =https://apps.dtic.mil/dtic/tr/fulltext/u2/a034956.pdf\n | title =Windows, Harmonic Analysis, and the Discrete Fourier Transform\n | last =Harris\n | first =Frederic J.\n | date =September 1976\n | website =apps.dtic.mil\n | publisher =Naval Undersea Center, San Diego\n | access-date =2019-04-08\n | quote = }}\n* {{Cite book\n |doi=10.7795/110.20121022aa\n |year=2012\n |isbn=978-3-86918-281-0\n |last1=Albrecht\n |first1=Hans-Helge\n |title=Tailored minimum sidelobe and minimum sidelobe cosine-sum windows. Version 1.0\n |volume=ISBN 978-3-86918-281-0 ). editor: Physikalisch-Technische Bundesanstalt\n |publisher=Physikalisch-Technische Bundesanstalt\n }}\n* {{cite journal\n  |last =Bergen\n  |first =S.W.A.\n  |first2=A. |last2=Antoniou\n  |title=Design of Nonrecursive Digital Filters Using the Ultraspherical Window Function\n  |journal=EURASIP Journal on Applied Signal Processing\n  |volume=2005\n  |issue=12\n  |pages=1910\u20131922\n  |year=2005\n  |doi=10.1155/ASP.2005.1910 |bibcode=2005EJASP2005...44B\n  }}\n* {{Cite book\n |last=Prabhu |first=K. M. M.\n |title=Window Functions and Their Applications in Signal Processing\n |year=2014\n |publisher=CRC Press\n |location=Boca Raton, FL\n |isbn=978-1-4665-1583-3\n}}\n* {{Cite patent\n | title = System and method for generating a root raised cosine orthogonal frequency division multiplexing (RRC OFDM) modulation\n | country-code = US\n | description = patent\n | patent-number = 7065150\n | postscript = <!--None-->\n | inventor-last =Park\n | inventor-first =Young-Seo\n | publication-date = 2003\n | issue-date = 2006\n |ref=none\n}}\n\n==External links==\n* LabView Help, Characteristics of Smoothing Filters, http://zone.ni.com/reference/en-XX/help/371361B-01/lvanlsconcepts/char_smoothing_windows/\n* Evaluation of Various Window Function using Multi-Instrument, http://www.multi-instrument.com/doc/D1003/Evaluation_of_Various_Window_Functions_using_Multi-Instrument_D1003.pdf\n* Creation and properties of Cosine-sum Window functions, http://electronicsart.weebly.com/fftwindows.html\n* [http://www.ritec-eg.com/Library%20&%20Tools/Windowing-Leakage-Bin-Centering-Window-Noise-Factor.html Online Interactive FFT, Windows, Resolution, and Leakage Simulation | RITEC | Library & Tools]\n\n{{refend}}\n\n[[Category:Fourier analysis]]\n[[Category:Signal estimation]]\n[[Category:Digital signal processing]]\n[[Category:Types of functions]]\n", "name_user": "Bob K", "label": "safe", "comment": "\u2192\u200eDFT-even:slight correction", "url_page": "//en.wikipedia.org/wiki/Window_function"}
