{"title_page": "First-generation programming language", "text_new": "A first [[programming language generations|generation (programming) language]] (1GL) is a grouping of programming languages that are machine level languages used to program [[first-generation computer]]s. Originally, no [[translator]] was used to [[compiler|compile]] or [[assembly language|assemble]] the first-generation language. The first-generation programming instructions were entered through the [[front panel]] switches of the computer system.\n\nThe instructions in 1GL are made of [[binary number]]s, represented by 1s and 0s. This makes the language suitable for the understanding of the machine but far more difficult to interpret and learn by the human programmer.\n\nThe main advantage of programming in 1GL is that the code can run very fast and very efficiently, precisely because the instructions are executed directly by the [[central processing unit]] (CPU). One of the main disadvantages of programming in a [[Low-level programming language|low level language]] is that when an error occurs, the code is not as easy to fix.\n\nFirst generation languages are very much adapted to a specific computer and CPU, and code portability is therefore significantly reduced in comparison to [[high-level programming language|higher level languages]].\n\nModern day programmers still occasionally use machine level code, especially when programming lower level functions of the system, such as [[device driver|drivers]], [[interface (computing)#Hardware interfaces|interfaces]] with [[firmware]] and hardware devices. Modern tools such as native-code compilers are used to produce machine level from a higher-level language.\n\n==What's next==\n* [[Second-generation programming language]]\n* [[Third-generation programming language]]\n* [[Fourth-generation programming language]]\n* [[Fifth-generation programming language]]\n\n==References==\n{{Reflist}}\n\n===General===\n1. Nwankwogu S.E (2016). Programming Languages and their history.\n\n{{Programming language generations}}\n\n[[Category:Programming language classification]]\n", "text_old": "{{Refimprove|date=September 2013}}\nA '''first-generation programming language''' ('''1GL''') is a [[machine code|machine-level]] [[programming language]].<ref name=\"Computer Hope\">[http://www.computerhope.com/jargon/num/1gl.htm \"Computer Hope, Generation languages\"]</ref>\n\nA first [[programming language generations|generation (programming) language]] (1GL) is a grouping of programming languages that are machine level languages used to program [[first-generation computer]]s. Originally, no [[translator]] was used to [[compiler|compile]] or [[assembly language|assemble]] the first-generation language. The first-generation programming instructions were entered through the [[front panel]] switches of the computer system.\n\nThe instructions in 1GL are made of [[binary number]]s, represented by 1s and 0s. This makes the language suitable for the understanding of the machine but far more difficult to interpret and learn by the human programmer.\n\nThe main advantage of programming in 1GL is that the code can run very fast and very efficiently, precisely because the instructions are executed directly by the [[central processing unit]] (CPU). One of the main disadvantages of programming in a [[Low-level programming language|low level language]] is that when an error occurs, the code is not as easy to fix.\n\nFirst generation languages are very much adapted to a specific computer and CPU, and code portability is therefore significantly reduced in comparison to [[high-level programming language|higher level languages]].\n\nModern day programmers still occasionally use machine level code, especially when programming lower level functions of the system, such as [[device driver|drivers]], [[interface (computing)#Hardware interfaces|interfaces]] with [[firmware]] and hardware devices. Modern tools such as native-code compilers are used to produce machine level from a higher-level language.\n\n==What's next==\n* [[Second-generation programming language]]\n* [[Third-generation programming language]]\n* [[Fourth-generation programming language]]\n* [[Fifth-generation programming language]]\n\n==References==\n{{Reflist}}\n\n===General===\n1. Nwankwogu S.E (2016). Programming Languages and their history.\n\n{{Programming language generations}}\n\n[[Category:Programming language classification]]\n", "name_user": "Brian R Hunter", "label": "unsafe", "comment": "(Reverted edits byA D Monroe III(talk) to last version by Lcodyh803)", "url_page": "//en.wikipedia.org/wiki/First-generation_programming_language"}
