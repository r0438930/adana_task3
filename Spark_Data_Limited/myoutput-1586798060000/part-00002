{"title_page": "Computer Science and Engineering", "text_new": "<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:300px;\">\n{| style=\"border:1px solid #ccc;\"\n|-\n| [[File:Kernel_Machine.svg|144px|alt=Kernel machines are used to compute non-linearly separable functions into a higher dimension linearly separable function.|Machine Learning|link=Machine_learning]]\n| [[File:Lambda lc.svg|144px|alt=large capital lambda|Programming language theory|link=Programming language theory]]\n|-\n| [[File:ABasicComputer.gif|144px|alt=Block diagram of a basic CPU|Computer Architecture|link=Computer architecture]]\n| [[File:SMSC_LAN91C110_ethernet_chip.jpg|144px|alt=\nA close-up of the SMSC LAN91C110 (SMSC 91x) chip, an embedded Ethernet chip|Embadded Systems|link=Embedded_system]]\n|-\n| [[File:Euclid_flowchart.svg|144px|alt=Flowchart of an algorithm (Euclid's algorithm) for calculating the greatest common divisor|link=Algorithm]]\n| [[File:Jpeg2000_2-level_wavelet_transform-lichtenstein.png|144px|alt=An example of the 2D discrete wavelet transform that is used in JPEG2000.|link=Digital Signal Processing]]\n|-\n| [[File:Diopsis.jpg|144px|alt=A VLSI integrated-circuit die|Very Large Scale Integration|link=Very Large Scale Integration]]\n| [[File:Command_line.png|144px|alt=A screenshot of the Bash command line.|Operating system|link=Operating system]]\n\n|}\n<div class=\"thumbcaption\"> Computer science deals with the theoretical foundations of computation and software design. Computer engineering focuses on hardware design and hardware-software integration.</div>\n</div>\n</div>\n\n'''Computer Science & Engineering''' ('''CSE''') is an academic program at some [[University|universities]] that integrates the fields of [[computer engineering]] and [[computer science]], providing knowledge of computing systems in both [[Computer hardware|hardware]] and [[Computer software|software]] design. The study program is modeled on German [[technical universities]], where [[Computer science|CS]], [[Computer engineering|CE]] and [[Information technology|IT]] are treated as respectively the theoretical, technical and practical part of one field called \"''Informatik''\".\n\nCourses include [[computer architecture]], [[processor design]], [[operating systems]], [[computer networks]], [[parallel computing|parallel processing]], [[embedded systems]], [[Network_analysis_(electrical_circuits)|circuit analysis]], [[analog electronics|analog]] and [[digital electronics]], [[computer graphics (computer science)|computer graphics]], [[cloud computing|cloud]], [[web_development|web]] and [[mobile computing]], [[software engineering]], [[database|database systems]], [[digital signal processing]], [[virtualization]], [[computer simulation|computer simulations]] and [[game programming|games]] programming. CSE programs also include core subjects of theoretical computer science such as [[theory of computation]], design and analysis of [[algorithm]]s, [[data structures]], [[numerical analysis]], [[machine learning]], [[information theory]], [[programming language theory]] and  [[Programming_paradigm|paradigms]]. The program aims at designing, developing and troubleshooting [[computing|computing devices]] and systems (such as [[personal computers]], [[supercomputers]], [[robots]], [[smartphones]], [[networking devices]], [[embedded devices]]), focusing the underlying fundamental issues (like processor architecture design, operating system design, [[memory management]], [[digital system]] design, [[communication protocol]] design, [[system software]] development, [[application software]] development, [[database management]], [[supercomputer|high-performance]] and [[scientific computing|scientific]] computing) in the most efficient and effective way. Emerging computing technologies like [[image processing]], [[artificial intelligence]], [[deep learning]] and [[data science]] are also covered under these programs. Most of the above CSE areas require initial mathematical knowledge, hence the first year of study is dominated by mathematical courses, primarily [[discrete mathematics]], [[mathematical analysis]], [[linear algebra]], [[probability theory]] and [[statistics]], as well as the basics of physics - [[Field theory (physics)|field theory]] and [[electromagnetism]].\n\nPure computer science programs lectured on non-technical universities typically centers primarily around theory and software, with only some hardware<ref>{{cite web|url=http://www.cs.ucdavis.edu/undergraduate/overview/|title=Overview of the Degree Programs - Computer Science|publisher=}}</ref>; upper division courses tend to allow a lot of freedom to specialize in software and theory related areas (e.g. [[algorithms]], [[artificial intelligence]], [[cryptography]]/security, [[computer graphics|graphics]]/[[scientific visualization|visualization]], [[numerical analysis|numerical]] and [[symbolic computation|symbolic computing]], [[operating systems]]/[[distributed processing]], [[software engineering]]). In contrast, pure computer engineering programs tend to resemble computer science at the lower division with similar introductory programming and math courses, but diverges from computer science at the upper division with heavy electrical engineering requirements (e.g. [[metrology]], [[digital electronics|digital]] and [[analogue electronics|analog]] circuits, [[integrated circuit design]], [[VLSI]] design and [[control systems]]). Despite the overlap with computer science at the lower division level, computer engineering skews much more heavily toward the electronics side that it has more in common with [[electrical engineering]]. Computer Science & Engineering program integrates all of the above and is intended to develop a solid understanding of the entire machine ([[computer hardware]] and [[software]]).<ref>{{cite web|url=http://catalog.ucdavis.edu/programs/ECS/ECSprog.html|title=UC Davis General Catalog - Computer Science and Engineering - The Program|website=catalog.ucdavis.edu}}</ref> The higher unit count required to complete the program often means that a CSE student will need to spend an extra year in university.\n\nAlthough Computer Science and Engineering is the common designation for the combined program, some universities (such as [[UC Berkeley|Berkeley]] and [[MIT]]) call their program ''Electrical Engineering and Computer Science'' (EECS).<ref>{{cite web|url=http://engineering.berkeley.edu/academics/undergraduate-programs/electrical-engineering-computer-sciences|title=Electrical Engineering & Computer Sciences|date=11 June 2014|publisher=}}</ref> Furthermore, there are some universities (such as [[University of California, Irvine|UCI]] and [[UC Merced]]) that named their department EECS and the program housed within CSE. In Germany and many European countries, similar programs are taught by technical universities and are called \"''Technische Informatik''\" or generally \"''Informatik''\".\n\n==See also==\n*[[Computer Science]]\n*[[Computer Engineering]]\n*[[Electrical Engineering]]\n*[[Software Engineering]]\n\n==References==\n{{reflist}}\n* {{cite web |url=https://www.shiksha.com/engineering/computer-science-engineering-chp |title=Computer Science Engineering |publisher=Shiksha |access-date=2019-07-30}}\n* {{cite web |url=https://samyakinfotech.com/training/programming-courses/ |title=Computer Science Course |publisher=Samyak Computer Classes |access-date=2020-03-11}}\n\n[[Category:Computer science education]]\n\n{{Comp-sci-stub}}\n{{Comp-eng-stub}}\n", "text_old": "<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:300px;\">\n{| style=\"border:1px solid #ccc;\"\n|-\n| [[File:Kernel_Machine.svg|144px|alt=Kernel machines are used to compute non-linearly separable functions into a higher dimension linearly separable function.|Machine Learning|link=Machine_learning]]\n| [[File:Lambda lc.svg|144px|alt=large capital lambda|Programming language theory|link=Programming language theory]]\n|-\n| [[File:ABasicComputer.gif|144px|alt=Block diagram of a basic CPU|Computer Architecture|link=Computer architecture]]\n| [[File:SMSC_LAN91C110_ethernet_chip.jpg|144px|alt=\nA close-up of the SMSC LAN91C110 (SMSC 91x) chip, an embedded Ethernet chip|Embadded Systems|link=Embedded_system]]\n|-\n| [[File:Euclid_flowchart.svg|144px|alt=Flowchart of an algorithm (Euclid's algorithm) for calculating the greatest common divisor|link=Algorithm]]\n| [[File:Jpeg2000_2-level_wavelet_transform-lichtenstein.png|144px|alt=An example of the 2D discrete wavelet transform that is used in JPEG2000.|link=Digital Signal Processing]]\n|-\n| [[File:Diopsis.jpg|144px|alt=A VLSI integrated-circuit die|Very Large Scale Integration|link=Very Large Scale Integration]]\n| [[File:Command_line.png|144px|alt=A screenshot of the Bash command line.|Operating system|link=Operating system]]\n\n|}\n<div class=\"thumbcaption\"> Computer science deals with the theoretical foundations of computation and software design. Computer engineering focuses on hardware design and hardware-software integration.</div>\n</div>\n</div>\n\n'''Computer Science & Engineering''' ('''CSE''') is an academic program at some [[University|universities]] that integrates the fields of [[computer engineering]] and [[computer science]], providing knowledge of computing systems in both [[Computer hardware|hardware]] and [[Computer software|software]] design. The study program is modeled on German [[technical universities]], where [[Computer science|CS]], [[Computer engineering|CE]] and [[Information technology|IT]] are treated as respectively the theoretical, technical and practical part of one field called \"''Informatik''\".\n\nCourses include [[computer architecture]], [[processor design]], [[operating systems]], [[computer networks]], [[parallel computing|parallel processing]], [[embedded systems]], [[Network_analysis_(electrical_circuits)|circuit analysis]], [[analog electronics|analog]] and [[digital electronics]], [[computer graphics (computer science)|computer graphics]], [[cloud computing|cloud]], [[web_development|web]] and [[mobile computing]], [[software engineering]], [[database|database systems]], [[digital signal processing]], [[virtualization]], [[computer simulation|computer simulations]] and [[game programming|games]] programming. CSE programs also include core subjects of theoretical computer science such as [[theory of computation]], design and analysis of [[algorithm]]s, [[data structures]], [[numerical analysis]], [[machine learning]], [[information theory]], [[programming language theory]] and  [[Programming_paradigm|paradigms]]. The program aims at designing, developing and troubleshooting [[computing|computing devices]] and systems (such as [[personal computers]], [[supercomputers]], [[robots]], [[smartphones]], [[networking devices]], [[embedded devices]]), focusing the underlying fundamental issues (like processor architecture design, operating system design, [[memory management]], [[digital system]] design, [[communication protocol]] design, [[system software]] development, [[application software]] development, [[database management]], [[supercomputer|high-performance]] and [[scientific computing|scientific]] computing) in the most efficient and effective way. Emerging computing technologies like [[image processing]], [[artificial intelligence]], [[deep learning]] and [[data science]] are also covered under these programs. Most of the above CSE areas require initial mathematical knowledge, hence the first year of study is dominated by mathematical courses, primarily [[discrete mathematics]], [[mathematical analysis]], [[linear algebra]], [[probability theory]] and [[statistics]], as well as the basics of physics - [[field theory]] and [[electromagnetism]].\n\nPure computer science programs lectured on non-technical universities typically centers primarily around theory and software, with only some hardware<ref>{{cite web|url=http://www.cs.ucdavis.edu/undergraduate/overview/|title=Overview of the Degree Programs - Computer Science|publisher=}}</ref>; upper division courses tend to allow a lot of freedom to specialize in software and theory related areas (e.g. [[algorithms]], [[artificial intelligence]], [[cryptography]]/security, [[computer graphics|graphics]]/[[scientific visualization|visualization]], [[numerical analysis|numerical]] and [[symbolic computation|symbolic computing]], [[operating systems]]/[[distributed processing]], [[software engineering]]). In contrast, pure computer engineering programs tend to resemble computer science at the lower division with similar introductory programming and math courses, but diverges from computer science at the upper division with heavy electrical engineering requirements (e.g. [[metrology]], [[digital electronics|digital]] and [[analogue electronics|analog]] circuits, [[integrated circuit design]], [[VLSI]] design and [[control systems]]). Despite the overlap with computer science at the lower division level, computer engineering skews much more heavily toward the electronics side that it has more in common with [[electrical engineering]]. Computer Science & Engineering program integrates all of the above and is intended to develop a solid understanding of the entire machine ([[computer hardware]] and [[software]]).<ref>{{cite web|url=http://catalog.ucdavis.edu/programs/ECS/ECSprog.html|title=UC Davis General Catalog - Computer Science and Engineering - The Program|website=catalog.ucdavis.edu}}</ref> The higher unit count required to complete the program often means that a CSE student will need to spend an extra year in university.\n\nAlthough Computer Science and Engineering is the common designation for the combined program, some universities (such as [[UC Berkeley|Berkeley]] and [[MIT]]) call their program ''Electrical Engineering and Computer Science'' (EECS).<ref>{{cite web|url=http://engineering.berkeley.edu/academics/undergraduate-programs/electrical-engineering-computer-sciences|title=Electrical Engineering & Computer Sciences|date=11 June 2014|publisher=}}</ref> Furthermore, there are some universities (such as [[University of California, Irvine|UCI]] and [[UC Merced]]) that named their department EECS and the program housed within CSE. In Germany and many European countries, similar programs are taught by technical universities and are called \"''Technische Informatik''\" or generally \"''Informatik''\".\n\n==See also==\n*[[Computer Science]]\n*[[Computer Engineering]]\n*[[Electrical Engineering]]\n*[[Software Engineering]]\n\n==References==\n{{reflist}}\n* {{cite web |url=https://www.shiksha.com/engineering/computer-science-engineering-chp |title=Computer Science Engineering |publisher=Shiksha |access-date=2019-07-30}}\n* {{cite web |url=https://samyakinfotech.com/training/programming-courses/ |title=Computer Science Course |publisher=Samyak Computer Classes |access-date=2020-03-11}}\n\n[[Category:Computer science education]]\n\n{{Comp-sci-stub}}\n{{Comp-eng-stub}}\n", "name_user": "Rodw", "label": "safe", "comment": "Disambiguating links toField theory(link changed toField theory (physics)) usingDisamAssist.", "url_page": "//en.wikipedia.org/wiki/Computer_Science_and_Engineering"}
