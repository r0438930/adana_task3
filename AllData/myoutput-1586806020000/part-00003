{"title_page": "Bluetooth Low Energy", "text_new": "{Johnson\nwheeler\nMason\nbenn\n\n\n\n{short description|Low-power wireless personal area network technology designed and marketed by the Bluetooth SIG}}\n{{Use dmy dates|date=June 2013}}\n'''Bluetooth Low Energy''' ('''Bluetooth LE''', colloquially '''BLE''', formerly marketed as '''Bluetooth Smart'''<ref>{{cite web|url=https://www.bluetooth.com/what-is-bluetooth-technology/how-it-works/low-energy|archive-url=https://web.archive.org/web/20170310111443/https://www.bluetooth.com/what-is-bluetooth-technology/how-it-works/low-energy|url-status=dead|archive-date=2017-03-10|title=Bluetooth Smart or Version 4.0+ of the Bluetooth specification|website=bluetooth.com}}</ref>) is a [[Personal area network|wireless personal area network]] technology designed and marketed by the [[Bluetooth Special Interest Group]] (Bluetooth SIG) aimed at novel applications in the healthcare, [[Physical fitness|fitness]], beacons,<ref>{{Cite web |url=http://www.bluetooth.com/Pages/beacons-retail-location.aspx |title=beacons |access-date=21 November 2014 |archive-url=https://web.archive.org/web/20141024074548/http://www.bluetooth.com/Pages/beacons-retail-location.aspx |archive-date=24 October 2014 |url-status=dead |df=dmy-all }}</ref> security, and home entertainment industries.<ref>{{cite web|url=http://www.bluetooth.com/Pages/Bluetooth-Smart.aspx|title=bluetooth.com: Bluetooth Smart|author=|date=|website=bluetooth.com}}</ref>  It is independent of [[Bluetooth BR/EDR]] and has no compatibility, but BR/EDR and LE can coexist. The original specification was developed by Nokia in 2006 under the name Wibree<ref>{{Cite web|url=https://electronics.howstuffworks.com/wibree.htm|title=Is Wibree going to rival Bluetooth?|date=2006-12-01|website=HowStuffWorks|language=en|access-date=2020-04-10}}</ref>, which was integrated into Bluetooth 4.0 in December 2009 as Bluetooth Low Energy.  \n\nCompared to [[Bluetooth|Classic Bluetooth]], Bluetooth Low Energy is intended to provide considerably reduced power consumption and cost while maintaining a [[#Radio_interface|similar communication range]]. Mobile operating systems including [[iOS]], [[Android (operating system)|Android]], [[Windows Phone]] and [[BlackBerry 10|BlackBerry]], as well as [[macOS]], [[Linux]], [[Windows 8]] and [[Windows 10]], natively support Bluetooth Low Energy.\n\n== Compatibility ==\nBluetooth Low Energy is distinct from the previous (often called \"classic\") [[Bluetooth Basic Rate/Enhanced Data Rate]] (BR/EDR) protocol, but the two protocols can both be supported by one device: the [[Bluetooth#Bluetooth 4.0 + LE|Bluetooth 4.0 specification]] permits devices to implement either or both of the LE and BR/EDR systems.\n\nBluetooth Low Energy uses the same [[ISM band|2.4&nbsp;GHz radio frequencies]] as classic Bluetooth, which allows dual-mode devices to share a single [[radio antenna]], but uses a simpler [[modulation]] system.\n\n== Branding ==\n[[File:Bluetooth Smart Logo.svg|right|thumb|300px|The previously used Bluetooth Smart logo]]\nIn 2011, the Bluetooth SIG announced the Bluetooth Smart logo so as to clarify compatibility between the new low energy devices and other Bluetooth devices.<ref>{{cite press release| url=http://www.bluetooth.com/Pages/Press-Releases-Detail.aspx?ItemID=138| title=Bluetooth SIG Extends Bluetooth Brand, Introduces Bluetooth Smart Marks| date=24 October 2011| archive-url=https://web.archive.org/web/20150203053330/http://www.bluetooth.com/Pages/Press-Releases-Detail.aspx?ItemID=138| publisher=[[Bluetooth SIG]]| archive-date=3 February 2015| accessdate=2016-01-31 }}</ref>\n\n* Bluetooth Smart Ready indicates a dual-mode device compatible with both classic and low energy [[peripheral]]s.<ref>{{cite web| url=https://www.bluetooth.org/en-us/bluetooth-brand/smart-marks-faqs| title=Bluetooth Smart Marks FAQ| publisher=[[Bluetooth SIG]]| archive-url=https://web.archive.org/web/20150724115332/https://www.bluetooth.org/en-us/bluetooth-brand/smart-marks-faqs| archive-date=24 July 2015| accessdate=2016-01-31}}</ref>\n* Bluetooth Smart indicates a low energy-only device which requires either a Smart Ready or another [[Smart device]] in order to function.\n\nWith the May 2016 Bluetooth SIG branding information, the Bluetooth SIG began phasing out the Bluetooth Smart and Bluetooth Smart Ready logos and word marks and reverted to using the Bluetooth logo and word mark<ref>{{cite web|url=https://www.bluetooth.com/marketing-branding/brand-best-practices-guidelines|title=Brand Your Product - Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref> in a new blue color.\n\n== Target market ==\nThe Bluetooth SIG identifies a number of markets for low energy technology, particularly in the smart home, health, sport and fitness sectors.<ref>{{cite web|url=http://www.bluetooth.com/Pages/market.aspx|title=Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref> Cited advantages include:\n* low power requirements, operating for \"months or years\" on a [[button cell]]\n* small size and low cost\n* compatibility with a large [[installed base]] of mobile phones, tablets and computers\n\n== History ==\n[[File:Image-Wibree Logo.png|right|thumb|300px|The now-defunct Wibree logo]]\nIn 2001, researchers at [[Nokia Research Center|Nokia]] determined various scenarios that contemporary wireless technologies did not address.<ref>{{cite web |url=http://thefutureofthings.com/articles/38/nokias-wibree-and-the-wireless-zoo.html |publisher=The Future of Things |last=Genuth |first=Iddo |date=16 November 2006 |archive-url=https://web.archive.org/web/20121108120338/http://thefutureofthings.com/articles/38/nokias-wibree-and-the-wireless-zoo.html |archive-date=2012-11-08 |title=Nokia's Wibree and the Wireless Zoo}}</ref> The company began developing a wireless technology adapted from the Bluetooth standard which would provide lower power usage and cost while minimizing its differences from Bluetooth technology. The results were published in 2004 using the name Bluetooth Low End Extension.<ref>{{cite conference |last1=Honkanen |first1=M. |last2=Lappetelainen |first2=A. |last3=Kivekas |first3=K. |date=2004 |title=Low end extension for Bluetooth |conference=2004 IEEE Radio and Wireless Conference 19\u201322 September 2004 |pages= 199\u2013202 |publisher=[[IEEE]] |doi=10.1109/RAWCON.2004.1389107 }}</ref>\n\nAfter further development with partners, in particular [[Logitech]] and within the European project MIMOSA,{{efn|MIMOSA stands for ''Microsystems platform for mobile services and applications'',<ref>{{Cite web |url=http://www.mimosa-fp6.com/ |title=Mimosa WebSite: Home |archive-url=https://web.archive.org/web/20160804035320/http://www.mimosa-fp6.com/ |archive-date=2016-08-04 |access-date=2016-08-18 |publisher=MIMOSA FP6 project}}</ref> and is the name of one of the projects funded by the European [[Framework Programmes for Research and Technological Development]]}} and actively promoted and supported  by [[STMicroelectronics]] since its early stage,{{efn|STMicroelectronics went on to release a processor to support implementation of the standard<ref>{{Cite web |url=http://www.st.com/bluenrg-ms |title=BlueNRG-MS \u2013 Bluetooth Low Energy Network Processor supporting Bluetooth 4.1 core specification \u2013 STMicroelectronics |access-date=2016-08-18}}</ref>}} the technology was released to the public in October 2006 with the brand name Wibree.<ref>{{cite news |url=http://news.bbc.co.uk/2/hi/technology/5403564.stm |title=Bluetooth rival unveiled by Nokia |publisher=BBC News |date=4 October 2006 |access-date=2018-04-27}}</ref> After negotiations with Bluetooth SIG members, an agreement was reached in June 2007 to include Wibree in a future Bluetooth specification as a Bluetooth ultra low power technology.<ref>{{cite press release |url=http://www.wibree.com/press/Wibree_pressrelease_final_1206.pdf |title=Wibree forum merges with Bluetooth SIG |date=12 June 2007 |publisher=Nokia |archive-date=2007-06-16 |archive-url=https://web.archive.org/web/20070616082658/http://www.wibree.com/press/Wibree_pressrelease_final_1206.pdf}}</ref><ref>{{cite news |title=Wibree becomes ULP Bluetooth |url=http://www.electronicsweekly.com/Articles/2007/06/12/41582/wibree-becomes-ulp-bluetooth.htm |date=12 June 2007 |last=Reynolds |first=Melanie |website=ElectronicsWeekly.com |publisher=Reed Business Information Limited |accessdate=2008-09-09 |archive-date=2008-09-07 |archive-url=https://web.archive.org/web/20080907170808/http://www.electronicsweekly.com/Articles/2007/06/12/41582/wibree-becomes-ulp-bluetooth.htm }}</ref>\n\nThe technology was marketed as Bluetooth Smart and integration into version 4.0 of the Core Specification was completed in early 2010.<ref>{{cite web |url=https://www.engadget.com/2011/10/25/bluetooth-sig-unveils-smart-marks-explains-v4-0-compatibility-w/ |title=Bluetooth SIG unveils Smart Marks, explains v4.0 compatibility with unnecessary complexity |last=Pollicino |first=Joe |date=25 October 2011 |website=Engadget |publisher=[[Oath Tech Network]] [[AOL Tech]] |accessdate=2018-04-17}}</ref> The first smartphone to implement the 4.0 specification was the [[iPhone 4S]], released in October 2011.<ref>{{cite web |last=O'Brien |first=Terrence |date=12 October 2011 |title=iPhone 4S claims title of first Bluetooth 4.0 smartphone, ready to stream data from your cat |url=https://www.engadget.com/2011/10/12/iphone-4s-claims-title-of-first-bluetooth-4-0-smartphone-ready| publisher=Engadget |accessdate=2014-02-09}}</ref> A number of other manufacturers released Bluetooth Low Energy Ready devices in 2012.\n\nThe Bluetooth SIG officially unveiled Bluetooth 5 on 16 June 2016 during a media event in London. One change on the marketing side is that the point number was dropped, so it now just called Bluetooth 5 (and not Bluetooth 5.0 or 5.0 LE like for Bluetooth 4.0). This decision was made to \"simplifying marketing, and communicating user benefits more effectively\".<ref>{{Cite web|url=https://www.cnx-software.com/2016/06/10/bluetooth-5-promises-four-times-the-speed-twice-the-range-of-bluetooth-4-0-le-transmissions/|title=Bluetooth 5 Promises Four times the Range, Twice the Speed of Bluetooth 4.0 LE Transmissions|website=www.cnx-software.com|access-date=2017-11-08|date=10 June 2016}}</ref> On the technical side, Bluetooth 5 will quadruple the range by using increased transmit power or coded physical layer, double the speed by using optional half of the symbol time compared to Bluetooth 4.x, and provide an eight-fold increase in data broadcasting capacity by increasing the advertising data length{{clarify|date=May 2017}} of low energy Bluetooth transmissions compared to Bluetooth 4.x, which could be important for [[Internet of things|IoT]] applications where nodes are connected throughout a whole house.<ref>{{Cite web|url=https://www.bluetooth.com/news/pressreleases/2016/06/16/-bluetooth-5-quadruples-rangedoubles-speedincreases-data-broadcasting-capacity-by-800|title=Bluetooth\u00ae 5 Quadruples Range, Doubles Speed, Increases Data Broadcasting Capacity by 800% {{!}} Bluetooth Technology Website|website=www.bluetooth.com|access-date=2017-11-08|archive-url=https://web.archive.org/web/20181209055417/https://www.bluetooth.com/news/pressreleases/2016/06/16/-bluetooth-5-quadruples-rangedoubles-speedincreases-data-broadcasting-capacity-by-800|archive-date=9 December 2018|url-status=dead}}</ref>\n\nThe Bluetooth SIG released Mesh Profile and Mesh Model specifications officially on 18 July 2017. [[Bluetooth mesh networking|Mesh specification]] enables using Bluetooth Low Energy for many-to-many device communications for home automation, sensor networks and other applications.<ref>{{Cite web|url=https://www.bluetooth.com/news/pressreleases/2017/07/bluetooth-sig-announces-mesh-networking-capability|title=Bluetooth SIG Announces Mesh Networking Capability {{!}} Bluetooth Technology Website|website=www.bluetooth.com|access-date=2017-07-20|archive-url=https://web.archive.org/web/20170908061136/https://www.bluetooth.com/news/pressreleases/2017/07/bluetooth-sig-announces-mesh-networking-capability|archive-date=8 September 2017|url-status=dead}}</ref>\n\n== Applications ==\nBorrowing from the original Bluetooth specification, the Bluetooth SIG defines several [[Bluetooth profile|profiles]] \u2014 specifications for how a device works in a particular application \u2014 for low energy devices. Manufacturers are expected to implement the appropriate specifications for their device in order to ensure compatibility. A device may contain implementations of multiple profiles.\n\nThe majority of current low energy application profiles are based on the Generic Attribute Profile (GATT), a general specification for sending and receiving short pieces of data, known as attributes, over a low energy link.<ref>Bluetooth SIG [https://www.bluetooth.org/en-us/specification/adopted-specifications Adopted specifications]</ref> The [[Bluetooth mesh]] profile is an exception to this rule, being based on the General Access Profile (GAP).<ref>{{cite web|url=http://www.bluetooth.com/mesh|title=Bluetooth Mesh and the IOT|last=bluetooth|date=|website=www.bluetooth.com}}</ref>\n\n=== Mesh profiles ===\nBluetooth mesh profiles use Bluetooth Low Energy to communicate with other Bluetooth Low Energy devices in the network. Each device can pass the information forward to other Bluetooth Low Energy devices creating a \"mesh\" effect. For example, switching off an entire building of lights from a single smartphone.<ref>{{cite web|url=https://www.bluetooth.com/markets/smart-building|title=Smart Building - Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref>\n\n* MESH (Mesh Profile) \u2014 for base mesh networking.\n* MMDL ([[Bluetooth mesh networking#Mesh models|Mesh models]]) \u2014 for application layer definitions. Term \"model\" is used in mesh specifications instead of \"profile\" to avoid ambiguities.\n\n=== Health care profiles ===\nThere are many profiles for Bluetooth Low Energy devices in healthcare applications. [[The Continua Health Alliance]] consortium promotes these in cooperation with the Bluetooth SIG.\n\n* BLP (Blood Pressure Profile) \u2014 for blood pressure measurement.\n* HTP (Health Thermometer Profile) \u2014 for medical temperature measurement devices.\n* GLP (Glucose Profile) \u2014 for [[blood glucose]] monitors.\n* CGMP (Continuous Glucose Monitor Profile)\n\n=== Sports and fitness profiles ===\nProfiles for sporting and fitness accessories include:\n* BCS (Body Composition Service)\n* CSCP (Cycling Speed and Cadence Profile) \u2014 for sensors attached to a [[bicycle]] or [[exercise bike]] to measure [[Cadence (cycling)|cadence]] and wheel speed.\n* CPP (Cycling Power Profile)\n* HRP (Heart Rate Profile) \u2014 for devices which measure [[heart rate]]\n* LNP (Location and Navigation Profile)\n* RSCP (Running Speed and Cadence Profile) \n* WSP (Weight Scale Profile)\n\n=== Internet connectivity ===\n* IPSP (Internet Protocol Support Profile)\n\n=== Generic sensors ===\n* ESP (Environmental Sensing Profile)\n* UDS (User Data Service)\n\n=== HID connectivity ===\n* HOGP ([[Human interface device|HID]] over GATT Profile) allowing Bluetooth LE-enabled Wireless mice, keyboards and other devices offering long-lasting battery life.\n\n=== Proximity sensing ===\n\"[[Electronic leash]]\" applications are well suited to the long battery life possible for 'always-on' devices.<ref>{{Cite news|url=http://www.gsm-modem.de/M2M/m2m-apps/casio-bluetooth-low-energy-watch/|title=Casio Bluetooth Low Energy Watch communicates with smartphones|date=2011-03-07|work=M2M / IoT hints and tips|access-date=2017-11-08|language=en-US}}</ref> Manufacturers of [[iBeacon]] devices implement the appropriate specifications for their device to make use of proximity sensing capabilities supported by [[Apple Inc.|Apple]]'s [[iOS devices]].<ref>{{Cite web|url=http://appleinsider.com/articles/13/06/19/inside-ios-7-ibeacons-enhance-apps-location-awareness-via-bluetooth-le|title=Inside iOS 7: iBeacons enhance apps' location awareness via Bluetooth LE|website=AppleInsider|language=en-US|access-date=2017-11-08}}</ref>\n\nRelevant application profiles include:\n* FMP \u2014 the \"find me\" profile \u2014 allows one device to issue an alert on a second misplaced device.<ref>{{cite web|url=https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=239389|title=Find Me Profile specification|author=|date=|website=bluetooth.org}}</ref>\n* PXP \u2014 the proximity profile \u2014 allows a proximity monitor to detect whether a proximity reporter is within a close range. Physical proximity can be estimated using the radio receiver's [[RSSI]] value, although this does not have absolute calibration of distances. Typically, an alarm may be sounded when the distance between the devices exceeds a set threshold.\n\n=== Alerts and time profiles ===\n* The phone alert status profile and alert notification profile allow a client device to receive notifications such as incoming call alerts from another device.\n* The time profile allows current time and [[time zone]] information on a client device to be set from a server device, such as between a wristwatch and a mobile phone's [[Network Time Protocol|network time]].\n\n=== Battery ===\n\n* The Battery Service exposes the Battery State and Battery Level of a single battery or set of batteries in a device.\n\n=== Audio ===\nAnnounced in January 2020, LE Audio will allow the protocol to carry sound and add features such as one set of headphones connecting to multiple audio sources or multiple headphones connecting to one source<ref>{{Cite news|url=https://www.wired.com/story/bluetooth-le-audio/|title=The New Version of Bluetooth Is Here to Fix Your Headphones|work=Wired|access-date=2020-02-03|language=en|issn=1059-1028}}</ref><ref>{{Cite web|url=https://www.macrumors.com/2020/01/06/bluetooth-sig-debuts-le-audio/|title=Bluetooth SIG Announces 'LE Audio' With Audio Sharing, Lower Data Consumption, Hearing Aid Support and More|last=Clover|first=Juli|website=www.macrumors.com|language=en|access-date=2020-02-03}}</ref> it will also add support for hearing aids<ref>{{Cite web|url=https://source.android.com/devices/bluetooth/asha|title=Hearing Aid Audio Support Using Bluetooth LE|website=Android Open Source Project|language=en|access-date=2020-02-03}}</ref>.\n\n== Implementation ==\n\n=== Chip ===\nStarting in late 2009, Bluetooth Low Energy [[integrated circuits]] were announced by a number of manufacturers. These ICs commonly use [[software radio]] so updates to the specification can be accommodated through a [[firmware]] upgrade.\n\n=== Hardware ===\nCurrent mobile devices are commonly released with hardware and software support for both classic Bluetooth and the Bluetooth Low Energy.\n\n===Operating systems===\n* iOS 5 and later<ref>{{cite web|url=https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS5.html#//apple_ref/doc/uid/TP30915195-SW1|title=iOS 5.0|publisher=Apple|accessdate=2 June 2018}}</ref>\n* Windows Phone 8.1<ref>{{cite web |url=http://blogs.msdn.com/b/thunbrynt/archive/2014/05/05/windows-phone-8-1-for-developers-introducing-bluetooth-le.aspx |publisher=MSDN Blogs |title=Windows Phone 8.1 for Developers\u2013Introducing Bluetooth LE |author=Brynte |date=2014-05-04 |accessdate=2014-05-18}}</ref>\n* Windows 8 and later<ref>{{cite web|url=https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.aspx|title=Windows.Devices.Bluetooth Namespace - UWP app developer|last=wdg-dev-content|date=|website=msdn.microsoft.com}}</ref>\n* Android 4.3 and later<ref>{{cite web|url=http://developer.android.com/guide/topics/connectivity/bluetooth-le.html|title=Bluetooth low energy overview - Android Developers|author=|date=|website=Android Developers}}</ref>\n* BlackBerry 10<ref>{{cite web|url=http://press.blackberry.com/press/2013/blackberry-supports-bluetooth-smart-ready-to-drive-m2m-applicati.html|title=BlackBerry Press Room - Official News, Events & Product Releases|author=|date=|website=press.blackberry.com}}</ref>\n* Linux 3.4 and later through [[Bluetooth stack#BlueZ|BlueZ]] 5.0<ref>{{cite web |url=http://padovan.org/blog/2013/02/the-big-changes-of-bluez-5/ |title=The big changes of BlueZ 5|author=Gustavo Padovan|date=2013-02-22|quote=As the MGMT interface is the only one to support the new Bluetooth Low Energy devices, BlueZ developers decided to drop support for the old interface once MGMT was completed. As a result, you need to be running Linux Kernel 3.4 or newer to use BlueZ 5.}}</ref>\n* Unison OS 5.2 <ref>{{cite web|url=http://rowebots.com/embedded_system_software/wireless_protocols|title=Wireless Protocols - WiFi, Bluetooth, BT, BTLE, GPS, GPRS, 6loWPAN, Zigbee, RoweBots Bluetooth Stack - RoweBots|author=|date=|website=rowebots.com}}</ref>\n*macOS 10.10\n\n== Technical details ==\n\n=== Radio interface ===\nBluetooth Low Energy technology operates in the same spectrum range (the 2.400\u20132.4835&nbsp;GHz [[ISM band]]) as classic Bluetooth technology, but uses a different set of channels. Instead of the classic Bluetooth seventy-nine 1-MHz channels, Bluetooth Low Energy has forty 2-MHz channels. Within a channel, data is transmitted using [[GFSK|Gaussian frequency shift modulation]], similar to classic Bluetooth's Basic Rate scheme. The bit rate is 1&nbsp;Mbit/s (with an option of 2&nbsp;Mbit/s in Bluetooth 5), and the maximum transmit power is 10&nbsp;mW (100&nbsp;mW in Bluetooth 5). Further details are given in Volume 6 Part A (Physical Layer Specification) of the [https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=229737 Bluetooth Core Specification V4.0].\n\nBluetooth Low Energy uses [[frequency hopping]] to counteract narrowband interference problems. Classic Bluetooth also uses frequency hopping but the details are different; as a result, while both [[Federal Communications Commission|FCC]] and [[ETSI]] classify Bluetooth technology as an [[FHSS]] scheme, Bluetooth Low Energy is classified as a system using digital modulation techniques or a [[direct-sequence spread spectrum]].<ref>Bluetooth Special Interest Group [https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=237781 \"Bluetooth Low Energy Regulatory Aspects\"], April 2011</ref>\n\n{| class=\"wikitable\"\n|-\n! Technical specification\n! Bluetooth Basic Rate/Enhanced Data Rate technology\n! Bluetooth Low Energy technology\n|-\n| Distance/range (theoretical max.)\n| {{convert|100|m|ft|abbr=on}}\n| <100 m (<330&nbsp;ft)\n|-\n| Over the air data rate\n| 1\u20133 Mbit/s\n| 125 kbit/s \u2013 1 Mbit/s \u2013 2 Mbit/s\n|-\n| Application throughput\n| 0.7\u20132.1 Mbit/s\n| 0.27-1.37 Mbit/s <ref>Bluetooth 5 & BLE: Achieving maximum throughput [https://www.novelbits.io/bluetooth-5-speed-maximum-throughput/]</ref>\n|-\n| Active slaves\n| 7\n| Not defined; implementation dependent\n|-\n| Security\n| 56/128-bit and application layer user defined\n| 128-bit [[Advanced Encryption Standard|AES]] in [[CCM mode]] and application layer user defined\n|-\n| Robustness\n| Adaptive fast frequency hopping, [[forward error correction|FEC]], fast&nbsp;[[acknowledgement (data networks)|ACK]]\n| Adaptive frequency hopping, Lazy Acknowledgement, 24-bit CRC, 32-bit Message Integrity Check\n|-\n| Latency (from a non-connected state)\n| Typically 100&nbsp;ms\n| 6&nbsp;ms\n|-\n| Minimum total time to send data (det. battery life)\n| 0.625&nbsp;ms\n| 3&nbsp;ms <ref>{{cite web |url=http://www.bluetooth.com/Pages/low-energy-tech-info.aspx |title=Bluetooth Low Energy Technology - Technical Information |publisher=Bluetooth SIG |archive-date=2014-02-14 |archive-url=https://web.archive.org/web/20140214120404/http://www.bluetooth.com/Pages/low-energy-tech-info.aspx}}</ref>\n|-\n| Voice capable\n| Yes\n| No\n|-\n| Network topology\n| [[Scatternet]]\n| [[Scatternet]]\n|-\n| Power consumption\n| 1&nbsp;W as the reference\n| 0.01\u20130.50&nbsp;W (depending on use case)\n|-\n| Peak current consumption\n| <30&nbsp;mA\n| <15&nbsp;mA\n|-\n| Service discovery\n| Yes\n| Yes\n|-\n| Profile concept\n| Yes\n| Yes\n|-\n| Primary use cases\n| Mobile phones, gaming, headsets, stereo audio streaming, smart homes, wearables, automotive, PCs, security, proximity, healthcare, sports & fitness, etc.\n| Mobile phones, gaming, smart homes, wearables, automotive, PCs, security, proximity, healthcare, sports & fitness, Industrial, etc.\n|}\n\nMore technical details may be obtained from official specification as published by the Bluetooth SIG. Note that power consumption is not part of the Bluetooth specification.\n\n=== Advertising and discovery ===\nBLE devices are detected through a procedure based on broadcasting advertising packets. This is done using 3 separate channels (frequencies), in order to reduce interference. The advertising device sends a packet on at least one of these three channels, with a repetition period called the advertising interval. For reducing the chance of multiple consecutive collisions, a random delay of up to 10 milliseconds is added to each advertising interval. The scanner listens to the channel for a duration called the scan window, which is periodically repeated every scan interval.\n\nThe discovery latency is therefore determined by a probabilistic process and depends on the three parameters (viz., the advertising interval, the scan interval and the scan window). The discovery scheme of BLE adopts a periodic-interval based technique, for which upper bounds on the discovery latency can be inferred for most parametrizations. While the discovery latencies of BLE can be approximated by models<ref>{{Cite journal|title=PI-LatencyComp - Neighbor Discovery in BLE-Like protocols|url=https://codeocean.com/2017/08/08/pi-latencycomp-neighbor-discovery-in-ble-like-protocols|journal=CodeOcean|volume=|pages=|doi=10.24433/co.fec70c60-c265-4eea-9e37-8f7222ec5c92|via=|year=2017|last1=Kindt|first1=Philipp H.}}</ref> for purely periodic interval-based protocols, the random delay added to each advertising interval and the three-channel discovery can cause deviations from these predictions, or potentially lead to unbounded latencies for certain parametrizations.<ref>{{Cite journal|last=Kindt|first=P. H.|last2=Saur|first2=M.|last3=Balszun|first3=M.|last4=Chakraborty|first4=S.|date=2017|title=Neighbor Discovery Latency in BLE-Like Protocols|journal=IEEE Transactions on Mobile Computing|volume=PP|issue=99|pages=617\u2013631|doi=10.1109/tmc.2017.2737008|issn=1536-1233|arxiv=1509.04366}}</ref>\n\n===Security ===\n     \nBluetooth LE comes with very low, and in many cases broken security. BTLE or Bluetooth Smart, is a new modulation mode and link layer packet format targeting low powered devices and is found in recent high-end smart phones, sports devices, sensors, and will soon appear in many medical devices. Unfortunately the security implementation is broken with the encryption of any Bluetooth LE Energy link easily being rendered useless. This flaw in security can allow any device nearby to eavesdrop on Bluetooth Low Energy conversations. This includes packets being intercepted and reassembled into connection streams, as well as injection attacks.<ref>{{cite journal|last1=Sarkar|first1=Sopan|last2=Liu|first2=Jianqing|last3=Jovanov|first3=Emil|title=A Robust Algorithm for Sniffing BLE Long-Lived Connections in Real-Time|journal=2019 IEEE Global Communications Conference (GLOBECOM)|year=2019|pages=1\u20136|doi=10.1109/GLOBECOM38437.2019.9014318}}</ref><!--Paragraph is section simply recopied on 13 Apr 20 after deletion in 2014, needs updating and expanding, see Talk. A detailed reference which is useful, though considered not to be WP_reliable (hence section deletion): <ref>[http://0b4af6cdc2f0c5998459-c0245c5c937c5dedcca3f1764ecc9b2f.r43.cf2.rackcdn.cm/12053-woot13-ryan.pdf Bluetooth: With Low Energy comes Low Security]</ref>-->\n\nBluetooth LE has been suggested as the basis of an app for tracing contacts of people during the [[Covid pandemic]] of 2020, silently tracking other phones which come within BT LE range of a person's phone, allowing those who have been in sustained proximity with a possibly infected person to be notified without identifying the person. However, a draft government memo said that ministers might be given the ability to identify people from their mobile phones, which has been criticised as a potential security breach.<ref>{{cite web |url=https://www.theguardian.com/world/2020/apr/13/nhs-coronavirus-app-memo-discussed-giving-ministers-power-to-de-anonymise-users |title=NHS coronavirus app: memo discussed giving ministers power to 'de-anonymise' users |newspaper=The Guardian|author1=David Pegg|author2=Paul Lewis|date= 13 April 2020}}</ref>\n\n=== Software model ===\nAll Bluetooth Low Energy devices use the Generic Attribute Profile (GATT). The [[application programming interface]] offered by a Bluetooth Low Energy aware operating system will typically be based around GATT concepts.<ref>See for example Apple's [https://developer.apple.com/library/ios/#documentation/CoreBluetooth/Reference/CoreBluetooth_Framework/_index.html Core Bluetooth] framework</ref> GATT has the following terminology:\n\n;Client\n:A device that initiates GATT commands and requests, and accepts responses, for example, a computer or smartphone.\n;Server\n:A device that receives GATT commands and requests, and returns responses, for example, a temperature sensor.\n;Characteristic\n:A data value transferred between client and server, for example, the current battery voltage.\n;Service\n:A collection of related characteristics, which operate together to perform a particular function. For instance, the ''Health Thermometer'' service includes characteristics for a temperature measurement value, and a time interval between measurements.\n;Descriptor\n:A descriptor provides additional information about a characteristic. For instance, a temperature value characteristic may have an indication of its units (e.g. Celsius), and the maximum and minimum values which the sensor can measure. Descriptors are optional \u2013 each characteristic can have any number of descriptors.\n\nSome service and characteristic values are used for administrative purposes \u2013 for instance, the model name and serial number can be read as standard characteristics within the ''Generic Access'' service. Services may also include other services as sub-functions; the main functions of the device are so-called ''primary'' services, and the auxiliary functions they refer to are ''secondary'' services.\n\n==== Identifiers ====\n\nServices, characteristics, and descriptors are collectively referred to as ''attributes'', and identified by [[Universally unique identifier|UUID]]s. Any implementer may pick a random or pseudorandom UUID for [[Proprietary format|proprietary]] uses, but the Bluetooth SIG have reserved a range of UUIDs (of the form ''{{not a typo|xxxxxxxx-0000-1000-8000-00805F9B34FB}}'' <ref>See sec 2.5.1 of the ''Bluetooth 4.0 Core Specification''</ref>) for standard attributes. For efficiency, these identifiers are represented as 16-bit or 32-bit values in the protocol, rather than the 128 bits required for a full UUID. For example, the ''Device Information'' service has the short code 0x180A, rather than {{not a typo|0000180A-0000-1000-}}... . The full list is kept in the [https://www.bluetooth.com/specifications/gatt/services/ Bluetooth Assigned Numbers] document online.\n\n==== GATT operations ====\n\nThe GATT protocol provides a number of commands for the client to discover information about the server. These include:\n* Discover UUIDs for all primary services\n* Find a service with a given UUID\n* Find secondary services for a given primary service\n* Discover all characteristics for a given service\n* Find characteristics matching a given UUID\n* Read all descriptors for a particular characteristic\n\nCommands are also provided to ''read'' (data transfer from server to client) and ''write'' (from client to server) the values of characteristics:\n* A value may be read either by specifying the characteristic's UUID, or by a ''handle'' value (which is returned by the information discovery commands above).\n* Write operations always identify the characteristic by handle, but have a choice of whether or not a response from the server is required.\n* 'Long read' and 'Long write' operations can be used when the length of the characteristic's data exceeds the [[Maximum transmission unit|MTU]] of the radio link.\n\nFinally, GATT offers ''notifications'' and ''indications''. The client may request a notification for a particular characteristic from the server. The server can then send the value to the client whenever it becomes available. For instance, a temperature sensor server may notify its client every time it takes a measurement. This avoids the need for the client to [[Polling (computer science)|poll]] the server, which would require the server's radio circuitry to be constantly operational.\n\nAn ''indication'' is similar to a notification, except that it requires a response from the client, as confirmation that it has received the message.\n\n==== Battery impact ====\n\n[[File:BLE Chipsets Power.png|thumb|upright|300px|Bluetooth Low Energy chipset power consumption profiles with different configuration parameters, as per The Hitchhikers Guide to iBeacon Hardware by Aislelabs.<ref>{{cite web|url=http://www.aislelabs.com/reports/beacon-guide/|title=The Hitchhikers Guide to iBeacon Hardware: A Comprehensive Report by Aislelabs|publisher= Aislelabs|date=2014-10-03|accessdate=2014-10-07}}</ref>]]\n\nBluetooth Low Energy is designed to enable devices to have very low power consumption. Several chipmakers including [[Cambridge Silicon Radio]], [[Dialog Semiconductor]], [[Nordic Semiconductor]], [[STMicroelectronics]], [[Cypress Semiconductor]], [[Silicon Labs]] and [[Texas Instruments]] had introduced Bluetooth Low Energy optimized chipsets by 2014. Devices with peripheral and central roles have different power requirements. A study by beacon software company [[Aislelabs]] reported that peripherals such as proximity beacons usually function for 1\u20132 years powered by a 1,000mAh coin cell battery.<ref>{{cite web|url=https://gigaom.com/2014/11/04/how-to-find-the-best-beacon-hardware-for-everything-from-stores-to-cities/|title=How to find the best beacon hardware for everything from stores to cities|publisher= GigaOM|date=2014-10-04|accessdate=2014-10-11}}</ref> This is possible because of the power efficiency of Bluetooth Low Energy protocol, which only transmits small packets as compared to Bluetooth Classic which is also suitable for audio and high bandwidth data.\n\nIn contrast, a continuous scan for the same beacons in central role can consume 1,000 mAh in a few hours. Android and iOS devices also have very different battery impact depending on type of scans and the number of Bluetooth Low Energy devices in the vicinity.<ref>{{cite web|url=https://gigaom.com/2014/08/14/in-terms-of-battery-life-android-devices-are-more-optimized-for-ibeacons-than-iphones/|title=In terms of battery life, Android devices are more optimized for iBeacons than iPhones|publisher= GigaOM|date=2014-08-14|accessdate=2014-10-07}}</ref> With newer chipsets and advances in software, by 2014 both Android and iOS phones had negligible power consumption in real-life Bluetooth Low Energy use.<ref>{{cite web|url=http://www.aislelabs.com/reports/ibeacon-battery-drain-iphones/|title=iBeacon Battery Drain on Apple vs Android: A Technical Report|publisher= Aislelabs|date=2014-08-14|accessdate=2014-08-18}}</ref>\n\n=== 2M PHY ===\nBluetooth 5 has introduced a new transmission mode with a doubled [[symbol rate]]. Bluetooth LE has been traditionally transmitting 1 bit per symbol so that theoretically the data rate doubles as well. However the new mode doubles the [[Bandwidth (signal processing)|bandwidth]] from about 1&nbsp;MHz to about 2&nbsp;MHz which makes for more interferences on the edge regions. The partitioning of the ISM frequency band has not changed being still 40&nbsp;channels spaced at a distance of 2&nbsp;MHz.<ref name=edn2017>{{cite web|url=https://www.edn.com/design/test-and-measurement/4459086/Bluetooth-5--More-speeds--more-range--new-RF-tests|title=Bluetooth 5: More speeds, more range, new RF tests|author=Allen Henley|date=2017-11-21|publisher=EDN Network}}</ref> This is an essential differences over Bluetooth 2 EDR which did also double the data rate but it is doing that by employing a \u03c0/4-DQPSK or 8-DPSK [[phase modulation]] on a 1&nbsp;MhZ channel while Bluetooth 5 continues to use just frequency shift keying.\n\nThe traditional transmission of 1 Mbit in the Bluetooth Basic Rate was renamed 1M PHY in Bluetooth 5. The new mode at a doubled symbol speed was introduced as the 2M PHY. In Bluetooth Low Energy every transmission starts on the 1M PHY leaving it to the application to initiate a switch to the 2M PHY. In that case both sender and receiver will switch to the 2M PHY for transmissions. This is designed to facilitate firmware updates where the application can switch back to a traditional 1M PHY in case of errors. In reality the target device should be close to the programming station (at a few meters).\n\n=== LE Coded ===\nBluetooth 5 has introduced two new modes with lower data rate. The symbol rate of the new \"Coded PHY\" is the same as the Base Rate 1M PHY but in mode S=2 there are two symbols transmitted per data bit. In mode S=2 only a simple Pattern Mapping P=1 is used which simply produces the same stuffing bit for each input data bit. In mode S=8 there are eight symbols per data bit with a Pattern Mapping P=4 producing contrasting symbol sequences - a 0 bit is encoded as binary 0011 and a 1 bit is encoded as binary 1100.<ref>{{cite web|url=https://www.allaboutcircuits.com/technical-articles/long-distance-bluetooth-low-energy-bit-data-paths/|title=What is Bluetooth 5? Learn about the Bit Paths Behind the New BLE Standard|author=Mark Hughes}}</ref> In mode S=2 using P=1 the range doubles approximately, while in mode S=8 using P=4 it does quadruple.<ref>{{Cite web|url=https://www.bluetooth.com/blog/exploring-bluetooth-5-going-the-distance/|title=Exploring Bluetooth 5 -Going the Distance|first=Martin|last=Woolley|date=13 February 2017|website=Bluetooth Technology Website}}</ref>\n\nThe \"LE Coded\" transmissions have not only changed the error correction scheme but it uses a fundamentally new package format. Each \"LE Coded\" burst consists of three blocks. The switch block (\"extended preamble\") is transmitted on the LE 1M PHY but it does only consist of 10 times a binaryr '00111100' pattern. These 80 bits are not FEC encoded as usual but they are sent directly to the radio channel. It is followed by a header block (\"FEC Block 1\") which is always transmitted in S=8 mode. The header block does only contain the destination address (\"Access Address\" / 32 bit) and an encoding flag (\"Coding Indicator\" / 2 Bit). The Coding Indicator defines the Pattern Mapping used for the following payload block (\"FEC Block 2\") where S=2 is possible.<ref name=edn2018>{{cite web|url=https://www.edn.com/design/test-and-measurement/4459130/Bluetooth-5-variations-complicate-PHY-testing|title=Bluetooth 5 variations complicate PHY testing|author=Dorine Gurney|date=2018-01-29|publisher=EDN Network}}</ref>\n\nThe new package format of Bluetooth 5 allows to transmit from 2 up to 256 bytes as the payload in a single burst. This is a lot more than the maximum of 31 bytes in Bluetooth 4. Along with reach measurements this should allow for localisation functions. As a whole the quadrupled range - at the same transmission power - is achieved at the expense of a lower data being at an eight with 125&nbsp;kBit. The old transmission package format, as it continues to be used in the 1M PHY and 2M PHY modes, has been named \"Uncoded\" in Bluetooth 5. The intermediate \"LE Coded\" S=2 mode allows for a  500&nbsp;kBit data rate in the payload which is both beneficial for shorter latencies as well lower power consumption as the burst time itself is shorter.\n\n== See also ==\n* [[ANT (network)|ANT]]\n* [[ANT+]]\n* [[DASH7]]\n* [[Eddystone (Google)|Eddystone]]\n* [[IEEE 802.15]] / [[IEEE 802.15.4-2006]]\n* [[Indoor positioning system]] (IPS)\n*[[LoRa]]\n* [[MyriaNed]]\n* [[Ultra-wideband]] (UWB)\n* [[UWB Forum]]\n* [[WiMedia Alliance]]\n* [[WirelessHD]]\n* [[Wireless USB]]\n* [[Zigbee]]\n* [[Z-Wave]]\n\n== Notes ==\n{{notelist}}\n\n== References ==\n{{reflist}}\n\n== Further reading ==\n* {{cite web|url=https://www.bluetooth.org/en-us/specification/adopted-specifications|title=Specifications - Bluetooth Technology Website|website=www.bluetooth.org}} \"Bluetooth 4.0 Core Specification\" \u2013 GATT is described in full in Volume 3, Part G\n\n== External links ==\n* {{official website|https://www.bluetooth.com}}\n* {{cite journal|last1=Gomez|first1=Carles|last2=Oller|first2=Joaquim|last3=Paradells|first3=Josep|title=Overview and Evaluation of Bluetooth Low Energy: An Emerging Low-Power Wireless Technology|journal=Sensors|volume=12|issue=9|date=29 August 2012|pages=11734\u201311753|issn=1424-8220|doi=10.3390/s120911734|pmc=3478807}}\n\n{{DEFAULTSORT:Bluetooth Low Energy}}\n[[Category:Bluetooth]]\n[[Category:Open standards]]\n[[Category:Wireless networking]]\n[[Category:Radio-frequency identification]]\n[[Category:Tracking]]\n[[Category:Ubiquitous computing]]\n[[Category:Wireless locating]]\n[[Category:Indoor positioning system]]\n[[Category:Wireless communication systems]]\n", "text_old": "{{short description|Low-power wireless personal area network technology designed and marketed by the Bluetooth SIG}}\n{{Use dmy dates|date=June 2013}}\n'''Bluetooth Low Energy''' ('''Bluetooth LE''', colloquially '''BLE''', formerly marketed as '''Bluetooth Smart'''<ref>{{cite web|url=https://www.bluetooth.com/what-is-bluetooth-technology/how-it-works/low-energy|archive-url=https://web.archive.org/web/20170310111443/https://www.bluetooth.com/what-is-bluetooth-technology/how-it-works/low-energy|url-status=dead|archive-date=2017-03-10|title=Bluetooth Smart or Version 4.0+ of the Bluetooth specification|website=bluetooth.com}}</ref>) is a [[Personal area network|wireless personal area network]] technology designed and marketed by the [[Bluetooth Special Interest Group]] (Bluetooth SIG) aimed at novel applications in the healthcare, [[Physical fitness|fitness]], beacons,<ref>{{Cite web |url=http://www.bluetooth.com/Pages/beacons-retail-location.aspx |title=beacons |access-date=21 November 2014 |archive-url=https://web.archive.org/web/20141024074548/http://www.bluetooth.com/Pages/beacons-retail-location.aspx |archive-date=24 October 2014 |url-status=dead |df=dmy-all }}</ref> security, and home entertainment industries.<ref>{{cite web|url=http://www.bluetooth.com/Pages/Bluetooth-Smart.aspx|title=bluetooth.com: Bluetooth Smart|author=|date=|website=bluetooth.com}}</ref>  It is independent of [[Bluetooth BR/EDR]] and has no compatibility, but BR/EDR and LE can coexist. The original specification was developed by Nokia in 2006 under the name Wibree<ref>{{Cite web|url=https://electronics.howstuffworks.com/wibree.htm|title=Is Wibree going to rival Bluetooth?|date=2006-12-01|website=HowStuffWorks|language=en|access-date=2020-04-10}}</ref>, which was integrated into Bluetooth 4.0 in December 2009 as Bluetooth Low Energy.  \n\nCompared to [[Bluetooth|Classic Bluetooth]], Bluetooth Low Energy is intended to provide considerably reduced power consumption and cost while maintaining a [[#Radio_interface|similar communication range]]. Mobile operating systems including [[iOS]], [[Android (operating system)|Android]], [[Windows Phone]] and [[BlackBerry 10|BlackBerry]], as well as [[macOS]], [[Linux]], [[Windows 8]] and [[Windows 10]], natively support Bluetooth Low Energy. \n\n== Compatibility ==\nBluetooth Low Energy is distinct from the previous (often called \"classic\") [[Bluetooth Basic Rate/Enhanced Data Rate]] (BR/EDR) protocol, but the two protocols can both be supported by one device: the [[Bluetooth#Bluetooth 4.0 + LE|Bluetooth 4.0 specification]] permits devices to implement either or both of the LE and BR/EDR systems.\n\nBluetooth Low Energy uses the same [[ISM band|2.4&nbsp;GHz radio frequencies]] as classic Bluetooth, which allows dual-mode devices to share a single [[radio antenna]], but uses a simpler [[modulation]] system.\n\n== Branding ==\n[[File:Bluetooth Smart Logo.svg|right|thumb|300px|The previously used Bluetooth Smart logo]]\nIn 2011, the Bluetooth SIG announced the Bluetooth Smart logo so as to clarify compatibility between the new low energy devices and other Bluetooth devices.<ref>{{cite press release| url=http://www.bluetooth.com/Pages/Press-Releases-Detail.aspx?ItemID=138| title=Bluetooth SIG Extends Bluetooth Brand, Introduces Bluetooth Smart Marks| date=24 October 2011| archive-url=https://web.archive.org/web/20150203053330/http://www.bluetooth.com/Pages/Press-Releases-Detail.aspx?ItemID=138| publisher=[[Bluetooth SIG]]| archive-date=3 February 2015| accessdate=2016-01-31 }}</ref>\n\n* Bluetooth Smart Ready indicates a dual-mode device compatible with both classic and low energy [[peripheral]]s.<ref>{{cite web| url=https://www.bluetooth.org/en-us/bluetooth-brand/smart-marks-faqs| title=Bluetooth Smart Marks FAQ| publisher=[[Bluetooth SIG]]| archive-url=https://web.archive.org/web/20150724115332/https://www.bluetooth.org/en-us/bluetooth-brand/smart-marks-faqs| archive-date=24 July 2015| accessdate=2016-01-31}}</ref>\n* Bluetooth Smart indicates a low energy-only device which requires either a Smart Ready or another [[Smart device]] in order to function.\n\nWith the May 2016 Bluetooth SIG branding information, the Bluetooth SIG began phasing out the Bluetooth Smart and Bluetooth Smart Ready logos and word marks and reverted to using the Bluetooth logo and word mark<ref>{{cite web|url=https://www.bluetooth.com/marketing-branding/brand-best-practices-guidelines|title=Brand Your Product - Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref> in a new blue color.\n\n== Target market ==\nThe Bluetooth SIG identifies a number of markets for low energy technology, particularly in the smart home, health, sport and fitness sectors.<ref>{{cite web|url=http://www.bluetooth.com/Pages/market.aspx|title=Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref> Cited advantages include:\n* low power requirements, operating for \"months or years\" on a [[button cell]]\n* small size and low cost\n* compatibility with a large [[installed base]] of mobile phones, tablets and computers\n\n== History ==\n[[File:Image-Wibree Logo.png|right|thumb|300px|The now-defunct Wibree logo]]\nIn 2001, researchers at [[Nokia Research Center|Nokia]] determined various scenarios that contemporary wireless technologies did not address.<ref>{{cite web |url=http://thefutureofthings.com/articles/38/nokias-wibree-and-the-wireless-zoo.html |publisher=The Future of Things |last=Genuth |first=Iddo |date=16 November 2006 |archive-url=https://web.archive.org/web/20121108120338/http://thefutureofthings.com/articles/38/nokias-wibree-and-the-wireless-zoo.html |archive-date=2012-11-08 |title=Nokia's Wibree and the Wireless Zoo}}</ref> The company began developing a wireless technology adapted from the Bluetooth standard which would provide lower power usage and cost while minimizing its differences from Bluetooth technology. The results were published in 2004 using the name Bluetooth Low End Extension.<ref>{{cite conference |last1=Honkanen |first1=M. |last2=Lappetelainen |first2=A. |last3=Kivekas |first3=K. |date=2004 |title=Low end extension for Bluetooth |conference=2004 IEEE Radio and Wireless Conference 19\u201322 September 2004 |pages= 199\u2013202 |publisher=[[IEEE]] |doi=10.1109/RAWCON.2004.1389107 }}</ref>\n\nAfter further development with partners, in particular [[Logitech]] and within the European project MIMOSA,{{efn|MIMOSA stands for ''Microsystems platform for mobile services and applications'',<ref>{{Cite web |url=http://www.mimosa-fp6.com/ |title=Mimosa WebSite: Home |archive-url=https://web.archive.org/web/20160804035320/http://www.mimosa-fp6.com/ |archive-date=2016-08-04 |access-date=2016-08-18 |publisher=MIMOSA FP6 project}}</ref> and is the name of one of the projects funded by the European [[Framework Programmes for Research and Technological Development]]}} and actively promoted and supported  by [[STMicroelectronics]] since its early stage,{{efn|STMicroelectronics went on to release a processor to support implementation of the standard<ref>{{Cite web |url=http://www.st.com/bluenrg-ms |title=BlueNRG-MS \u2013 Bluetooth Low Energy Network Processor supporting Bluetooth 4.1 core specification \u2013 STMicroelectronics |access-date=2016-08-18}}</ref>}} the technology was released to the public in October 2006 with the brand name Wibree.<ref>{{cite news |url=http://news.bbc.co.uk/2/hi/technology/5403564.stm |title=Bluetooth rival unveiled by Nokia |publisher=BBC News |date=4 October 2006 |access-date=2018-04-27}}</ref> After negotiations with Bluetooth SIG members, an agreement was reached in June 2007 to include Wibree in a future Bluetooth specification as a Bluetooth ultra low power technology.<ref>{{cite press release |url=http://www.wibree.com/press/Wibree_pressrelease_final_1206.pdf |title=Wibree forum merges with Bluetooth SIG |date=12 June 2007 |publisher=Nokia |archive-date=2007-06-16 |archive-url=https://web.archive.org/web/20070616082658/http://www.wibree.com/press/Wibree_pressrelease_final_1206.pdf}}</ref><ref>{{cite news |title=Wibree becomes ULP Bluetooth |url=http://www.electronicsweekly.com/Articles/2007/06/12/41582/wibree-becomes-ulp-bluetooth.htm |date=12 June 2007 |last=Reynolds |first=Melanie |website=ElectronicsWeekly.com |publisher=Reed Business Information Limited |accessdate=2008-09-09 |archive-date=2008-09-07 |archive-url=https://web.archive.org/web/20080907170808/http://www.electronicsweekly.com/Articles/2007/06/12/41582/wibree-becomes-ulp-bluetooth.htm }}</ref>\n\nThe technology was marketed as Bluetooth Smart and integration into version 4.0 of the Core Specification was completed in early 2010.<ref>{{cite web |url=https://www.engadget.com/2011/10/25/bluetooth-sig-unveils-smart-marks-explains-v4-0-compatibility-w/ |title=Bluetooth SIG unveils Smart Marks, explains v4.0 compatibility with unnecessary complexity |last=Pollicino |first=Joe |date=25 October 2011 |website=Engadget |publisher=[[Oath Tech Network]] [[AOL Tech]] |accessdate=2018-04-17}}</ref> The first smartphone to implement the 4.0 specification was the [[iPhone 4S]], released in October 2011.<ref>{{cite web |last=O'Brien |first=Terrence |date=12 October 2011 |title=iPhone 4S claims title of first Bluetooth 4.0 smartphone, ready to stream data from your cat |url=https://www.engadget.com/2011/10/12/iphone-4s-claims-title-of-first-bluetooth-4-0-smartphone-ready| publisher=Engadget |accessdate=2014-02-09}}</ref> A number of other manufacturers released Bluetooth Low Energy Ready devices in 2012.\n\nThe Bluetooth SIG officially unveiled Bluetooth 5 on 16 June 2016 during a media event in London. One change on the marketing side is that the point number was dropped, so it now just called Bluetooth 5 (and not Bluetooth 5.0 or 5.0 LE like for Bluetooth 4.0). This decision was made to \"simplifying marketing, and communicating user benefits more effectively\".<ref>{{Cite web|url=https://www.cnx-software.com/2016/06/10/bluetooth-5-promises-four-times-the-speed-twice-the-range-of-bluetooth-4-0-le-transmissions/|title=Bluetooth 5 Promises Four times the Range, Twice the Speed of Bluetooth 4.0 LE Transmissions|website=www.cnx-software.com|access-date=2017-11-08|date=10 June 2016}}</ref> On the technical side, Bluetooth 5 will quadruple the range by using increased transmit power or coded physical layer, double the speed by using optional half of the symbol time compared to Bluetooth 4.x, and provide an eight-fold increase in data broadcasting capacity by increasing the advertising data length{{clarify|date=May 2017}} of low energy Bluetooth transmissions compared to Bluetooth 4.x, which could be important for [[Internet of things|IoT]] applications where nodes are connected throughout a whole house.<ref>{{Cite web|url=https://www.bluetooth.com/news/pressreleases/2016/06/16/-bluetooth-5-quadruples-rangedoubles-speedincreases-data-broadcasting-capacity-by-800|title=Bluetooth\u00ae 5 Quadruples Range, Doubles Speed, Increases Data Broadcasting Capacity by 800% {{!}} Bluetooth Technology Website|website=www.bluetooth.com|access-date=2017-11-08|archive-url=https://web.archive.org/web/20181209055417/https://www.bluetooth.com/news/pressreleases/2016/06/16/-bluetooth-5-quadruples-rangedoubles-speedincreases-data-broadcasting-capacity-by-800|archive-date=9 December 2018|url-status=dead}}</ref>\n\nThe Bluetooth SIG released Mesh Profile and Mesh Model specifications officially on 18 July 2017. [[Bluetooth mesh networking|Mesh specification]] enables using Bluetooth Low Energy for many-to-many device communications for home automation, sensor networks and other applications.<ref>{{Cite web|url=https://www.bluetooth.com/news/pressreleases/2017/07/bluetooth-sig-announces-mesh-networking-capability|title=Bluetooth SIG Announces Mesh Networking Capability {{!}} Bluetooth Technology Website|website=www.bluetooth.com|access-date=2017-07-20|archive-url=https://web.archive.org/web/20170908061136/https://www.bluetooth.com/news/pressreleases/2017/07/bluetooth-sig-announces-mesh-networking-capability|archive-date=8 September 2017|url-status=dead}}</ref>\n\n== Applications ==\nBorrowing from the original Bluetooth specification, the Bluetooth SIG defines several [[Bluetooth profile|profiles]] \u2014 specifications for how a device works in a particular application \u2014 for low energy devices. Manufacturers are expected to implement the appropriate specifications for their device in order to ensure compatibility. A device may contain implementations of multiple profiles.\n\nThe majority of current low energy application profiles are based on the Generic Attribute Profile (GATT), a general specification for sending and receiving short pieces of data, known as attributes, over a low energy link.<ref>Bluetooth SIG [https://www.bluetooth.org/en-us/specification/adopted-specifications Adopted specifications]</ref> The [[Bluetooth mesh]] profile is an exception to this rule, being based on the General Access Profile (GAP).<ref>{{cite web|url=http://www.bluetooth.com/mesh|title=Bluetooth Mesh and the IOT|last=bluetooth|date=|website=www.bluetooth.com}}</ref>\n\n=== Mesh profiles ===\nBluetooth mesh profiles use Bluetooth Low Energy to communicate with other Bluetooth Low Energy devices in the network. Each device can pass the information forward to other Bluetooth Low Energy devices creating a \"mesh\" effect. For example, switching off an entire building of lights from a single smartphone.<ref>{{cite web|url=https://www.bluetooth.com/markets/smart-building|title=Smart Building - Bluetooth Technology Website|author=|date=|website=www.bluetooth.com}}</ref>\n\n* MESH (Mesh Profile) \u2014 for base mesh networking.\n* MMDL ([[Bluetooth mesh networking#Mesh models|Mesh models]]) \u2014 for application layer definitions. Term \"model\" is used in mesh specifications instead of \"profile\" to avoid ambiguities.\n\n=== Health care profiles ===\nThere are many profiles for Bluetooth Low Energy devices in healthcare applications. [[The Continua Health Alliance]] consortium promotes these in cooperation with the Bluetooth SIG.\n\n* BLP (Blood Pressure Profile) \u2014 for blood pressure measurement.\n* HTP (Health Thermometer Profile) \u2014 for medical temperature measurement devices.\n* GLP (Glucose Profile) \u2014 for [[blood glucose]] monitors.\n* CGMP (Continuous Glucose Monitor Profile)\n\n=== Sports and fitness profiles ===\nProfiles for sporting and fitness accessories include:\n* BCS (Body Composition Service)\n* CSCP (Cycling Speed and Cadence Profile) \u2014 for sensors attached to a [[bicycle]] or [[exercise bike]] to measure [[Cadence (cycling)|cadence]] and wheel speed.\n* CPP (Cycling Power Profile)\n* HRP (Heart Rate Profile) \u2014 for devices which measure [[heart rate]]\n* LNP (Location and Navigation Profile)\n* RSCP (Running Speed and Cadence Profile) \n* WSP (Weight Scale Profile)\n\n=== Internet connectivity ===\n* IPSP (Internet Protocol Support Profile)\n\n=== Generic sensors ===\n* ESP (Environmental Sensing Profile)\n* UDS (User Data Service)\n\n=== HID connectivity ===\n* HOGP ([[Human interface device|HID]] over GATT Profile) allowing Bluetooth LE-enabled Wireless mice, keyboards and other devices offering long-lasting battery life.\n\n=== Proximity sensing ===\n\"[[Electronic leash]]\" applications are well suited to the long battery life possible for 'always-on' devices.<ref>{{Cite news|url=http://www.gsm-modem.de/M2M/m2m-apps/casio-bluetooth-low-energy-watch/|title=Casio Bluetooth Low Energy Watch communicates with smartphones|date=2011-03-07|work=M2M / IoT hints and tips|access-date=2017-11-08|language=en-US}}</ref> Manufacturers of [[iBeacon]] devices implement the appropriate specifications for their device to make use of proximity sensing capabilities supported by [[Apple Inc.|Apple]]'s [[iOS devices]].<ref>{{Cite web|url=http://appleinsider.com/articles/13/06/19/inside-ios-7-ibeacons-enhance-apps-location-awareness-via-bluetooth-le|title=Inside iOS 7: iBeacons enhance apps' location awareness via Bluetooth LE|website=AppleInsider|language=en-US|access-date=2017-11-08}}</ref>\n\nRelevant application profiles include:\n* FMP \u2014 the \"find me\" profile \u2014 allows one device to issue an alert on a second misplaced device.<ref>{{cite web|url=https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=239389|title=Find Me Profile specification|author=|date=|website=bluetooth.org}}</ref>\n* PXP \u2014 the proximity profile \u2014 allows a proximity monitor to detect whether a proximity reporter is within a close range. Physical proximity can be estimated using the radio receiver's [[RSSI]] value, although this does not have absolute calibration of distances. Typically, an alarm may be sounded when the distance between the devices exceeds a set threshold.\n\n=== Alerts and time profiles ===\n* The phone alert status profile and alert notification profile allow a client device to receive notifications such as incoming call alerts from another device.\n* The time profile allows current time and [[time zone]] information on a client device to be set from a server device, such as between a wristwatch and a mobile phone's [[Network Time Protocol|network time]].\n\n=== Battery ===\n\n* The Battery Service exposes the Battery State and Battery Level of a single battery or set of batteries in a device.\n\n=== Audio ===\nAnnounced in January 2020, LE Audio will allow the protocol to carry sound and add features such as one set of headphones connecting to multiple audio sources or multiple headphones connecting to one source<ref>{{Cite news|url=https://www.wired.com/story/bluetooth-le-audio/|title=The New Version of Bluetooth Is Here to Fix Your Headphones|work=Wired|access-date=2020-02-03|language=en|issn=1059-1028}}</ref><ref>{{Cite web|url=https://www.macrumors.com/2020/01/06/bluetooth-sig-debuts-le-audio/|title=Bluetooth SIG Announces 'LE Audio' With Audio Sharing, Lower Data Consumption, Hearing Aid Support and More|last=Clover|first=Juli|website=www.macrumors.com|language=en|access-date=2020-02-03}}</ref> it will also add support for hearing aids<ref>{{Cite web|url=https://source.android.com/devices/bluetooth/asha|title=Hearing Aid Audio Support Using Bluetooth LE|website=Android Open Source Project|language=en|access-date=2020-02-03}}</ref>.\n\n== Implementation ==\n\n=== Chip ===\nStarting in late 2009, Bluetooth Low Energy [[integrated circuits]] were announced by a number of manufacturers. These ICs commonly use [[software radio]] so updates to the specification can be accommodated through a [[firmware]] upgrade.\n\n=== Hardware ===\nCurrent mobile devices are commonly released with hardware and software support for both classic Bluetooth and the Bluetooth Low Energy.\n\n===Operating systems===\n* iOS 5 and later<ref>{{cite web|url=https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS5.html#//apple_ref/doc/uid/TP30915195-SW1|title=iOS 5.0|publisher=Apple|accessdate=2 June 2018}}</ref>\n* Windows Phone 8.1<ref>{{cite web |url=http://blogs.msdn.com/b/thunbrynt/archive/2014/05/05/windows-phone-8-1-for-developers-introducing-bluetooth-le.aspx |publisher=MSDN Blogs |title=Windows Phone 8.1 for Developers\u2013Introducing Bluetooth LE |author=Brynte |date=2014-05-04 |accessdate=2014-05-18}}</ref>\n* Windows 8 and later<ref>{{cite web|url=https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.aspx|title=Windows.Devices.Bluetooth Namespace - UWP app developer|last=wdg-dev-content|date=|website=msdn.microsoft.com}}</ref>\n* Android 4.3 and later<ref>{{cite web|url=http://developer.android.com/guide/topics/connectivity/bluetooth-le.html|title=Bluetooth low energy overview - Android Developers|author=|date=|website=Android Developers}}</ref>\n* BlackBerry 10<ref>{{cite web|url=http://press.blackberry.com/press/2013/blackberry-supports-bluetooth-smart-ready-to-drive-m2m-applicati.html|title=BlackBerry Press Room - Official News, Events & Product Releases|author=|date=|website=press.blackberry.com}}</ref>\n* Linux 3.4 and later through [[Bluetooth stack#BlueZ|BlueZ]] 5.0<ref>{{cite web |url=http://padovan.org/blog/2013/02/the-big-changes-of-bluez-5/ |title=The big changes of BlueZ 5|author=Gustavo Padovan|date=2013-02-22|quote=As the MGMT interface is the only one to support the new Bluetooth Low Energy devices, BlueZ developers decided to drop support for the old interface once MGMT was completed. As a result, you need to be running Linux Kernel 3.4 or newer to use BlueZ 5.}}</ref>\n* Unison OS 5.2 <ref>{{cite web|url=http://rowebots.com/embedded_system_software/wireless_protocols|title=Wireless Protocols - WiFi, Bluetooth, BT, BTLE, GPS, GPRS, 6loWPAN, Zigbee, RoweBots Bluetooth Stack - RoweBots|author=|date=|website=rowebots.com}}</ref>\n*macOS 10.10\n\n== Technical details ==\n\n=== Radio interface ===\nBluetooth Low Energy technology operates in the same spectrum range (the 2.400\u20132.4835&nbsp;GHz [[ISM band]]) as classic Bluetooth technology, but uses a different set of channels. Instead of the classic Bluetooth seventy-nine 1-MHz channels, Bluetooth Low Energy has forty 2-MHz channels. Within a channel, data is transmitted using [[GFSK|Gaussian frequency shift modulation]], similar to classic Bluetooth's Basic Rate scheme. The bit rate is 1&nbsp;Mbit/s (with an option of 2&nbsp;Mbit/s in Bluetooth 5), and the maximum transmit power is 10&nbsp;mW (100&nbsp;mW in Bluetooth 5). Further details are given in Volume 6 Part A (Physical Layer Specification) of the [https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=229737 Bluetooth Core Specification V4.0].\n\nBluetooth Low Energy uses [[frequency hopping]] to counteract narrowband interference problems. Classic Bluetooth also uses frequency hopping but the details are different; as a result, while both [[Federal Communications Commission|FCC]] and [[ETSI]] classify Bluetooth technology as an [[FHSS]] scheme, Bluetooth Low Energy is classified as a system using digital modulation techniques or a [[direct-sequence spread spectrum]].<ref>Bluetooth Special Interest Group [https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=237781 \"Bluetooth Low Energy Regulatory Aspects\"], April 2011</ref>\n\n{| class=\"wikitable\"\n|-\n! Technical specification\n! Bluetooth Basic Rate/Enhanced Data Rate technology\n! Bluetooth Low Energy technology\n|-\n| Distance/range (theoretical max.)\n| {{convert|100|m|ft|abbr=on}}\n| <100 m (<330&nbsp;ft)\n|-\n| Over the air data rate\n| 1\u20133 Mbit/s\n| 125 kbit/s \u2013 1 Mbit/s \u2013 2 Mbit/s\n|-\n| Application throughput\n| 0.7\u20132.1 Mbit/s\n| 0.27-1.37 Mbit/s <ref>Bluetooth 5 & BLE: Achieving maximum throughput [https://www.novelbits.io/bluetooth-5-speed-maximum-throughput/]</ref>\n|-\n| Active slaves\n| 7\n| Not defined; implementation dependent\n|-\n| Security\n| 56/128-bit and application layer user defined\n| 128-bit [[Advanced Encryption Standard|AES]] in [[CCM mode]] and application layer user defined\n|-\n| Robustness\n| Adaptive fast frequency hopping, [[forward error correction|FEC]], fast&nbsp;[[acknowledgement (data networks)|ACK]]\n| Adaptive frequency hopping, Lazy Acknowledgement, 24-bit CRC, 32-bit Message Integrity Check\n|-\n| Latency (from a non-connected state)\n| Typically 100&nbsp;ms\n| 6&nbsp;ms\n|-\n| Minimum total time to send data (det. battery life)\n| 0.625&nbsp;ms\n| 3&nbsp;ms <ref>{{cite web |url=http://www.bluetooth.com/Pages/low-energy-tech-info.aspx |title=Bluetooth Low Energy Technology - Technical Information |publisher=Bluetooth SIG |archive-date=2014-02-14 |archive-url=https://web.archive.org/web/20140214120404/http://www.bluetooth.com/Pages/low-energy-tech-info.aspx}}</ref>\n|-\n| Voice capable\n| Yes\n| No\n|-\n| Network topology\n| [[Scatternet]]\n| [[Scatternet]]\n|-\n| Power consumption\n| 1&nbsp;W as the reference\n| 0.01\u20130.50&nbsp;W (depending on use case)\n|-\n| Peak current consumption\n| <30&nbsp;mA\n| <15&nbsp;mA\n|-\n| Service discovery\n| Yes\n| Yes\n|-\n| Profile concept\n| Yes\n| Yes\n|-\n| Primary use cases\n| Mobile phones, gaming, headsets, stereo audio streaming, smart homes, wearables, automotive, PCs, security, proximity, healthcare, sports & fitness, etc.\n| Mobile phones, gaming, smart homes, wearables, automotive, PCs, security, proximity, healthcare, sports & fitness, Industrial, etc.\n|}\n\nMore technical details may be obtained from official specification as published by the Bluetooth SIG. Note that power consumption is not part of the Bluetooth specification.\n\n=== Advertising and discovery ===\nBLE devices are detected through a procedure based on broadcasting advertising packets. This is done using 3 separate channels (frequencies), in order to reduce interference. The advertising device sends a packet on at least one of these three channels, with a repetition period called the advertising interval. For reducing the chance of multiple consecutive collisions, a random delay of up to 10 milliseconds is added to each advertising interval. The scanner listens to the channel for a duration called the scan window, which is periodically repeated every scan interval.\n\nThe discovery latency is therefore determined by a probabilistic process and depends on the three parameters (viz., the advertising interval, the scan interval and the scan window). The discovery scheme of BLE adopts a periodic-interval based technique, for which upper bounds on the discovery latency can be inferred for most parametrizations. While the discovery latencies of BLE can be approximated by models<ref>{{Cite journal|title=PI-LatencyComp - Neighbor Discovery in BLE-Like protocols|url=https://codeocean.com/2017/08/08/pi-latencycomp-neighbor-discovery-in-ble-like-protocols|journal=CodeOcean|volume=|pages=|doi=10.24433/co.fec70c60-c265-4eea-9e37-8f7222ec5c92|via=|year=2017|last1=Kindt|first1=Philipp H.}}</ref> for purely periodic interval-based protocols, the random delay added to each advertising interval and the three-channel discovery can cause deviations from these predictions, or potentially lead to unbounded latencies for certain parametrizations.<ref>{{Cite journal|last=Kindt|first=P. H.|last2=Saur|first2=M.|last3=Balszun|first3=M.|last4=Chakraborty|first4=S.|date=2017|title=Neighbor Discovery Latency in BLE-Like Protocols|journal=IEEE Transactions on Mobile Computing|volume=PP|issue=99|pages=617\u2013631|doi=10.1109/tmc.2017.2737008|issn=1536-1233|arxiv=1509.04366}}</ref>\n\n===Security ===\n     \nBluetooth LE comes with very low, and in many cases broken security. BTLE or Bluetooth Smart, is a new modulation mode and link layer packet format targeting low powered devices and is found in recent high-end smart phones, sports devices, sensors, and will soon appear in many medical devices. Unfortunately the security implementation is broken with the encryption of any Bluetooth LE Energy link easily being rendered useless. This flaw in security can allow any device nearby to eavesdrop on Bluetooth Low Energy conversations. This includes packets being intercepted and reassembled into connection streams, as well as injection attacks.<ref>{{cite journal|last1=Sarkar|first1=Sopan|last2=Liu|first2=Jianqing|last3=Jovanov|first3=Emil|title=A Robust Algorithm for Sniffing BLE Long-Lived Connections in Real-Time|journal=2019 IEEE Global Communications Conference (GLOBECOM)|year=2019|pages=1\u20136|doi=10.1109/GLOBECOM38437.2019.9014318}}</ref><!--Paragraph is section simply recopied on 13 Apr 20 after deletion in 2014, needs updating and expanding, see Talk. A detailed reference which is useful, though considered not to be WP_reliable (hence section deletion): <ref>[http://0b4af6cdc2f0c5998459-c0245c5c937c5dedcca3f1764ecc9b2f.r43.cf2.rackcdn.cm/12053-woot13-ryan.pdf Bluetooth: With Low Energy comes Low Security]</ref>-->\n\nBluetooth LE has been suggested as the basis of an app for tracing contacts of people during the [[Covid pandemic]] of 2020, silently tracking other phones which come within BT LE range of a person's phone, allowing those who have been in sustained proximity with a possibly infected person to be notified without identifying the person. However, a draft government memo said that ministers might be given the ability to identify people from their mobile phones, which has been criticised as a potential security breach.<ref>{{cite web |url=https://www.theguardian.com/world/2020/apr/13/nhs-coronavirus-app-memo-discussed-giving-ministers-power-to-de-anonymise-users |title=NHS coronavirus app: memo discussed giving ministers power to 'de-anonymise' users |newspaper=The Guardian|author1=David Pegg|author2=Paul Lewis|date= 13 April 2020}}</ref>\n\n=== Software model ===\nAll Bluetooth Low Energy devices use the Generic Attribute Profile (GATT). The [[application programming interface]] offered by a Bluetooth Low Energy aware operating system will typically be based around GATT concepts.<ref>See for example Apple's [https://developer.apple.com/library/ios/#documentation/CoreBluetooth/Reference/CoreBluetooth_Framework/_index.html Core Bluetooth] framework</ref> GATT has the following terminology:\n\n;Client\n:A device that initiates GATT commands and requests, and accepts responses, for example, a computer or smartphone.\n;Server\n:A device that receives GATT commands and requests, and returns responses, for example, a temperature sensor.\n;Characteristic\n:A data value transferred between client and server, for example, the current battery voltage.\n;Service\n:A collection of related characteristics, which operate together to perform a particular function. For instance, the ''Health Thermometer'' service includes characteristics for a temperature measurement value, and a time interval between measurements.\n;Descriptor\n:A descriptor provides additional information about a characteristic. For instance, a temperature value characteristic may have an indication of its units (e.g. Celsius), and the maximum and minimum values which the sensor can measure. Descriptors are optional \u2013 each characteristic can have any number of descriptors.\n\nSome service and characteristic values are used for administrative purposes \u2013 for instance, the model name and serial number can be read as standard characteristics within the ''Generic Access'' service. Services may also include other services as sub-functions; the main functions of the device are so-called ''primary'' services, and the auxiliary functions they refer to are ''secondary'' services.\n\n==== Identifiers ====\n\nServices, characteristics, and descriptors are collectively referred to as ''attributes'', and identified by [[Universally unique identifier|UUID]]s. Any implementer may pick a random or pseudorandom UUID for [[Proprietary format|proprietary]] uses, but the Bluetooth SIG have reserved a range of UUIDs (of the form ''{{not a typo|xxxxxxxx-0000-1000-8000-00805F9B34FB}}'' <ref>See sec 2.5.1 of the ''Bluetooth 4.0 Core Specification''</ref>) for standard attributes. For efficiency, these identifiers are represented as 16-bit or 32-bit values in the protocol, rather than the 128 bits required for a full UUID. For example, the ''Device Information'' service has the short code 0x180A, rather than {{not a typo|0000180A-0000-1000-}}... . The full list is kept in the [https://www.bluetooth.com/specifications/gatt/services/ Bluetooth Assigned Numbers] document online.\n\n==== GATT operations ====\n\nThe GATT protocol provides a number of commands for the client to discover information about the server. These include:\n* Discover UUIDs for all primary services\n* Find a service with a given UUID\n* Find secondary services for a given primary service\n* Discover all characteristics for a given service\n* Find characteristics matching a given UUID\n* Read all descriptors for a particular characteristic\n\nCommands are also provided to ''read'' (data transfer from server to client) and ''write'' (from client to server) the values of characteristics:\n* A value may be read either by specifying the characteristic's UUID, or by a ''handle'' value (which is returned by the information discovery commands above).\n* Write operations always identify the characteristic by handle, but have a choice of whether or not a response from the server is required.\n* 'Long read' and 'Long write' operations can be used when the length of the characteristic's data exceeds the [[Maximum transmission unit|MTU]] of the radio link.\n\nFinally, GATT offers ''notifications'' and ''indications''. The client may request a notification for a particular characteristic from the server. The server can then send the value to the client whenever it becomes available. For instance, a temperature sensor server may notify its client every time it takes a measurement. This avoids the need for the client to [[Polling (computer science)|poll]] the server, which would require the server's radio circuitry to be constantly operational.\n\nAn ''indication'' is similar to a notification, except that it requires a response from the client, as confirmation that it has received the message.\n\n==== Battery impact ====\n\n[[File:BLE Chipsets Power.png|thumb|upright|300px|Bluetooth Low Energy chipset power consumption profiles with different configuration parameters, as per The Hitchhikers Guide to iBeacon Hardware by Aislelabs.<ref>{{cite web|url=http://www.aislelabs.com/reports/beacon-guide/|title=The Hitchhikers Guide to iBeacon Hardware: A Comprehensive Report by Aislelabs|publisher= Aislelabs|date=2014-10-03|accessdate=2014-10-07}}</ref>]]\n\nBluetooth Low Energy is designed to enable devices to have very low power consumption. Several chipmakers including [[Cambridge Silicon Radio]], [[Dialog Semiconductor]], [[Nordic Semiconductor]], [[STMicroelectronics]], [[Cypress Semiconductor]], [[Silicon Labs]] and [[Texas Instruments]] had introduced Bluetooth Low Energy optimized chipsets by 2014. Devices with peripheral and central roles have different power requirements. A study by beacon software company [[Aislelabs]] reported that peripherals such as proximity beacons usually function for 1\u20132 years powered by a 1,000mAh coin cell battery.<ref>{{cite web|url=https://gigaom.com/2014/11/04/how-to-find-the-best-beacon-hardware-for-everything-from-stores-to-cities/|title=How to find the best beacon hardware for everything from stores to cities|publisher= GigaOM|date=2014-10-04|accessdate=2014-10-11}}</ref> This is possible because of the power efficiency of Bluetooth Low Energy protocol, which only transmits small packets as compared to Bluetooth Classic which is also suitable for audio and high bandwidth data.\n\nIn contrast, a continuous scan for the same beacons in central role can consume 1,000 mAh in a few hours. Android and iOS devices also have very different battery impact depending on type of scans and the number of Bluetooth Low Energy devices in the vicinity.<ref>{{cite web|url=https://gigaom.com/2014/08/14/in-terms-of-battery-life-android-devices-are-more-optimized-for-ibeacons-than-iphones/|title=In terms of battery life, Android devices are more optimized for iBeacons than iPhones|publisher= GigaOM|date=2014-08-14|accessdate=2014-10-07}}</ref> With newer chipsets and advances in software, by 2014 both Android and iOS phones had negligible power consumption in real-life Bluetooth Low Energy use.<ref>{{cite web|url=http://www.aislelabs.com/reports/ibeacon-battery-drain-iphones/|title=iBeacon Battery Drain on Apple vs Android: A Technical Report|publisher= Aislelabs|date=2014-08-14|accessdate=2014-08-18}}</ref>\n\n=== 2M PHY ===\nBluetooth 5 has introduced a new transmission mode with a doubled [[symbol rate]]. Bluetooth LE has been traditionally transmitting 1 bit per symbol so that theoretically the data rate doubles as well. However the new mode doubles the [[Bandwidth (signal processing)|bandwidth]] from about 1&nbsp;MHz to about 2&nbsp;MHz which makes for more interferences on the edge regions. The partitioning of the ISM frequency band has not changed being still 40&nbsp;channels spaced at a distance of 2&nbsp;MHz.<ref name=edn2017>{{cite web|url=https://www.edn.com/design/test-and-measurement/4459086/Bluetooth-5--More-speeds--more-range--new-RF-tests|title=Bluetooth 5: More speeds, more range, new RF tests|author=Allen Henley|date=2017-11-21|publisher=EDN Network}}</ref> This is an essential differences over Bluetooth 2 EDR which did also double the data rate but it is doing that by employing a \u03c0/4-DQPSK or 8-DPSK [[phase modulation]] on a 1&nbsp;MhZ channel while Bluetooth 5 continues to use just frequency shift keying.\n\nThe traditional transmission of 1 Mbit in the Bluetooth Basic Rate was renamed 1M PHY in Bluetooth 5. The new mode at a doubled symbol speed was introduced as the 2M PHY. In Bluetooth Low Energy every transmission starts on the 1M PHY leaving it to the application to initiate a switch to the 2M PHY. In that case both sender and receiver will switch to the 2M PHY for transmissions. This is designed to facilitate firmware updates where the application can switch back to a traditional 1M PHY in case of errors. In reality the target device should be close to the programming station (at a few meters).\n\n=== LE Coded ===\nBluetooth 5 has introduced two new modes with lower data rate. The symbol rate of the new \"Coded PHY\" is the same as the Base Rate 1M PHY but in mode S=2 there are two symbols transmitted per data bit. In mode S=2 only a simple Pattern Mapping P=1 is used which simply produces the same stuffing bit for each input data bit. In mode S=8 there are eight symbols per data bit with a Pattern Mapping P=4 producing contrasting symbol sequences - a 0 bit is encoded as binary 0011 and a 1 bit is encoded as binary 1100.<ref>{{cite web|url=https://www.allaboutcircuits.com/technical-articles/long-distance-bluetooth-low-energy-bit-data-paths/|title=What is Bluetooth 5? Learn about the Bit Paths Behind the New BLE Standard|author=Mark Hughes}}</ref> In mode S=2 using P=1 the range doubles approximately, while in mode S=8 using P=4 it does quadruple.<ref>{{Cite web|url=https://www.bluetooth.com/blog/exploring-bluetooth-5-going-the-distance/|title=Exploring Bluetooth 5 -Going the Distance|first=Martin|last=Woolley|date=13 February 2017|website=Bluetooth Technology Website}}</ref>\n\nThe \"LE Coded\" transmissions have not only changed the error correction scheme but it uses a fundamentally new package format. Each \"LE Coded\" burst consists of three blocks. The switch block (\"extended preamble\") is transmitted on the LE 1M PHY but it does only consist of 10 times a binaryr '00111100' pattern. These 80 bits are not FEC encoded as usual but they are sent directly to the radio channel. It is followed by a header block (\"FEC Block 1\") which is always transmitted in S=8 mode. The header block does only contain the destination address (\"Access Address\" / 32 bit) and an encoding flag (\"Coding Indicator\" / 2 Bit). The Coding Indicator defines the Pattern Mapping used for the following payload block (\"FEC Block 2\") where S=2 is possible.<ref name=edn2018>{{cite web|url=https://www.edn.com/design/test-and-measurement/4459130/Bluetooth-5-variations-complicate-PHY-testing|title=Bluetooth 5 variations complicate PHY testing|author=Dorine Gurney|date=2018-01-29|publisher=EDN Network}}</ref>\n\nThe new package format of Bluetooth 5 allows to transmit from 2 up to 256 bytes as the payload in a single burst. This is a lot more than the maximum of 31 bytes in Bluetooth 4. Along with reach measurements this should allow for localisation functions. As a whole the quadrupled range - at the same transmission power - is achieved at the expense of a lower data being at an eight with 125&nbsp;kBit. The old transmission package format, as it continues to be used in the 1M PHY and 2M PHY modes, has been named \"Uncoded\" in Bluetooth 5. The intermediate \"LE Coded\" S=2 mode allows for a  500&nbsp;kBit data rate in the payload which is both beneficial for shorter latencies as well lower power consumption as the burst time itself is shorter.\n\n== See also ==\n* [[ANT (network)|ANT]]\n* [[ANT+]]\n* [[DASH7]]\n* [[Eddystone (Google)|Eddystone]]\n* [[IEEE 802.15]] / [[IEEE 802.15.4-2006]]\n* [[Indoor positioning system]] (IPS)\n*[[LoRa]]\n* [[MyriaNed]]\n* [[Ultra-wideband]] (UWB)\n* [[UWB Forum]]\n* [[WiMedia Alliance]]\n* [[WirelessHD]]\n* [[Wireless USB]]\n* [[Zigbee]]\n* [[Z-Wave]]\n\n== Notes ==\n{{notelist}}\n\n== References ==\n{{reflist}}\n\n== Further reading ==\n* {{cite web|url=https://www.bluetooth.org/en-us/specification/adopted-specifications|title=Specifications - Bluetooth Technology Website|website=www.bluetooth.org}} \"Bluetooth 4.0 Core Specification\" \u2013 GATT is described in full in Volume 3, Part G\n\n== External links ==\n* {{official website|https://www.bluetooth.com}}\n* {{cite journal|last1=Gomez|first1=Carles|last2=Oller|first2=Joaquim|last3=Paradells|first3=Josep|title=Overview and Evaluation of Bluetooth Low Energy: An Emerging Low-Power Wireless Technology|journal=Sensors|volume=12|issue=9|date=29 August 2012|pages=11734\u201311753|issn=1424-8220|doi=10.3390/s120911734|pmc=3478807}}\n\n{{DEFAULTSORT:Bluetooth Low Energy}}\n[[Category:Bluetooth]]\n[[Category:Open standards]]\n[[Category:Wireless networking]]\n[[Category:Radio-frequency identification]]\n[[Category:Tracking]]\n[[Category:Ubiquitous computing]]\n[[Category:Wireless locating]]\n[[Category:Indoor positioning system]]\n[[Category:Wireless communication systems]]\n", "name_user": "1.132.109.50", "label": "unsafe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Bluetooth_Low_Energy"}
